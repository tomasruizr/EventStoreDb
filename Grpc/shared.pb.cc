// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shared.proto

#include "shared.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_shared_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamIdentifier_shared_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_shared_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UUID_Structured_shared_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fempty_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_google_2fprotobuf_2fempty_2eproto;
namespace event_store {
namespace client {
class UUID_StructuredDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UUID_Structured> _instance;
} _UUID_Structured_default_instance_;
class UUIDDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UUID> _instance;
  const ::event_store::client::UUID_Structured* structured_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_;
} _UUID_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Empty> _instance;
} _Empty_default_instance_;
class StreamIdentifierDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamIdentifier> _instance;
} _StreamIdentifier_default_instance_;
class AllStreamPositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AllStreamPosition> _instance;
} _AllStreamPosition_default_instance_;
class WrongExpectedVersionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WrongExpectedVersion> _instance;
  ::PROTOBUF_NAMESPACE_ID::uint64 current_stream_revision_;
  const PROTOBUF_NAMESPACE_ID::Empty* current_no_stream_;
  ::PROTOBUF_NAMESPACE_ID::uint64 expected_stream_position_;
  const PROTOBUF_NAMESPACE_ID::Empty* expected_any_;
  const PROTOBUF_NAMESPACE_ID::Empty* expected_stream_exists_;
  const PROTOBUF_NAMESPACE_ID::Empty* expected_no_stream_;
} _WrongExpectedVersion_default_instance_;
class AccessDeniedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccessDenied> _instance;
} _AccessDenied_default_instance_;
class StreamDeletedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamDeleted> _instance;
} _StreamDeleted_default_instance_;
class TimeoutDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Timeout> _instance;
} _Timeout_default_instance_;
class UnknownDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Unknown> _instance;
} _Unknown_default_instance_;
class InvalidTransactionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvalidTransaction> _instance;
} _InvalidTransaction_default_instance_;
class MaximumAppendSizeExceededDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MaximumAppendSizeExceeded> _instance;
} _MaximumAppendSizeExceeded_default_instance_;
class BadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BadRequest> _instance;
} _BadRequest_default_instance_;
}  // namespace client
}  // namespace event_store
static void InitDefaultsscc_info_AccessDenied_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_AccessDenied_default_instance_;
    new (ptr) ::event_store::client::AccessDenied();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::AccessDenied::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccessDenied_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccessDenied_shared_2eproto}, {}};

static void InitDefaultsscc_info_AllStreamPosition_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_AllStreamPosition_default_instance_;
    new (ptr) ::event_store::client::AllStreamPosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::AllStreamPosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AllStreamPosition_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AllStreamPosition_shared_2eproto}, {}};

static void InitDefaultsscc_info_BadRequest_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_BadRequest_default_instance_;
    new (ptr) ::event_store::client::BadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::BadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BadRequest_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BadRequest_shared_2eproto}, {}};

static void InitDefaultsscc_info_Empty_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_Empty_default_instance_;
    new (ptr) ::event_store::client::Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::Empty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Empty_shared_2eproto}, {}};

static void InitDefaultsscc_info_InvalidTransaction_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_InvalidTransaction_default_instance_;
    new (ptr) ::event_store::client::InvalidTransaction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::InvalidTransaction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvalidTransaction_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InvalidTransaction_shared_2eproto}, {}};

static void InitDefaultsscc_info_MaximumAppendSizeExceeded_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_MaximumAppendSizeExceeded_default_instance_;
    new (ptr) ::event_store::client::MaximumAppendSizeExceeded();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::MaximumAppendSizeExceeded::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MaximumAppendSizeExceeded_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MaximumAppendSizeExceeded_shared_2eproto}, {}};

static void InitDefaultsscc_info_StreamDeleted_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_StreamDeleted_default_instance_;
    new (ptr) ::event_store::client::StreamDeleted();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::StreamDeleted::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StreamDeleted_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StreamDeleted_shared_2eproto}, {
      &scc_info_StreamIdentifier_shared_2eproto.base,}};

static void InitDefaultsscc_info_StreamIdentifier_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_StreamIdentifier_default_instance_;
    new (ptr) ::event_store::client::StreamIdentifier();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::StreamIdentifier::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamIdentifier_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StreamIdentifier_shared_2eproto}, {}};

static void InitDefaultsscc_info_Timeout_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_Timeout_default_instance_;
    new (ptr) ::event_store::client::Timeout();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::Timeout::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timeout_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Timeout_shared_2eproto}, {}};

static void InitDefaultsscc_info_UUID_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_UUID_default_instance_;
    new (ptr) ::event_store::client::UUID();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::UUID::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UUID_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UUID_shared_2eproto}, {
      &scc_info_UUID_Structured_shared_2eproto.base,}};

static void InitDefaultsscc_info_UUID_Structured_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_UUID_Structured_default_instance_;
    new (ptr) ::event_store::client::UUID_Structured();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::UUID_Structured::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UUID_Structured_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UUID_Structured_shared_2eproto}, {}};

static void InitDefaultsscc_info_Unknown_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_Unknown_default_instance_;
    new (ptr) ::event_store::client::Unknown();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::Unknown::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Unknown_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Unknown_shared_2eproto}, {}};

static void InitDefaultsscc_info_WrongExpectedVersion_shared_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::_WrongExpectedVersion_default_instance_;
    new (ptr) ::event_store::client::WrongExpectedVersion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::WrongExpectedVersion::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WrongExpectedVersion_shared_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_WrongExpectedVersion_shared_2eproto}, {
      &scc_info_Empty_google_2fprotobuf_2fempty_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_shared_2eproto[13];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_shared_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_shared_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_shared_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::UUID_Structured, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::UUID_Structured, most_significant_bits_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::UUID_Structured, least_significant_bits_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::UUID, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::event_store::client::UUID, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::event_store::client::UUIDDefaultTypeInternal, structured_),
  offsetof(::event_store::client::UUIDDefaultTypeInternal, string_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::UUID, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::StreamIdentifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::StreamIdentifier, stream_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::AllStreamPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::AllStreamPosition, commit_position_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::AllStreamPosition, prepare_position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::WrongExpectedVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::event_store::client::WrongExpectedVersion, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::event_store::client::WrongExpectedVersionDefaultTypeInternal, current_stream_revision_),
  offsetof(::event_store::client::WrongExpectedVersionDefaultTypeInternal, current_no_stream_),
  offsetof(::event_store::client::WrongExpectedVersionDefaultTypeInternal, expected_stream_position_),
  offsetof(::event_store::client::WrongExpectedVersionDefaultTypeInternal, expected_any_),
  offsetof(::event_store::client::WrongExpectedVersionDefaultTypeInternal, expected_stream_exists_),
  offsetof(::event_store::client::WrongExpectedVersionDefaultTypeInternal, expected_no_stream_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::WrongExpectedVersion, current_stream_revision_option_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::WrongExpectedVersion, expected_stream_position_option_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::AccessDenied, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::StreamDeleted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::StreamDeleted, stream_identifier_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::Timeout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::Unknown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::InvalidTransaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::MaximumAppendSizeExceeded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::MaximumAppendSizeExceeded, maxappendsize_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::BadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::BadRequest, message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::event_store::client::UUID_Structured)},
  { 7, -1, sizeof(::event_store::client::UUID)},
  { 15, -1, sizeof(::event_store::client::Empty)},
  { 20, -1, sizeof(::event_store::client::StreamIdentifier)},
  { 26, -1, sizeof(::event_store::client::AllStreamPosition)},
  { 33, -1, sizeof(::event_store::client::WrongExpectedVersion)},
  { 46, -1, sizeof(::event_store::client::AccessDenied)},
  { 51, -1, sizeof(::event_store::client::StreamDeleted)},
  { 57, -1, sizeof(::event_store::client::Timeout)},
  { 62, -1, sizeof(::event_store::client::Unknown)},
  { 67, -1, sizeof(::event_store::client::InvalidTransaction)},
  { 72, -1, sizeof(::event_store::client::MaximumAppendSizeExceeded)},
  { 78, -1, sizeof(::event_store::client::BadRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_UUID_Structured_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_UUID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_Empty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_StreamIdentifier_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_AllStreamPosition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_WrongExpectedVersion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_AccessDenied_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_StreamDeleted_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_Timeout_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_Unknown_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_InvalidTransaction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_MaximumAppendSizeExceeded_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::_BadRequest_default_instance_),
};

const char descriptor_table_protodef_shared_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014shared.proto\022\022event_store.client\032\033goog"
  "le/protobuf/empty.proto\"\251\001\n\004UUID\0229\n\nstru"
  "ctured\030\001 \001(\0132#.event_store.client.UUID.S"
  "tructuredH\000\022\020\n\006string\030\002 \001(\tH\000\032K\n\nStructu"
  "red\022\035\n\025most_significant_bits\030\001 \001(\003\022\036\n\026le"
  "ast_significant_bits\030\002 \001(\003B\007\n\005value\"\007\n\005E"
  "mpty\"-\n\020StreamIdentifier\022\023\n\013stream_name\030"
  "\003 \001(\014J\004\010\001\020\003\"F\n\021AllStreamPosition\022\027\n\017comm"
  "it_position\030\001 \001(\004\022\030\n\020prepare_position\030\002 "
  "\001(\004\"\367\002\n\024WrongExpectedVersion\022!\n\027current_"
  "stream_revision\030\001 \001(\004H\000\0223\n\021current_no_st"
  "ream\030\002 \001(\0132\026.google.protobuf.EmptyH\000\022\"\n\030"
  "expected_stream_position\030\003 \001(\004H\001\022.\n\014expe"
  "cted_any\030\004 \001(\0132\026.google.protobuf.EmptyH\001"
  "\0228\n\026expected_stream_exists\030\005 \001(\0132\026.googl"
  "e.protobuf.EmptyH\001\0224\n\022expected_no_stream"
  "\030\006 \001(\0132\026.google.protobuf.EmptyH\001B \n\036curr"
  "ent_stream_revision_optionB!\n\037expected_s"
  "tream_position_option\"\016\n\014AccessDenied\"P\n"
  "\rStreamDeleted\022\?\n\021stream_identifier\030\001 \001("
  "\0132$.event_store.client.StreamIdentifier\""
  "\t\n\007Timeout\"\t\n\007Unknown\"\024\n\022InvalidTransact"
  "ion\"2\n\031MaximumAppendSizeExceeded\022\025\n\rmaxA"
  "ppendSize\030\001 \001(\r\"\035\n\nBadRequest\022\017\n\007message"
  "\030\001 \001(\tB&\n$com.eventstore.dbclient.proto."
  "sharedb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_shared_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_shared_2eproto_sccs[13] = {
  &scc_info_AccessDenied_shared_2eproto.base,
  &scc_info_AllStreamPosition_shared_2eproto.base,
  &scc_info_BadRequest_shared_2eproto.base,
  &scc_info_Empty_shared_2eproto.base,
  &scc_info_InvalidTransaction_shared_2eproto.base,
  &scc_info_MaximumAppendSizeExceeded_shared_2eproto.base,
  &scc_info_StreamDeleted_shared_2eproto.base,
  &scc_info_StreamIdentifier_shared_2eproto.base,
  &scc_info_Timeout_shared_2eproto.base,
  &scc_info_UUID_shared_2eproto.base,
  &scc_info_UUID_Structured_shared_2eproto.base,
  &scc_info_Unknown_shared_2eproto.base,
  &scc_info_WrongExpectedVersion_shared_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_shared_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_shared_2eproto = {
  false, false, descriptor_table_protodef_shared_2eproto, "shared.proto", 1014,
  &descriptor_table_shared_2eproto_once, descriptor_table_shared_2eproto_sccs, descriptor_table_shared_2eproto_deps, 13, 1,
  schemas, file_default_instances, TableStruct_shared_2eproto::offsets,
  file_level_metadata_shared_2eproto, 13, file_level_enum_descriptors_shared_2eproto, file_level_service_descriptors_shared_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_shared_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_shared_2eproto)), true);
namespace event_store {
namespace client {

// ===================================================================

void UUID_Structured::InitAsDefaultInstance() {
}
class UUID_Structured::_Internal {
 public:
};

UUID_Structured::UUID_Structured(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.UUID.Structured)
}
UUID_Structured::UUID_Structured(const UUID_Structured& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&most_significant_bits_, &from.most_significant_bits_,
    static_cast<size_t>(reinterpret_cast<char*>(&least_significant_bits_) -
    reinterpret_cast<char*>(&most_significant_bits_)) + sizeof(least_significant_bits_));
  // @@protoc_insertion_point(copy_constructor:event_store.client.UUID.Structured)
}

void UUID_Structured::SharedCtor() {
  ::memset(&most_significant_bits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&least_significant_bits_) -
      reinterpret_cast<char*>(&most_significant_bits_)) + sizeof(least_significant_bits_));
}

UUID_Structured::~UUID_Structured() {
  // @@protoc_insertion_point(destructor:event_store.client.UUID.Structured)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UUID_Structured::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UUID_Structured::ArenaDtor(void* object) {
  UUID_Structured* _this = reinterpret_cast< UUID_Structured* >(object);
  (void)_this;
}
void UUID_Structured::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UUID_Structured::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UUID_Structured& UUID_Structured::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UUID_Structured_shared_2eproto.base);
  return *internal_default_instance();
}


void UUID_Structured::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.UUID.Structured)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&most_significant_bits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&least_significant_bits_) -
      reinterpret_cast<char*>(&most_significant_bits_)) + sizeof(least_significant_bits_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UUID_Structured::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 most_significant_bits = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          most_significant_bits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 least_significant_bits = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          least_significant_bits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UUID_Structured::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.UUID.Structured)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 most_significant_bits = 1;
  if (this->most_significant_bits() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_most_significant_bits(), target);
  }

  // int64 least_significant_bits = 2;
  if (this->least_significant_bits() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_least_significant_bits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.UUID.Structured)
  return target;
}

size_t UUID_Structured::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.UUID.Structured)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 most_significant_bits = 1;
  if (this->most_significant_bits() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_most_significant_bits());
  }

  // int64 least_significant_bits = 2;
  if (this->least_significant_bits() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_least_significant_bits());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UUID_Structured::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.UUID.Structured)
  GOOGLE_DCHECK_NE(&from, this);
  const UUID_Structured* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UUID_Structured>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.UUID.Structured)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.UUID.Structured)
    MergeFrom(*source);
  }
}

void UUID_Structured::MergeFrom(const UUID_Structured& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.UUID.Structured)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.most_significant_bits() != 0) {
    _internal_set_most_significant_bits(from._internal_most_significant_bits());
  }
  if (from.least_significant_bits() != 0) {
    _internal_set_least_significant_bits(from._internal_least_significant_bits());
  }
}

void UUID_Structured::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.UUID.Structured)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UUID_Structured::CopyFrom(const UUID_Structured& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.UUID.Structured)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UUID_Structured::IsInitialized() const {
  return true;
}

void UUID_Structured::InternalSwap(UUID_Structured* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UUID_Structured, least_significant_bits_)
      + sizeof(UUID_Structured::least_significant_bits_)
      - PROTOBUF_FIELD_OFFSET(UUID_Structured, most_significant_bits_)>(
          reinterpret_cast<char*>(&most_significant_bits_),
          reinterpret_cast<char*>(&other->most_significant_bits_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UUID_Structured::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UUID::InitAsDefaultInstance() {
  ::event_store::client::_UUID_default_instance_.structured_ = const_cast< ::event_store::client::UUID_Structured*>(
      ::event_store::client::UUID_Structured::internal_default_instance());
  ::event_store::client::_UUID_default_instance_.string_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class UUID::_Internal {
 public:
  static const ::event_store::client::UUID_Structured& structured(const UUID* msg);
};

const ::event_store::client::UUID_Structured&
UUID::_Internal::structured(const UUID* msg) {
  return *msg->value_.structured_;
}
void UUID::set_allocated_structured(::event_store::client::UUID_Structured* structured) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (structured) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(structured);
    if (message_arena != submessage_arena) {
      structured = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, structured, submessage_arena);
    }
    set_has_structured();
    value_.structured_ = structured;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.UUID.structured)
}
UUID::UUID(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.UUID)
}
UUID::UUID(const UUID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kStructured: {
      _internal_mutable_structured()->::event_store::client::UUID_Structured::MergeFrom(from._internal_structured());
      break;
    }
    case kString: {
      _internal_set_string(from._internal_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.UUID)
}

void UUID::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UUID_shared_2eproto.base);
  clear_has_value();
}

UUID::~UUID() {
  // @@protoc_insertion_point(destructor:event_store.client.UUID)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UUID::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void UUID::ArenaDtor(void* object) {
  UUID* _this = reinterpret_cast< UUID* >(object);
  (void)_this;
}
void UUID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UUID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UUID& UUID::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UUID_shared_2eproto.base);
  return *internal_default_instance();
}


void UUID::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:event_store.client.UUID)
  switch (value_case()) {
    case kStructured: {
      if (GetArena() == nullptr) {
        delete value_.structured_;
      }
      break;
    }
    case kString: {
      value_.string_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void UUID::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.UUID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UUID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.UUID.Structured structured = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_structured(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string string = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.UUID.string"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UUID::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.UUID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.UUID.Structured structured = 1;
  if (_internal_has_structured()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::structured(this), target, stream);
  }

  // string string = 2;
  if (_internal_has_string()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string().data(), static_cast<int>(this->_internal_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.UUID.string");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_string(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.UUID)
  return target;
}

size_t UUID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.UUID)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // .event_store.client.UUID.Structured structured = 1;
    case kStructured: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.structured_);
      break;
    }
    // string string = 2;
    case kString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UUID::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.UUID)
  GOOGLE_DCHECK_NE(&from, this);
  const UUID* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UUID>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.UUID)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.UUID)
    MergeFrom(*source);
  }
}

void UUID::MergeFrom(const UUID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.UUID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kStructured: {
      _internal_mutable_structured()->::event_store::client::UUID_Structured::MergeFrom(from._internal_structured());
      break;
    }
    case kString: {
      _internal_set_string(from._internal_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void UUID::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.UUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UUID::CopyFrom(const UUID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.UUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UUID::IsInitialized() const {
  return true;
}

void UUID::InternalSwap(UUID* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata UUID::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:event_store.client.Empty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Empty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Empty::ArenaDtor(void* object) {
  Empty* _this = reinterpret_cast< Empty* >(object);
  (void)_this;
}
void Empty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Empty& Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Empty_shared_2eproto.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Empty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.Empty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.Empty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StreamIdentifier::InitAsDefaultInstance() {
}
class StreamIdentifier::_Internal {
 public:
};

StreamIdentifier::StreamIdentifier(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.StreamIdentifier)
}
StreamIdentifier::StreamIdentifier(const StreamIdentifier& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stream_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stream_name().empty()) {
    stream_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_stream_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.StreamIdentifier)
}

void StreamIdentifier::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StreamIdentifier_shared_2eproto.base);
  stream_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StreamIdentifier::~StreamIdentifier() {
  // @@protoc_insertion_point(destructor:event_store.client.StreamIdentifier)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StreamIdentifier::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  stream_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StreamIdentifier::ArenaDtor(void* object) {
  StreamIdentifier* _this = reinterpret_cast< StreamIdentifier* >(object);
  (void)_this;
}
void StreamIdentifier::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StreamIdentifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamIdentifier& StreamIdentifier::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamIdentifier_shared_2eproto.base);
  return *internal_default_instance();
}


void StreamIdentifier::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.StreamIdentifier)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stream_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamIdentifier::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes stream_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_stream_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamIdentifier::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.StreamIdentifier)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes stream_name = 3;
  if (this->stream_name().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_stream_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.StreamIdentifier)
  return target;
}

size_t StreamIdentifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.StreamIdentifier)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes stream_name = 3;
  if (this->stream_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_stream_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamIdentifier::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.StreamIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamIdentifier* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamIdentifier>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.StreamIdentifier)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.StreamIdentifier)
    MergeFrom(*source);
  }
}

void StreamIdentifier::MergeFrom(const StreamIdentifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.StreamIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stream_name().size() > 0) {
    _internal_set_stream_name(from._internal_stream_name());
  }
}

void StreamIdentifier::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.StreamIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamIdentifier::CopyFrom(const StreamIdentifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.StreamIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamIdentifier::IsInitialized() const {
  return true;
}

void StreamIdentifier::InternalSwap(StreamIdentifier* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stream_name_.Swap(&other->stream_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamIdentifier::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AllStreamPosition::InitAsDefaultInstance() {
}
class AllStreamPosition::_Internal {
 public:
};

AllStreamPosition::AllStreamPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.AllStreamPosition)
}
AllStreamPosition::AllStreamPosition(const AllStreamPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&commit_position_, &from.commit_position_,
    static_cast<size_t>(reinterpret_cast<char*>(&prepare_position_) -
    reinterpret_cast<char*>(&commit_position_)) + sizeof(prepare_position_));
  // @@protoc_insertion_point(copy_constructor:event_store.client.AllStreamPosition)
}

void AllStreamPosition::SharedCtor() {
  ::memset(&commit_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prepare_position_) -
      reinterpret_cast<char*>(&commit_position_)) + sizeof(prepare_position_));
}

AllStreamPosition::~AllStreamPosition() {
  // @@protoc_insertion_point(destructor:event_store.client.AllStreamPosition)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AllStreamPosition::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AllStreamPosition::ArenaDtor(void* object) {
  AllStreamPosition* _this = reinterpret_cast< AllStreamPosition* >(object);
  (void)_this;
}
void AllStreamPosition::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AllStreamPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AllStreamPosition& AllStreamPosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AllStreamPosition_shared_2eproto.base);
  return *internal_default_instance();
}


void AllStreamPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.AllStreamPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&commit_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prepare_position_) -
      reinterpret_cast<char*>(&commit_position_)) + sizeof(prepare_position_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AllStreamPosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 commit_position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          commit_position_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 prepare_position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          prepare_position_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AllStreamPosition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.AllStreamPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 commit_position = 1;
  if (this->commit_position() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_commit_position(), target);
  }

  // uint64 prepare_position = 2;
  if (this->prepare_position() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_prepare_position(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.AllStreamPosition)
  return target;
}

size_t AllStreamPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.AllStreamPosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 commit_position = 1;
  if (this->commit_position() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_commit_position());
  }

  // uint64 prepare_position = 2;
  if (this->prepare_position() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_prepare_position());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllStreamPosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.AllStreamPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const AllStreamPosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AllStreamPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.AllStreamPosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.AllStreamPosition)
    MergeFrom(*source);
  }
}

void AllStreamPosition::MergeFrom(const AllStreamPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.AllStreamPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.commit_position() != 0) {
    _internal_set_commit_position(from._internal_commit_position());
  }
  if (from.prepare_position() != 0) {
    _internal_set_prepare_position(from._internal_prepare_position());
  }
}

void AllStreamPosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.AllStreamPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllStreamPosition::CopyFrom(const AllStreamPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.AllStreamPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllStreamPosition::IsInitialized() const {
  return true;
}

void AllStreamPosition::InternalSwap(AllStreamPosition* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AllStreamPosition, prepare_position_)
      + sizeof(AllStreamPosition::prepare_position_)
      - PROTOBUF_FIELD_OFFSET(AllStreamPosition, commit_position_)>(
          reinterpret_cast<char*>(&commit_position_),
          reinterpret_cast<char*>(&other->commit_position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AllStreamPosition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WrongExpectedVersion::InitAsDefaultInstance() {
  ::event_store::client::_WrongExpectedVersion_default_instance_.current_stream_revision_ = PROTOBUF_ULONGLONG(0);
  ::event_store::client::_WrongExpectedVersion_default_instance_.current_no_stream_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
  ::event_store::client::_WrongExpectedVersion_default_instance_.expected_stream_position_ = PROTOBUF_ULONGLONG(0);
  ::event_store::client::_WrongExpectedVersion_default_instance_.expected_any_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
  ::event_store::client::_WrongExpectedVersion_default_instance_.expected_stream_exists_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
  ::event_store::client::_WrongExpectedVersion_default_instance_.expected_no_stream_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
}
class WrongExpectedVersion::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Empty& current_no_stream(const WrongExpectedVersion* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& expected_any(const WrongExpectedVersion* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& expected_stream_exists(const WrongExpectedVersion* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& expected_no_stream(const WrongExpectedVersion* msg);
};

const PROTOBUF_NAMESPACE_ID::Empty&
WrongExpectedVersion::_Internal::current_no_stream(const WrongExpectedVersion* msg) {
  return *msg->current_stream_revision_option_.current_no_stream_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
WrongExpectedVersion::_Internal::expected_any(const WrongExpectedVersion* msg) {
  return *msg->expected_stream_position_option_.expected_any_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
WrongExpectedVersion::_Internal::expected_stream_exists(const WrongExpectedVersion* msg) {
  return *msg->expected_stream_position_option_.expected_stream_exists_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
WrongExpectedVersion::_Internal::expected_no_stream(const WrongExpectedVersion* msg) {
  return *msg->expected_stream_position_option_.expected_no_stream_;
}
void WrongExpectedVersion::set_allocated_current_no_stream(PROTOBUF_NAMESPACE_ID::Empty* current_no_stream) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_current_stream_revision_option();
  if (current_no_stream) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(current_no_stream)->GetArena();
    if (message_arena != submessage_arena) {
      current_no_stream = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, current_no_stream, submessage_arena);
    }
    set_has_current_no_stream();
    current_stream_revision_option_.current_no_stream_ = current_no_stream;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.WrongExpectedVersion.current_no_stream)
}
void WrongExpectedVersion::clear_current_no_stream() {
  if (_internal_has_current_no_stream()) {
    if (GetArena() == nullptr) {
      delete current_stream_revision_option_.current_no_stream_;
    }
    clear_has_current_stream_revision_option();
  }
}
void WrongExpectedVersion::set_allocated_expected_any(PROTOBUF_NAMESPACE_ID::Empty* expected_any) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_expected_stream_position_option();
  if (expected_any) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(expected_any)->GetArena();
    if (message_arena != submessage_arena) {
      expected_any = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, expected_any, submessage_arena);
    }
    set_has_expected_any();
    expected_stream_position_option_.expected_any_ = expected_any;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.WrongExpectedVersion.expected_any)
}
void WrongExpectedVersion::clear_expected_any() {
  if (_internal_has_expected_any()) {
    if (GetArena() == nullptr) {
      delete expected_stream_position_option_.expected_any_;
    }
    clear_has_expected_stream_position_option();
  }
}
void WrongExpectedVersion::set_allocated_expected_stream_exists(PROTOBUF_NAMESPACE_ID::Empty* expected_stream_exists) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_expected_stream_position_option();
  if (expected_stream_exists) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(expected_stream_exists)->GetArena();
    if (message_arena != submessage_arena) {
      expected_stream_exists = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, expected_stream_exists, submessage_arena);
    }
    set_has_expected_stream_exists();
    expected_stream_position_option_.expected_stream_exists_ = expected_stream_exists;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.WrongExpectedVersion.expected_stream_exists)
}
void WrongExpectedVersion::clear_expected_stream_exists() {
  if (_internal_has_expected_stream_exists()) {
    if (GetArena() == nullptr) {
      delete expected_stream_position_option_.expected_stream_exists_;
    }
    clear_has_expected_stream_position_option();
  }
}
void WrongExpectedVersion::set_allocated_expected_no_stream(PROTOBUF_NAMESPACE_ID::Empty* expected_no_stream) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_expected_stream_position_option();
  if (expected_no_stream) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(expected_no_stream)->GetArena();
    if (message_arena != submessage_arena) {
      expected_no_stream = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, expected_no_stream, submessage_arena);
    }
    set_has_expected_no_stream();
    expected_stream_position_option_.expected_no_stream_ = expected_no_stream;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.WrongExpectedVersion.expected_no_stream)
}
void WrongExpectedVersion::clear_expected_no_stream() {
  if (_internal_has_expected_no_stream()) {
    if (GetArena() == nullptr) {
      delete expected_stream_position_option_.expected_no_stream_;
    }
    clear_has_expected_stream_position_option();
  }
}
WrongExpectedVersion::WrongExpectedVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.WrongExpectedVersion)
}
WrongExpectedVersion::WrongExpectedVersion(const WrongExpectedVersion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_current_stream_revision_option();
  switch (from.current_stream_revision_option_case()) {
    case kCurrentStreamRevision: {
      _internal_set_current_stream_revision(from._internal_current_stream_revision());
      break;
    }
    case kCurrentNoStream: {
      _internal_mutable_current_no_stream()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_current_no_stream());
      break;
    }
    case CURRENT_STREAM_REVISION_OPTION_NOT_SET: {
      break;
    }
  }
  clear_has_expected_stream_position_option();
  switch (from.expected_stream_position_option_case()) {
    case kExpectedStreamPosition: {
      _internal_set_expected_stream_position(from._internal_expected_stream_position());
      break;
    }
    case kExpectedAny: {
      _internal_mutable_expected_any()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_expected_any());
      break;
    }
    case kExpectedStreamExists: {
      _internal_mutable_expected_stream_exists()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_expected_stream_exists());
      break;
    }
    case kExpectedNoStream: {
      _internal_mutable_expected_no_stream()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_expected_no_stream());
      break;
    }
    case EXPECTED_STREAM_POSITION_OPTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.WrongExpectedVersion)
}

void WrongExpectedVersion::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WrongExpectedVersion_shared_2eproto.base);
  clear_has_current_stream_revision_option();
  clear_has_expected_stream_position_option();
}

WrongExpectedVersion::~WrongExpectedVersion() {
  // @@protoc_insertion_point(destructor:event_store.client.WrongExpectedVersion)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WrongExpectedVersion::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_current_stream_revision_option()) {
    clear_current_stream_revision_option();
  }
  if (has_expected_stream_position_option()) {
    clear_expected_stream_position_option();
  }
}

void WrongExpectedVersion::ArenaDtor(void* object) {
  WrongExpectedVersion* _this = reinterpret_cast< WrongExpectedVersion* >(object);
  (void)_this;
}
void WrongExpectedVersion::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WrongExpectedVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WrongExpectedVersion& WrongExpectedVersion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WrongExpectedVersion_shared_2eproto.base);
  return *internal_default_instance();
}


void WrongExpectedVersion::clear_current_stream_revision_option() {
// @@protoc_insertion_point(one_of_clear_start:event_store.client.WrongExpectedVersion)
  switch (current_stream_revision_option_case()) {
    case kCurrentStreamRevision: {
      // No need to clear
      break;
    }
    case kCurrentNoStream: {
      if (GetArena() == nullptr) {
        delete current_stream_revision_option_.current_no_stream_;
      }
      break;
    }
    case CURRENT_STREAM_REVISION_OPTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CURRENT_STREAM_REVISION_OPTION_NOT_SET;
}

void WrongExpectedVersion::clear_expected_stream_position_option() {
// @@protoc_insertion_point(one_of_clear_start:event_store.client.WrongExpectedVersion)
  switch (expected_stream_position_option_case()) {
    case kExpectedStreamPosition: {
      // No need to clear
      break;
    }
    case kExpectedAny: {
      if (GetArena() == nullptr) {
        delete expected_stream_position_option_.expected_any_;
      }
      break;
    }
    case kExpectedStreamExists: {
      if (GetArena() == nullptr) {
        delete expected_stream_position_option_.expected_stream_exists_;
      }
      break;
    }
    case kExpectedNoStream: {
      if (GetArena() == nullptr) {
        delete expected_stream_position_option_.expected_no_stream_;
      }
      break;
    }
    case EXPECTED_STREAM_POSITION_OPTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = EXPECTED_STREAM_POSITION_OPTION_NOT_SET;
}


void WrongExpectedVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.WrongExpectedVersion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_current_stream_revision_option();
  clear_expected_stream_position_option();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WrongExpectedVersion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 current_stream_revision = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _internal_set_current_stream_revision(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty current_no_stream = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_current_no_stream(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 expected_stream_position = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _internal_set_expected_stream_position(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty expected_any = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_expected_any(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty expected_stream_exists = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_expected_stream_exists(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty expected_no_stream = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_expected_no_stream(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WrongExpectedVersion::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.WrongExpectedVersion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 current_stream_revision = 1;
  if (_internal_has_current_stream_revision()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_current_stream_revision(), target);
  }

  // .google.protobuf.Empty current_no_stream = 2;
  if (_internal_has_current_no_stream()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::current_no_stream(this), target, stream);
  }

  // uint64 expected_stream_position = 3;
  if (_internal_has_expected_stream_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_expected_stream_position(), target);
  }

  // .google.protobuf.Empty expected_any = 4;
  if (_internal_has_expected_any()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::expected_any(this), target, stream);
  }

  // .google.protobuf.Empty expected_stream_exists = 5;
  if (_internal_has_expected_stream_exists()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::expected_stream_exists(this), target, stream);
  }

  // .google.protobuf.Empty expected_no_stream = 6;
  if (_internal_has_expected_no_stream()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::expected_no_stream(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.WrongExpectedVersion)
  return target;
}

size_t WrongExpectedVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.WrongExpectedVersion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (current_stream_revision_option_case()) {
    // uint64 current_stream_revision = 1;
    case kCurrentStreamRevision: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_current_stream_revision());
      break;
    }
    // .google.protobuf.Empty current_no_stream = 2;
    case kCurrentNoStream: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *current_stream_revision_option_.current_no_stream_);
      break;
    }
    case CURRENT_STREAM_REVISION_OPTION_NOT_SET: {
      break;
    }
  }
  switch (expected_stream_position_option_case()) {
    // uint64 expected_stream_position = 3;
    case kExpectedStreamPosition: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_expected_stream_position());
      break;
    }
    // .google.protobuf.Empty expected_any = 4;
    case kExpectedAny: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expected_stream_position_option_.expected_any_);
      break;
    }
    // .google.protobuf.Empty expected_stream_exists = 5;
    case kExpectedStreamExists: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expected_stream_position_option_.expected_stream_exists_);
      break;
    }
    // .google.protobuf.Empty expected_no_stream = 6;
    case kExpectedNoStream: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expected_stream_position_option_.expected_no_stream_);
      break;
    }
    case EXPECTED_STREAM_POSITION_OPTION_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WrongExpectedVersion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.WrongExpectedVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const WrongExpectedVersion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WrongExpectedVersion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.WrongExpectedVersion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.WrongExpectedVersion)
    MergeFrom(*source);
  }
}

void WrongExpectedVersion::MergeFrom(const WrongExpectedVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.WrongExpectedVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.current_stream_revision_option_case()) {
    case kCurrentStreamRevision: {
      _internal_set_current_stream_revision(from._internal_current_stream_revision());
      break;
    }
    case kCurrentNoStream: {
      _internal_mutable_current_no_stream()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_current_no_stream());
      break;
    }
    case CURRENT_STREAM_REVISION_OPTION_NOT_SET: {
      break;
    }
  }
  switch (from.expected_stream_position_option_case()) {
    case kExpectedStreamPosition: {
      _internal_set_expected_stream_position(from._internal_expected_stream_position());
      break;
    }
    case kExpectedAny: {
      _internal_mutable_expected_any()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_expected_any());
      break;
    }
    case kExpectedStreamExists: {
      _internal_mutable_expected_stream_exists()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_expected_stream_exists());
      break;
    }
    case kExpectedNoStream: {
      _internal_mutable_expected_no_stream()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_expected_no_stream());
      break;
    }
    case EXPECTED_STREAM_POSITION_OPTION_NOT_SET: {
      break;
    }
  }
}

void WrongExpectedVersion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.WrongExpectedVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WrongExpectedVersion::CopyFrom(const WrongExpectedVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.WrongExpectedVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WrongExpectedVersion::IsInitialized() const {
  return true;
}

void WrongExpectedVersion::InternalSwap(WrongExpectedVersion* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(current_stream_revision_option_, other->current_stream_revision_option_);
  swap(expected_stream_position_option_, other->expected_stream_position_option_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
}

::PROTOBUF_NAMESPACE_ID::Metadata WrongExpectedVersion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccessDenied::InitAsDefaultInstance() {
}
class AccessDenied::_Internal {
 public:
};

AccessDenied::AccessDenied(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.AccessDenied)
}
AccessDenied::AccessDenied(const AccessDenied& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.AccessDenied)
}

void AccessDenied::SharedCtor() {
}

AccessDenied::~AccessDenied() {
  // @@protoc_insertion_point(destructor:event_store.client.AccessDenied)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccessDenied::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AccessDenied::ArenaDtor(void* object) {
  AccessDenied* _this = reinterpret_cast< AccessDenied* >(object);
  (void)_this;
}
void AccessDenied::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccessDenied::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccessDenied& AccessDenied::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccessDenied_shared_2eproto.base);
  return *internal_default_instance();
}


void AccessDenied::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.AccessDenied)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccessDenied::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccessDenied::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.AccessDenied)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.AccessDenied)
  return target;
}

size_t AccessDenied::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.AccessDenied)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccessDenied::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.AccessDenied)
  GOOGLE_DCHECK_NE(&from, this);
  const AccessDenied* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccessDenied>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.AccessDenied)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.AccessDenied)
    MergeFrom(*source);
  }
}

void AccessDenied::MergeFrom(const AccessDenied& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.AccessDenied)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AccessDenied::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.AccessDenied)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccessDenied::CopyFrom(const AccessDenied& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.AccessDenied)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessDenied::IsInitialized() const {
  return true;
}

void AccessDenied::InternalSwap(AccessDenied* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccessDenied::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StreamDeleted::InitAsDefaultInstance() {
  ::event_store::client::_StreamDeleted_default_instance_._instance.get_mutable()->stream_identifier_ = const_cast< ::event_store::client::StreamIdentifier*>(
      ::event_store::client::StreamIdentifier::internal_default_instance());
}
class StreamDeleted::_Internal {
 public:
  static const ::event_store::client::StreamIdentifier& stream_identifier(const StreamDeleted* msg);
};

const ::event_store::client::StreamIdentifier&
StreamDeleted::_Internal::stream_identifier(const StreamDeleted* msg) {
  return *msg->stream_identifier_;
}
StreamDeleted::StreamDeleted(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.StreamDeleted)
}
StreamDeleted::StreamDeleted(const StreamDeleted& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stream_identifier()) {
    stream_identifier_ = new ::event_store::client::StreamIdentifier(*from.stream_identifier_);
  } else {
    stream_identifier_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.StreamDeleted)
}

void StreamDeleted::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StreamDeleted_shared_2eproto.base);
  stream_identifier_ = nullptr;
}

StreamDeleted::~StreamDeleted() {
  // @@protoc_insertion_point(destructor:event_store.client.StreamDeleted)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StreamDeleted::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete stream_identifier_;
}

void StreamDeleted::ArenaDtor(void* object) {
  StreamDeleted* _this = reinterpret_cast< StreamDeleted* >(object);
  (void)_this;
}
void StreamDeleted::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StreamDeleted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamDeleted& StreamDeleted::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamDeleted_shared_2eproto.base);
  return *internal_default_instance();
}


void StreamDeleted::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.StreamDeleted)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && stream_identifier_ != nullptr) {
    delete stream_identifier_;
  }
  stream_identifier_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamDeleted::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.StreamIdentifier stream_identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_stream_identifier(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamDeleted::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.StreamDeleted)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.StreamIdentifier stream_identifier = 1;
  if (this->has_stream_identifier()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::stream_identifier(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.StreamDeleted)
  return target;
}

size_t StreamDeleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.StreamDeleted)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.StreamIdentifier stream_identifier = 1;
  if (this->has_stream_identifier()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stream_identifier_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamDeleted::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.StreamDeleted)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamDeleted* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamDeleted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.StreamDeleted)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.StreamDeleted)
    MergeFrom(*source);
  }
}

void StreamDeleted::MergeFrom(const StreamDeleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.StreamDeleted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stream_identifier()) {
    _internal_mutable_stream_identifier()->::event_store::client::StreamIdentifier::MergeFrom(from._internal_stream_identifier());
  }
}

void StreamDeleted::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.StreamDeleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamDeleted::CopyFrom(const StreamDeleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.StreamDeleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamDeleted::IsInitialized() const {
  return true;
}

void StreamDeleted::InternalSwap(StreamDeleted* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(stream_identifier_, other->stream_identifier_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamDeleted::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Timeout::InitAsDefaultInstance() {
}
class Timeout::_Internal {
 public:
};

Timeout::Timeout(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.Timeout)
}
Timeout::Timeout(const Timeout& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.Timeout)
}

void Timeout::SharedCtor() {
}

Timeout::~Timeout() {
  // @@protoc_insertion_point(destructor:event_store.client.Timeout)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Timeout::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Timeout::ArenaDtor(void* object) {
  Timeout* _this = reinterpret_cast< Timeout* >(object);
  (void)_this;
}
void Timeout::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Timeout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Timeout& Timeout::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Timeout_shared_2eproto.base);
  return *internal_default_instance();
}


void Timeout::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.Timeout)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Timeout::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Timeout::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.Timeout)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.Timeout)
  return target;
}

size_t Timeout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.Timeout)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Timeout::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.Timeout)
  GOOGLE_DCHECK_NE(&from, this);
  const Timeout* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Timeout>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.Timeout)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.Timeout)
    MergeFrom(*source);
  }
}

void Timeout::MergeFrom(const Timeout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.Timeout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Timeout::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.Timeout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timeout::CopyFrom(const Timeout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.Timeout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timeout::IsInitialized() const {
  return true;
}

void Timeout::InternalSwap(Timeout* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Timeout::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Unknown::InitAsDefaultInstance() {
}
class Unknown::_Internal {
 public:
};

Unknown::Unknown(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.Unknown)
}
Unknown::Unknown(const Unknown& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.Unknown)
}

void Unknown::SharedCtor() {
}

Unknown::~Unknown() {
  // @@protoc_insertion_point(destructor:event_store.client.Unknown)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Unknown::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Unknown::ArenaDtor(void* object) {
  Unknown* _this = reinterpret_cast< Unknown* >(object);
  (void)_this;
}
void Unknown::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Unknown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Unknown& Unknown::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Unknown_shared_2eproto.base);
  return *internal_default_instance();
}


void Unknown::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.Unknown)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Unknown::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Unknown::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.Unknown)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.Unknown)
  return target;
}

size_t Unknown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.Unknown)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Unknown::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.Unknown)
  GOOGLE_DCHECK_NE(&from, this);
  const Unknown* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Unknown>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.Unknown)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.Unknown)
    MergeFrom(*source);
  }
}

void Unknown::MergeFrom(const Unknown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.Unknown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Unknown::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.Unknown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unknown::CopyFrom(const Unknown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.Unknown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unknown::IsInitialized() const {
  return true;
}

void Unknown::InternalSwap(Unknown* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Unknown::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InvalidTransaction::InitAsDefaultInstance() {
}
class InvalidTransaction::_Internal {
 public:
};

InvalidTransaction::InvalidTransaction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.InvalidTransaction)
}
InvalidTransaction::InvalidTransaction(const InvalidTransaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.InvalidTransaction)
}

void InvalidTransaction::SharedCtor() {
}

InvalidTransaction::~InvalidTransaction() {
  // @@protoc_insertion_point(destructor:event_store.client.InvalidTransaction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InvalidTransaction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void InvalidTransaction::ArenaDtor(void* object) {
  InvalidTransaction* _this = reinterpret_cast< InvalidTransaction* >(object);
  (void)_this;
}
void InvalidTransaction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvalidTransaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InvalidTransaction& InvalidTransaction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InvalidTransaction_shared_2eproto.base);
  return *internal_default_instance();
}


void InvalidTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.InvalidTransaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvalidTransaction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InvalidTransaction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.InvalidTransaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.InvalidTransaction)
  return target;
}

size_t InvalidTransaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.InvalidTransaction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvalidTransaction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.InvalidTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  const InvalidTransaction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InvalidTransaction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.InvalidTransaction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.InvalidTransaction)
    MergeFrom(*source);
  }
}

void InvalidTransaction::MergeFrom(const InvalidTransaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.InvalidTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void InvalidTransaction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.InvalidTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvalidTransaction::CopyFrom(const InvalidTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.InvalidTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvalidTransaction::IsInitialized() const {
  return true;
}

void InvalidTransaction::InternalSwap(InvalidTransaction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvalidTransaction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MaximumAppendSizeExceeded::InitAsDefaultInstance() {
}
class MaximumAppendSizeExceeded::_Internal {
 public:
};

MaximumAppendSizeExceeded::MaximumAppendSizeExceeded(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.MaximumAppendSizeExceeded)
}
MaximumAppendSizeExceeded::MaximumAppendSizeExceeded(const MaximumAppendSizeExceeded& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  maxappendsize_ = from.maxappendsize_;
  // @@protoc_insertion_point(copy_constructor:event_store.client.MaximumAppendSizeExceeded)
}

void MaximumAppendSizeExceeded::SharedCtor() {
  maxappendsize_ = 0u;
}

MaximumAppendSizeExceeded::~MaximumAppendSizeExceeded() {
  // @@protoc_insertion_point(destructor:event_store.client.MaximumAppendSizeExceeded)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MaximumAppendSizeExceeded::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MaximumAppendSizeExceeded::ArenaDtor(void* object) {
  MaximumAppendSizeExceeded* _this = reinterpret_cast< MaximumAppendSizeExceeded* >(object);
  (void)_this;
}
void MaximumAppendSizeExceeded::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MaximumAppendSizeExceeded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MaximumAppendSizeExceeded& MaximumAppendSizeExceeded::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MaximumAppendSizeExceeded_shared_2eproto.base);
  return *internal_default_instance();
}


void MaximumAppendSizeExceeded::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.MaximumAppendSizeExceeded)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maxappendsize_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MaximumAppendSizeExceeded::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 maxAppendSize = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          maxappendsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MaximumAppendSizeExceeded::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.MaximumAppendSizeExceeded)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 maxAppendSize = 1;
  if (this->maxappendsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_maxappendsize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.MaximumAppendSizeExceeded)
  return target;
}

size_t MaximumAppendSizeExceeded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.MaximumAppendSizeExceeded)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 maxAppendSize = 1;
  if (this->maxappendsize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_maxappendsize());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaximumAppendSizeExceeded::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.MaximumAppendSizeExceeded)
  GOOGLE_DCHECK_NE(&from, this);
  const MaximumAppendSizeExceeded* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MaximumAppendSizeExceeded>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.MaximumAppendSizeExceeded)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.MaximumAppendSizeExceeded)
    MergeFrom(*source);
  }
}

void MaximumAppendSizeExceeded::MergeFrom(const MaximumAppendSizeExceeded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.MaximumAppendSizeExceeded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maxappendsize() != 0) {
    _internal_set_maxappendsize(from._internal_maxappendsize());
  }
}

void MaximumAppendSizeExceeded::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.MaximumAppendSizeExceeded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaximumAppendSizeExceeded::CopyFrom(const MaximumAppendSizeExceeded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.MaximumAppendSizeExceeded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaximumAppendSizeExceeded::IsInitialized() const {
  return true;
}

void MaximumAppendSizeExceeded::InternalSwap(MaximumAppendSizeExceeded* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(maxappendsize_, other->maxappendsize_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MaximumAppendSizeExceeded::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BadRequest::InitAsDefaultInstance() {
}
class BadRequest::_Internal {
 public:
};

BadRequest::BadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.BadRequest)
}
BadRequest::BadRequest(const BadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.BadRequest)
}

void BadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BadRequest_shared_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BadRequest::~BadRequest() {
  // @@protoc_insertion_point(destructor:event_store.client.BadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BadRequest::ArenaDtor(void* object) {
  BadRequest* _this = reinterpret_cast< BadRequest* >(object);
  (void)_this;
}
void BadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BadRequest& BadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BadRequest_shared_2eproto.base);
  return *internal_default_instance();
}


void BadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.BadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.BadRequest.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.BadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.BadRequest.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.BadRequest)
  return target;
}

size_t BadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.BadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.BadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.BadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.BadRequest)
    MergeFrom(*source);
  }
}

void BadRequest::MergeFrom(const BadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.BadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void BadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.BadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BadRequest::CopyFrom(const BadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.BadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BadRequest::IsInitialized() const {
  return true;
}

void BadRequest::InternalSwap(BadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace client
}  // namespace event_store
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::event_store::client::UUID_Structured* Arena::CreateMaybeMessage< ::event_store::client::UUID_Structured >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::UUID_Structured >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::UUID* Arena::CreateMaybeMessage< ::event_store::client::UUID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::UUID >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::Empty* Arena::CreateMaybeMessage< ::event_store::client::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::StreamIdentifier* Arena::CreateMaybeMessage< ::event_store::client::StreamIdentifier >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::StreamIdentifier >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::AllStreamPosition* Arena::CreateMaybeMessage< ::event_store::client::AllStreamPosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::AllStreamPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::WrongExpectedVersion* Arena::CreateMaybeMessage< ::event_store::client::WrongExpectedVersion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::WrongExpectedVersion >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::AccessDenied* Arena::CreateMaybeMessage< ::event_store::client::AccessDenied >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::AccessDenied >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::StreamDeleted* Arena::CreateMaybeMessage< ::event_store::client::StreamDeleted >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::StreamDeleted >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::Timeout* Arena::CreateMaybeMessage< ::event_store::client::Timeout >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::Timeout >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::Unknown* Arena::CreateMaybeMessage< ::event_store::client::Unknown >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::Unknown >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::InvalidTransaction* Arena::CreateMaybeMessage< ::event_store::client::InvalidTransaction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::InvalidTransaction >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::MaximumAppendSizeExceeded* Arena::CreateMaybeMessage< ::event_store::client::MaximumAppendSizeExceeded >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::MaximumAppendSizeExceeded >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::BadRequest* Arena::CreateMaybeMessage< ::event_store::client::BadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::BadRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
