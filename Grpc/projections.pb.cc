// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: projections.proto

#include "projections.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_shared_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_shared_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CreateReq_Options_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateReq_Options_Continuous_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateReq_Options_Transient_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteReq_Options_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisableReq_Options_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnableReq_Options_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetReq_Options_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultReq_Options_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateReq_Options_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatisticsReq_Options_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatisticsResp_Details_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_projections_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateReq_Options_projections_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
namespace event_store {
namespace client {
namespace projections {
class CreateReq_Options_TransientDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateReq_Options_Transient> _instance;
} _CreateReq_Options_Transient_default_instance_;
class CreateReq_Options_ContinuousDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateReq_Options_Continuous> _instance;
} _CreateReq_Options_Continuous_default_instance_;
class CreateReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateReq_Options> _instance;
  const ::event_store::client::Empty* one_time_;
  const ::event_store::client::projections::CreateReq_Options_Transient* transient_;
  const ::event_store::client::projections::CreateReq_Options_Continuous* continuous_;
} _CreateReq_Options_default_instance_;
class CreateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateReq> _instance;
} _CreateReq_default_instance_;
class CreateRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateResp> _instance;
} _CreateResp_default_instance_;
class UpdateReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateReq_Options> _instance;
  bool emit_enabled_;
  const ::event_store::client::Empty* no_emit_options_;
} _UpdateReq_Options_default_instance_;
class UpdateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateReq> _instance;
} _UpdateReq_default_instance_;
class UpdateRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateResp> _instance;
} _UpdateResp_default_instance_;
class DeleteReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteReq_Options> _instance;
} _DeleteReq_Options_default_instance_;
class DeleteReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteReq> _instance;
} _DeleteReq_default_instance_;
class DeleteRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResp> _instance;
} _DeleteResp_default_instance_;
class StatisticsReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatisticsReq_Options> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  const ::event_store::client::Empty* all_;
  const ::event_store::client::Empty* transient_;
  const ::event_store::client::Empty* continuous_;
  const ::event_store::client::Empty* one_time_;
} _StatisticsReq_Options_default_instance_;
class StatisticsReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatisticsReq> _instance;
} _StatisticsReq_default_instance_;
class StatisticsResp_DetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatisticsResp_Details> _instance;
} _StatisticsResp_Details_default_instance_;
class StatisticsRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatisticsResp> _instance;
} _StatisticsResp_default_instance_;
class StateReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateReq_Options> _instance;
} _StateReq_Options_default_instance_;
class StateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateReq> _instance;
} _StateReq_default_instance_;
class StateRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateResp> _instance;
} _StateResp_default_instance_;
class ResultReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultReq_Options> _instance;
} _ResultReq_Options_default_instance_;
class ResultReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultReq> _instance;
} _ResultReq_default_instance_;
class ResultRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultResp> _instance;
} _ResultResp_default_instance_;
class ResetReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetReq_Options> _instance;
} _ResetReq_Options_default_instance_;
class ResetReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetReq> _instance;
} _ResetReq_default_instance_;
class ResetRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetResp> _instance;
} _ResetResp_default_instance_;
class EnableReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnableReq_Options> _instance;
} _EnableReq_Options_default_instance_;
class EnableReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnableReq> _instance;
} _EnableReq_default_instance_;
class EnableRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnableResp> _instance;
} _EnableResp_default_instance_;
class DisableReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisableReq_Options> _instance;
} _DisableReq_Options_default_instance_;
class DisableReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisableReq> _instance;
} _DisableReq_default_instance_;
class DisableRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisableResp> _instance;
} _DisableResp_default_instance_;
}  // namespace projections
}  // namespace client
}  // namespace event_store
static void InitDefaultsscc_info_CreateReq_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_CreateReq_default_instance_;
    new (ptr) ::event_store::client::projections::CreateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::CreateReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateReq_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateReq_projections_2eproto}, {
      &scc_info_CreateReq_Options_projections_2eproto.base,}};

static void InitDefaultsscc_info_CreateReq_Options_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_CreateReq_Options_default_instance_;
    new (ptr) ::event_store::client::projections::CreateReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::CreateReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CreateReq_Options_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_CreateReq_Options_projections_2eproto}, {
      &scc_info_Empty_shared_2eproto.base,
      &scc_info_CreateReq_Options_Transient_projections_2eproto.base,
      &scc_info_CreateReq_Options_Continuous_projections_2eproto.base,}};

static void InitDefaultsscc_info_CreateReq_Options_Continuous_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_CreateReq_Options_Continuous_default_instance_;
    new (ptr) ::event_store::client::projections::CreateReq_Options_Continuous();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::CreateReq_Options_Continuous::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateReq_Options_Continuous_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateReq_Options_Continuous_projections_2eproto}, {}};

static void InitDefaultsscc_info_CreateReq_Options_Transient_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_CreateReq_Options_Transient_default_instance_;
    new (ptr) ::event_store::client::projections::CreateReq_Options_Transient();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::CreateReq_Options_Transient::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateReq_Options_Transient_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateReq_Options_Transient_projections_2eproto}, {}};

static void InitDefaultsscc_info_CreateResp_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_CreateResp_default_instance_;
    new (ptr) ::event_store::client::projections::CreateResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::CreateResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateResp_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateResp_projections_2eproto}, {}};

static void InitDefaultsscc_info_DeleteReq_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_DeleteReq_default_instance_;
    new (ptr) ::event_store::client::projections::DeleteReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::DeleteReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteReq_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteReq_projections_2eproto}, {
      &scc_info_DeleteReq_Options_projections_2eproto.base,}};

static void InitDefaultsscc_info_DeleteReq_Options_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_DeleteReq_Options_default_instance_;
    new (ptr) ::event_store::client::projections::DeleteReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::DeleteReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteReq_Options_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteReq_Options_projections_2eproto}, {}};

static void InitDefaultsscc_info_DeleteResp_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_DeleteResp_default_instance_;
    new (ptr) ::event_store::client::projections::DeleteResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::DeleteResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteResp_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteResp_projections_2eproto}, {}};

static void InitDefaultsscc_info_DisableReq_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_DisableReq_default_instance_;
    new (ptr) ::event_store::client::projections::DisableReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::DisableReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DisableReq_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DisableReq_projections_2eproto}, {
      &scc_info_DisableReq_Options_projections_2eproto.base,}};

static void InitDefaultsscc_info_DisableReq_Options_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_DisableReq_Options_default_instance_;
    new (ptr) ::event_store::client::projections::DisableReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::DisableReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisableReq_Options_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DisableReq_Options_projections_2eproto}, {}};

static void InitDefaultsscc_info_DisableResp_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_DisableResp_default_instance_;
    new (ptr) ::event_store::client::projections::DisableResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::DisableResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisableResp_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DisableResp_projections_2eproto}, {}};

static void InitDefaultsscc_info_EnableReq_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_EnableReq_default_instance_;
    new (ptr) ::event_store::client::projections::EnableReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::EnableReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EnableReq_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EnableReq_projections_2eproto}, {
      &scc_info_EnableReq_Options_projections_2eproto.base,}};

static void InitDefaultsscc_info_EnableReq_Options_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_EnableReq_Options_default_instance_;
    new (ptr) ::event_store::client::projections::EnableReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::EnableReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnableReq_Options_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EnableReq_Options_projections_2eproto}, {}};

static void InitDefaultsscc_info_EnableResp_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_EnableResp_default_instance_;
    new (ptr) ::event_store::client::projections::EnableResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::EnableResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnableResp_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EnableResp_projections_2eproto}, {}};

static void InitDefaultsscc_info_ResetReq_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_ResetReq_default_instance_;
    new (ptr) ::event_store::client::projections::ResetReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::ResetReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResetReq_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResetReq_projections_2eproto}, {
      &scc_info_ResetReq_Options_projections_2eproto.base,}};

static void InitDefaultsscc_info_ResetReq_Options_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_ResetReq_Options_default_instance_;
    new (ptr) ::event_store::client::projections::ResetReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::ResetReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetReq_Options_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResetReq_Options_projections_2eproto}, {}};

static void InitDefaultsscc_info_ResetResp_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_ResetResp_default_instance_;
    new (ptr) ::event_store::client::projections::ResetResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::ResetResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetResp_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResetResp_projections_2eproto}, {}};

static void InitDefaultsscc_info_ResultReq_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_ResultReq_default_instance_;
    new (ptr) ::event_store::client::projections::ResultReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::ResultReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResultReq_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResultReq_projections_2eproto}, {
      &scc_info_ResultReq_Options_projections_2eproto.base,}};

static void InitDefaultsscc_info_ResultReq_Options_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_ResultReq_Options_default_instance_;
    new (ptr) ::event_store::client::projections::ResultReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::ResultReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultReq_Options_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResultReq_Options_projections_2eproto}, {}};

static void InitDefaultsscc_info_ResultResp_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_ResultResp_default_instance_;
    new (ptr) ::event_store::client::projections::ResultResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::ResultResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResultResp_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResultResp_projections_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_StateReq_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_StateReq_default_instance_;
    new (ptr) ::event_store::client::projections::StateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::StateReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StateReq_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StateReq_projections_2eproto}, {
      &scc_info_StateReq_Options_projections_2eproto.base,}};

static void InitDefaultsscc_info_StateReq_Options_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_StateReq_Options_default_instance_;
    new (ptr) ::event_store::client::projections::StateReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::StateReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateReq_Options_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StateReq_Options_projections_2eproto}, {}};

static void InitDefaultsscc_info_StateResp_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_StateResp_default_instance_;
    new (ptr) ::event_store::client::projections::StateResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::StateResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StateResp_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StateResp_projections_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_StatisticsReq_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_StatisticsReq_default_instance_;
    new (ptr) ::event_store::client::projections::StatisticsReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::StatisticsReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatisticsReq_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatisticsReq_projections_2eproto}, {
      &scc_info_StatisticsReq_Options_projections_2eproto.base,}};

static void InitDefaultsscc_info_StatisticsReq_Options_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_StatisticsReq_Options_default_instance_;
    new (ptr) ::event_store::client::projections::StatisticsReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::StatisticsReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatisticsReq_Options_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatisticsReq_Options_projections_2eproto}, {
      &scc_info_Empty_shared_2eproto.base,}};

static void InitDefaultsscc_info_StatisticsResp_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_StatisticsResp_default_instance_;
    new (ptr) ::event_store::client::projections::StatisticsResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::StatisticsResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatisticsResp_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatisticsResp_projections_2eproto}, {
      &scc_info_StatisticsResp_Details_projections_2eproto.base,}};

static void InitDefaultsscc_info_StatisticsResp_Details_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_StatisticsResp_Details_default_instance_;
    new (ptr) ::event_store::client::projections::StatisticsResp_Details();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::StatisticsResp_Details::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatisticsResp_Details_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StatisticsResp_Details_projections_2eproto}, {}};

static void InitDefaultsscc_info_UpdateReq_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_UpdateReq_default_instance_;
    new (ptr) ::event_store::client::projections::UpdateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::UpdateReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateReq_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateReq_projections_2eproto}, {
      &scc_info_UpdateReq_Options_projections_2eproto.base,}};

static void InitDefaultsscc_info_UpdateReq_Options_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_UpdateReq_Options_default_instance_;
    new (ptr) ::event_store::client::projections::UpdateReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::UpdateReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateReq_Options_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateReq_Options_projections_2eproto}, {
      &scc_info_Empty_shared_2eproto.base,}};

static void InitDefaultsscc_info_UpdateResp_projections_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::projections::_UpdateResp_default_instance_;
    new (ptr) ::event_store::client::projections::UpdateResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::projections::UpdateResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateResp_projections_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateResp_projections_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_projections_2eproto[30];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_projections_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_projections_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_projections_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq_Options_Transient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq_Options_Transient, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq_Options_Continuous, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq_Options_Continuous, name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq_Options_Continuous, emit_enabled_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq_Options_Continuous, track_emitted_streams_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq_Options, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::event_store::client::projections::CreateReq_OptionsDefaultTypeInternal, one_time_),
  offsetof(::event_store::client::projections::CreateReq_OptionsDefaultTypeInternal, transient_),
  offsetof(::event_store::client::projections::CreateReq_OptionsDefaultTypeInternal, continuous_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq_Options, query_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq_Options, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::CreateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::UpdateReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::UpdateReq_Options, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::UpdateReq_Options, name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::UpdateReq_Options, query_),
  offsetof(::event_store::client::projections::UpdateReq_OptionsDefaultTypeInternal, emit_enabled_),
  offsetof(::event_store::client::projections::UpdateReq_OptionsDefaultTypeInternal, no_emit_options_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::UpdateReq_Options, emit_option_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::UpdateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::UpdateReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::UpdateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DeleteReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DeleteReq_Options, name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DeleteReq_Options, delete_emitted_streams_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DeleteReq_Options, delete_state_stream_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DeleteReq_Options, delete_checkpoint_stream_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DeleteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DeleteReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DeleteResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsReq_Options, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::event_store::client::projections::StatisticsReq_OptionsDefaultTypeInternal, name_),
  offsetof(::event_store::client::projections::StatisticsReq_OptionsDefaultTypeInternal, all_),
  offsetof(::event_store::client::projections::StatisticsReq_OptionsDefaultTypeInternal, transient_),
  offsetof(::event_store::client::projections::StatisticsReq_OptionsDefaultTypeInternal, continuous_),
  offsetof(::event_store::client::projections::StatisticsReq_OptionsDefaultTypeInternal, one_time_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsReq_Options, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, coreprocessingtime_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, version_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, epoch_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, effectivename_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, writesinprogress_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, readsinprogress_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, partitionscached_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, status_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, statereason_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, mode_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, position_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, progress_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, lastcheckpoint_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, eventsprocessedafterrestart_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, checkpointstatus_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, bufferedevents_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, writependingeventsbeforecheckpoint_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp_Details, writependingeventsaftercheckpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StatisticsResp, details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StateReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StateReq_Options, name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StateReq_Options, partition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StateReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::StateResp, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResultReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResultReq_Options, name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResultReq_Options, partition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResultReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResultReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResultResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResultResp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResetReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResetReq_Options, name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResetReq_Options, write_checkpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResetReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResetReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::ResetResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::EnableReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::EnableReq_Options, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::EnableReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::EnableReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::EnableResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DisableReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DisableReq_Options, name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DisableReq_Options, write_checkpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DisableReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DisableReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::projections::DisableResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::event_store::client::projections::CreateReq_Options_Transient)},
  { 6, -1, sizeof(::event_store::client::projections::CreateReq_Options_Continuous)},
  { 14, -1, sizeof(::event_store::client::projections::CreateReq_Options)},
  { 24, -1, sizeof(::event_store::client::projections::CreateReq)},
  { 30, -1, sizeof(::event_store::client::projections::CreateResp)},
  { 35, -1, sizeof(::event_store::client::projections::UpdateReq_Options)},
  { 45, -1, sizeof(::event_store::client::projections::UpdateReq)},
  { 51, -1, sizeof(::event_store::client::projections::UpdateResp)},
  { 56, -1, sizeof(::event_store::client::projections::DeleteReq_Options)},
  { 65, -1, sizeof(::event_store::client::projections::DeleteReq)},
  { 71, -1, sizeof(::event_store::client::projections::DeleteResp)},
  { 76, -1, sizeof(::event_store::client::projections::StatisticsReq_Options)},
  { 87, -1, sizeof(::event_store::client::projections::StatisticsReq)},
  { 93, -1, sizeof(::event_store::client::projections::StatisticsResp_Details)},
  { 117, -1, sizeof(::event_store::client::projections::StatisticsResp)},
  { 123, -1, sizeof(::event_store::client::projections::StateReq_Options)},
  { 130, -1, sizeof(::event_store::client::projections::StateReq)},
  { 136, -1, sizeof(::event_store::client::projections::StateResp)},
  { 142, -1, sizeof(::event_store::client::projections::ResultReq_Options)},
  { 149, -1, sizeof(::event_store::client::projections::ResultReq)},
  { 155, -1, sizeof(::event_store::client::projections::ResultResp)},
  { 161, -1, sizeof(::event_store::client::projections::ResetReq_Options)},
  { 168, -1, sizeof(::event_store::client::projections::ResetReq)},
  { 174, -1, sizeof(::event_store::client::projections::ResetResp)},
  { 179, -1, sizeof(::event_store::client::projections::EnableReq_Options)},
  { 185, -1, sizeof(::event_store::client::projections::EnableReq)},
  { 191, -1, sizeof(::event_store::client::projections::EnableResp)},
  { 196, -1, sizeof(::event_store::client::projections::DisableReq_Options)},
  { 203, -1, sizeof(::event_store::client::projections::DisableReq)},
  { 209, -1, sizeof(::event_store::client::projections::DisableResp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_CreateReq_Options_Transient_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_CreateReq_Options_Continuous_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_CreateReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_CreateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_CreateResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_UpdateReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_UpdateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_UpdateResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_DeleteReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_DeleteReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_DeleteResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_StatisticsReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_StatisticsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_StatisticsResp_Details_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_StatisticsResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_StateReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_StateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_StateResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_ResultReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_ResultReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_ResultResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_ResetReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_ResetReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_ResetResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_EnableReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_EnableReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_EnableResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_DisableReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_DisableReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::projections::_DisableResp_default_instance_),
};

const char descriptor_table_protodef_projections_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021projections.proto\022\036event_store.client."
  "projections\032\034google/protobuf/struct.prot"
  "o\032\014shared.proto\"\263\003\n\tCreateReq\022B\n\007options"
  "\030\001 \001(\01321.event_store.client.projections."
  "CreateReq.Options\032\341\002\n\007Options\022-\n\010one_tim"
  "e\030\001 \001(\0132\031.event_store.client.EmptyH\000\022P\n\t"
  "transient\030\002 \001(\0132;.event_store.client.pro"
  "jections.CreateReq.Options.TransientH\000\022R"
  "\n\ncontinuous\030\003 \001(\0132<.event_store.client."
  "projections.CreateReq.Options.Continuous"
  "H\000\022\r\n\005query\030\004 \001(\t\032\031\n\tTransient\022\014\n\004name\030\001"
  " \001(\t\032O\n\nContinuous\022\014\n\004name\030\001 \001(\t\022\024\n\014emit"
  "_enabled\030\002 \001(\010\022\035\n\025track_emitted_streams\030"
  "\003 \001(\010B\006\n\004mode\"\014\n\nCreateResp\"\325\001\n\tUpdateRe"
  "q\022B\n\007options\030\001 \001(\01321.event_store.client."
  "projections.UpdateReq.Options\032\203\001\n\007Option"
  "s\022\014\n\004name\030\001 \001(\t\022\r\n\005query\030\002 \001(\t\022\026\n\014emit_e"
  "nabled\030\003 \001(\010H\000\0224\n\017no_emit_options\030\004 \001(\0132"
  "\031.event_store.client.EmptyH\000B\r\n\013emit_opt"
  "ion\"\014\n\nUpdateResp\"\307\001\n\tDeleteReq\022B\n\007optio"
  "ns\030\001 \001(\01321.event_store.client.projection"
  "s.DeleteReq.Options\032v\n\007Options\022\014\n\004name\030\001"
  " \001(\t\022\036\n\026delete_emitted_streams\030\002 \001(\010\022\033\n\023"
  "delete_state_stream\030\003 \001(\010\022 \n\030delete_chec"
  "kpoint_stream\030\004 \001(\010\"\014\n\nDeleteResp\"\265\002\n\rSt"
  "atisticsReq\022F\n\007options\030\001 \001(\01325.event_sto"
  "re.client.projections.StatisticsReq.Opti"
  "ons\032\333\001\n\007Options\022\016\n\004name\030\001 \001(\tH\000\022(\n\003all\030\002"
  " \001(\0132\031.event_store.client.EmptyH\000\022.\n\ttra"
  "nsient\030\003 \001(\0132\031.event_store.client.EmptyH"
  "\000\022/\n\ncontinuous\030\004 \001(\0132\031.event_store.clie"
  "nt.EmptyH\000\022-\n\010one_time\030\005 \001(\0132\031.event_sto"
  "re.client.EmptyH\000B\006\n\004mode\"\260\004\n\016Statistics"
  "Resp\022G\n\007details\030\001 \001(\01326.event_store.clie"
  "nt.projections.StatisticsResp.Details\032\324\003"
  "\n\007Details\022\032\n\022coreProcessingTime\030\001 \001(\003\022\017\n"
  "\007version\030\002 \001(\003\022\r\n\005epoch\030\003 \001(\003\022\025\n\reffecti"
  "veName\030\004 \001(\t\022\030\n\020writesInProgress\030\005 \001(\005\022\027"
  "\n\017readsInProgress\030\006 \001(\005\022\030\n\020partitionsCac"
  "hed\030\007 \001(\005\022\016\n\006status\030\010 \001(\t\022\023\n\013stateReason"
  "\030\t \001(\t\022\014\n\004name\030\n \001(\t\022\014\n\004mode\030\013 \001(\t\022\020\n\010po"
  "sition\030\014 \001(\t\022\020\n\010progress\030\r \001(\002\022\026\n\016lastCh"
  "eckpoint\030\016 \001(\t\022#\n\033eventsProcessedAfterRe"
  "start\030\017 \001(\003\022\030\n\020checkpointStatus\030\020 \001(\t\022\026\n"
  "\016bufferedEvents\030\021 \001(\003\022*\n\"writePendingEve"
  "ntsBeforeCheckpoint\030\022 \001(\005\022)\n!writePendin"
  "gEventsAfterCheckpoint\030\023 \001(\005\"y\n\010StateReq"
  "\022A\n\007options\030\001 \001(\01320.event_store.client.p"
  "rojections.StateReq.Options\032*\n\007Options\022\014"
  "\n\004name\030\001 \001(\t\022\021\n\tpartition\030\002 \001(\t\"2\n\tState"
  "Resp\022%\n\005state\030\001 \001(\0132\026.google.protobuf.Va"
  "lue\"{\n\tResultReq\022B\n\007options\030\001 \001(\01321.even"
  "t_store.client.projections.ResultReq.Opt"
  "ions\032*\n\007Options\022\014\n\004name\030\001 \001(\t\022\021\n\tpartiti"
  "on\030\002 \001(\t\"4\n\nResultResp\022&\n\006result\030\001 \001(\0132\026"
  ".google.protobuf.Value\"\200\001\n\010ResetReq\022A\n\007o"
  "ptions\030\001 \001(\01320.event_store.client.projec"
  "tions.ResetReq.Options\0321\n\007Options\022\014\n\004nam"
  "e\030\001 \001(\t\022\030\n\020write_checkpoint\030\002 \001(\010\"\013\n\tRes"
  "etResp\"h\n\tEnableReq\022B\n\007options\030\001 \001(\01321.e"
  "vent_store.client.projections.EnableReq."
  "Options\032\027\n\007Options\022\014\n\004name\030\001 \001(\t\"\014\n\nEnab"
  "leResp\"\204\001\n\nDisableReq\022C\n\007options\030\001 \001(\01322"
  ".event_store.client.projections.DisableR"
  "eq.Options\0321\n\007Options\022\014\n\004name\030\001 \001(\t\022\030\n\020w"
  "rite_checkpoint\030\002 \001(\010\"\r\n\013DisableResp2\313\007\n"
  "\013Projections\022_\n\006Create\022).event_store.cli"
  "ent.projections.CreateReq\032*.event_store."
  "client.projections.CreateResp\022_\n\006Update\022"
  ").event_store.client.projections.UpdateR"
  "eq\032*.event_store.client.projections.Upda"
  "teResp\022_\n\006Delete\022).event_store.client.pr"
  "ojections.DeleteReq\032*.event_store.client"
  ".projections.DeleteResp\022m\n\nStatistics\022-."
  "event_store.client.projections.Statistic"
  "sReq\032..event_store.client.projections.St"
  "atisticsResp0\001\022b\n\007Disable\022*.event_store."
  "client.projections.DisableReq\032+.event_st"
  "ore.client.projections.DisableResp\022_\n\006En"
  "able\022).event_store.client.projections.En"
  "ableReq\032*.event_store.client.projections"
  ".EnableResp\022\\\n\005Reset\022(.event_store.clien"
  "t.projections.ResetReq\032).event_store.cli"
  "ent.projections.ResetResp\022\\\n\005State\022(.eve"
  "nt_store.client.projections.StateReq\032).e"
  "vent_store.client.projections.StateResp\022"
  "_\n\006Result\022).event_store.client.projectio"
  "ns.ResultReq\032*.event_store.client.projec"
  "tions.ResultResp\022H\n\020RestartSubsystem\022\031.e"
  "vent_store.client.Empty\032\031.event_store.cl"
  "ient.EmptyB+\n)com.eventstore.dbclient.pr"
  "oto.projectionsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_projections_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_shared_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_projections_2eproto_sccs[30] = {
  &scc_info_CreateReq_projections_2eproto.base,
  &scc_info_CreateReq_Options_projections_2eproto.base,
  &scc_info_CreateReq_Options_Continuous_projections_2eproto.base,
  &scc_info_CreateReq_Options_Transient_projections_2eproto.base,
  &scc_info_CreateResp_projections_2eproto.base,
  &scc_info_DeleteReq_projections_2eproto.base,
  &scc_info_DeleteReq_Options_projections_2eproto.base,
  &scc_info_DeleteResp_projections_2eproto.base,
  &scc_info_DisableReq_projections_2eproto.base,
  &scc_info_DisableReq_Options_projections_2eproto.base,
  &scc_info_DisableResp_projections_2eproto.base,
  &scc_info_EnableReq_projections_2eproto.base,
  &scc_info_EnableReq_Options_projections_2eproto.base,
  &scc_info_EnableResp_projections_2eproto.base,
  &scc_info_ResetReq_projections_2eproto.base,
  &scc_info_ResetReq_Options_projections_2eproto.base,
  &scc_info_ResetResp_projections_2eproto.base,
  &scc_info_ResultReq_projections_2eproto.base,
  &scc_info_ResultReq_Options_projections_2eproto.base,
  &scc_info_ResultResp_projections_2eproto.base,
  &scc_info_StateReq_projections_2eproto.base,
  &scc_info_StateReq_Options_projections_2eproto.base,
  &scc_info_StateResp_projections_2eproto.base,
  &scc_info_StatisticsReq_projections_2eproto.base,
  &scc_info_StatisticsReq_Options_projections_2eproto.base,
  &scc_info_StatisticsResp_projections_2eproto.base,
  &scc_info_StatisticsResp_Details_projections_2eproto.base,
  &scc_info_UpdateReq_projections_2eproto.base,
  &scc_info_UpdateReq_Options_projections_2eproto.base,
  &scc_info_UpdateResp_projections_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_projections_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_projections_2eproto = {
  false, false, descriptor_table_protodef_projections_2eproto, "projections.proto", 3663,
  &descriptor_table_projections_2eproto_once, descriptor_table_projections_2eproto_sccs, descriptor_table_projections_2eproto_deps, 30, 2,
  schemas, file_default_instances, TableStruct_projections_2eproto::offsets,
  file_level_metadata_projections_2eproto, 30, file_level_enum_descriptors_projections_2eproto, file_level_service_descriptors_projections_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_projections_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_projections_2eproto)), true);
namespace event_store {
namespace client {
namespace projections {

// ===================================================================

void CreateReq_Options_Transient::InitAsDefaultInstance() {
}
class CreateReq_Options_Transient::_Internal {
 public:
};

CreateReq_Options_Transient::CreateReq_Options_Transient(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.CreateReq.Options.Transient)
}
CreateReq_Options_Transient::CreateReq_Options_Transient(const CreateReq_Options_Transient& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.CreateReq.Options.Transient)
}

void CreateReq_Options_Transient::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateReq_Options_Transient_projections_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateReq_Options_Transient::~CreateReq_Options_Transient() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.CreateReq.Options.Transient)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateReq_Options_Transient::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateReq_Options_Transient::ArenaDtor(void* object) {
  CreateReq_Options_Transient* _this = reinterpret_cast< CreateReq_Options_Transient* >(object);
  (void)_this;
}
void CreateReq_Options_Transient::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateReq_Options_Transient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateReq_Options_Transient& CreateReq_Options_Transient::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateReq_Options_Transient_projections_2eproto.base);
  return *internal_default_instance();
}


void CreateReq_Options_Transient::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.CreateReq.Options.Transient)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateReq_Options_Transient::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.CreateReq.Options.Transient.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateReq_Options_Transient::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.CreateReq.Options.Transient)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.CreateReq.Options.Transient.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.CreateReq.Options.Transient)
  return target;
}

size_t CreateReq_Options_Transient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.CreateReq.Options.Transient)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateReq_Options_Transient::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.CreateReq.Options.Transient)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateReq_Options_Transient* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateReq_Options_Transient>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.CreateReq.Options.Transient)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.CreateReq.Options.Transient)
    MergeFrom(*source);
  }
}

void CreateReq_Options_Transient::MergeFrom(const CreateReq_Options_Transient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.CreateReq.Options.Transient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void CreateReq_Options_Transient::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.CreateReq.Options.Transient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateReq_Options_Transient::CopyFrom(const CreateReq_Options_Transient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.CreateReq.Options.Transient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateReq_Options_Transient::IsInitialized() const {
  return true;
}

void CreateReq_Options_Transient::InternalSwap(CreateReq_Options_Transient* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateReq_Options_Transient::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateReq_Options_Continuous::InitAsDefaultInstance() {
}
class CreateReq_Options_Continuous::_Internal {
 public:
};

CreateReq_Options_Continuous::CreateReq_Options_Continuous(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.CreateReq.Options.Continuous)
}
CreateReq_Options_Continuous::CreateReq_Options_Continuous(const CreateReq_Options_Continuous& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&emit_enabled_, &from.emit_enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&track_emitted_streams_) -
    reinterpret_cast<char*>(&emit_enabled_)) + sizeof(track_emitted_streams_));
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.CreateReq.Options.Continuous)
}

void CreateReq_Options_Continuous::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateReq_Options_Continuous_projections_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&emit_enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&track_emitted_streams_) -
      reinterpret_cast<char*>(&emit_enabled_)) + sizeof(track_emitted_streams_));
}

CreateReq_Options_Continuous::~CreateReq_Options_Continuous() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.CreateReq.Options.Continuous)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateReq_Options_Continuous::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateReq_Options_Continuous::ArenaDtor(void* object) {
  CreateReq_Options_Continuous* _this = reinterpret_cast< CreateReq_Options_Continuous* >(object);
  (void)_this;
}
void CreateReq_Options_Continuous::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateReq_Options_Continuous::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateReq_Options_Continuous& CreateReq_Options_Continuous::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateReq_Options_Continuous_projections_2eproto.base);
  return *internal_default_instance();
}


void CreateReq_Options_Continuous::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.CreateReq.Options.Continuous)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&emit_enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&track_emitted_streams_) -
      reinterpret_cast<char*>(&emit_enabled_)) + sizeof(track_emitted_streams_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateReq_Options_Continuous::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.CreateReq.Options.Continuous.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool emit_enabled = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          emit_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool track_emitted_streams = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          track_emitted_streams_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateReq_Options_Continuous::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.CreateReq.Options.Continuous)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.CreateReq.Options.Continuous.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool emit_enabled = 2;
  if (this->emit_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_emit_enabled(), target);
  }

  // bool track_emitted_streams = 3;
  if (this->track_emitted_streams() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_track_emitted_streams(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.CreateReq.Options.Continuous)
  return target;
}

size_t CreateReq_Options_Continuous::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.CreateReq.Options.Continuous)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool emit_enabled = 2;
  if (this->emit_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool track_emitted_streams = 3;
  if (this->track_emitted_streams() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateReq_Options_Continuous::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.CreateReq.Options.Continuous)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateReq_Options_Continuous* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateReq_Options_Continuous>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.CreateReq.Options.Continuous)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.CreateReq.Options.Continuous)
    MergeFrom(*source);
  }
}

void CreateReq_Options_Continuous::MergeFrom(const CreateReq_Options_Continuous& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.CreateReq.Options.Continuous)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.emit_enabled() != 0) {
    _internal_set_emit_enabled(from._internal_emit_enabled());
  }
  if (from.track_emitted_streams() != 0) {
    _internal_set_track_emitted_streams(from._internal_track_emitted_streams());
  }
}

void CreateReq_Options_Continuous::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.CreateReq.Options.Continuous)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateReq_Options_Continuous::CopyFrom(const CreateReq_Options_Continuous& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.CreateReq.Options.Continuous)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateReq_Options_Continuous::IsInitialized() const {
  return true;
}

void CreateReq_Options_Continuous::InternalSwap(CreateReq_Options_Continuous* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateReq_Options_Continuous, track_emitted_streams_)
      + sizeof(CreateReq_Options_Continuous::track_emitted_streams_)
      - PROTOBUF_FIELD_OFFSET(CreateReq_Options_Continuous, emit_enabled_)>(
          reinterpret_cast<char*>(&emit_enabled_),
          reinterpret_cast<char*>(&other->emit_enabled_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateReq_Options_Continuous::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateReq_Options::InitAsDefaultInstance() {
  ::event_store::client::projections::_CreateReq_Options_default_instance_.one_time_ = const_cast< ::event_store::client::Empty*>(
      ::event_store::client::Empty::internal_default_instance());
  ::event_store::client::projections::_CreateReq_Options_default_instance_.transient_ = const_cast< ::event_store::client::projections::CreateReq_Options_Transient*>(
      ::event_store::client::projections::CreateReq_Options_Transient::internal_default_instance());
  ::event_store::client::projections::_CreateReq_Options_default_instance_.continuous_ = const_cast< ::event_store::client::projections::CreateReq_Options_Continuous*>(
      ::event_store::client::projections::CreateReq_Options_Continuous::internal_default_instance());
}
class CreateReq_Options::_Internal {
 public:
  static const ::event_store::client::Empty& one_time(const CreateReq_Options* msg);
  static const ::event_store::client::projections::CreateReq_Options_Transient& transient(const CreateReq_Options* msg);
  static const ::event_store::client::projections::CreateReq_Options_Continuous& continuous(const CreateReq_Options* msg);
};

const ::event_store::client::Empty&
CreateReq_Options::_Internal::one_time(const CreateReq_Options* msg) {
  return *msg->mode_.one_time_;
}
const ::event_store::client::projections::CreateReq_Options_Transient&
CreateReq_Options::_Internal::transient(const CreateReq_Options* msg) {
  return *msg->mode_.transient_;
}
const ::event_store::client::projections::CreateReq_Options_Continuous&
CreateReq_Options::_Internal::continuous(const CreateReq_Options* msg) {
  return *msg->mode_.continuous_;
}
void CreateReq_Options::set_allocated_one_time(::event_store::client::Empty* one_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mode();
  if (one_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(one_time)->GetArena();
    if (message_arena != submessage_arena) {
      one_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, one_time, submessage_arena);
    }
    set_has_one_time();
    mode_.one_time_ = one_time;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.projections.CreateReq.Options.one_time)
}
void CreateReq_Options::clear_one_time() {
  if (_internal_has_one_time()) {
    if (GetArena() == nullptr) {
      delete mode_.one_time_;
    }
    clear_has_mode();
  }
}
void CreateReq_Options::set_allocated_transient(::event_store::client::projections::CreateReq_Options_Transient* transient) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mode();
  if (transient) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(transient);
    if (message_arena != submessage_arena) {
      transient = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transient, submessage_arena);
    }
    set_has_transient();
    mode_.transient_ = transient;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.projections.CreateReq.Options.transient)
}
void CreateReq_Options::set_allocated_continuous(::event_store::client::projections::CreateReq_Options_Continuous* continuous) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mode();
  if (continuous) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(continuous);
    if (message_arena != submessage_arena) {
      continuous = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, continuous, submessage_arena);
    }
    set_has_continuous();
    mode_.continuous_ = continuous;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.projections.CreateReq.Options.continuous)
}
CreateReq_Options::CreateReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.CreateReq.Options)
}
CreateReq_Options::CreateReq_Options(const CreateReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  clear_has_mode();
  switch (from.mode_case()) {
    case kOneTime: {
      _internal_mutable_one_time()->::event_store::client::Empty::MergeFrom(from._internal_one_time());
      break;
    }
    case kTransient: {
      _internal_mutable_transient()->::event_store::client::projections::CreateReq_Options_Transient::MergeFrom(from._internal_transient());
      break;
    }
    case kContinuous: {
      _internal_mutable_continuous()->::event_store::client::projections::CreateReq_Options_Continuous::MergeFrom(from._internal_continuous());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.CreateReq.Options)
}

void CreateReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateReq_Options_projections_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_mode();
}

CreateReq_Options::~CreateReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.CreateReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_mode()) {
    clear_mode();
  }
}

void CreateReq_Options::ArenaDtor(void* object) {
  CreateReq_Options* _this = reinterpret_cast< CreateReq_Options* >(object);
  (void)_this;
}
void CreateReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateReq_Options& CreateReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateReq_Options_projections_2eproto.base);
  return *internal_default_instance();
}


void CreateReq_Options::clear_mode() {
// @@protoc_insertion_point(one_of_clear_start:event_store.client.projections.CreateReq.Options)
  switch (mode_case()) {
    case kOneTime: {
      if (GetArena() == nullptr) {
        delete mode_.one_time_;
      }
      break;
    }
    case kTransient: {
      if (GetArena() == nullptr) {
        delete mode_.transient_;
      }
      break;
    }
    case kContinuous: {
      if (GetArena() == nullptr) {
        delete mode_.continuous_;
      }
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODE_NOT_SET;
}


void CreateReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.CreateReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_mode();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.Empty one_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_one_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .event_store.client.projections.CreateReq.Options.Transient transient = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transient(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .event_store.client.projections.CreateReq.Options.Continuous continuous = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_continuous(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string query = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.CreateReq.Options.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.CreateReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.Empty one_time = 1;
  if (_internal_has_one_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::one_time(this), target, stream);
  }

  // .event_store.client.projections.CreateReq.Options.Transient transient = 2;
  if (_internal_has_transient()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::transient(this), target, stream);
  }

  // .event_store.client.projections.CreateReq.Options.Continuous continuous = 3;
  if (_internal_has_continuous()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::continuous(this), target, stream);
  }

  // string query = 4;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.CreateReq.Options.query");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.CreateReq.Options)
  return target;
}

size_t CreateReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.CreateReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 4;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  switch (mode_case()) {
    // .event_store.client.Empty one_time = 1;
    case kOneTime: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.one_time_);
      break;
    }
    // .event_store.client.projections.CreateReq.Options.Transient transient = 2;
    case kTransient: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.transient_);
      break;
    }
    // .event_store.client.projections.CreateReq.Options.Continuous continuous = 3;
    case kContinuous: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.continuous_);
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.CreateReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.CreateReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.CreateReq.Options)
    MergeFrom(*source);
  }
}

void CreateReq_Options::MergeFrom(const CreateReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.CreateReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  switch (from.mode_case()) {
    case kOneTime: {
      _internal_mutable_one_time()->::event_store::client::Empty::MergeFrom(from._internal_one_time());
      break;
    }
    case kTransient: {
      _internal_mutable_transient()->::event_store::client::projections::CreateReq_Options_Transient::MergeFrom(from._internal_transient());
      break;
    }
    case kContinuous: {
      _internal_mutable_continuous()->::event_store::client::projections::CreateReq_Options_Continuous::MergeFrom(from._internal_continuous());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
}

void CreateReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.CreateReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateReq_Options::CopyFrom(const CreateReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.CreateReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateReq_Options::IsInitialized() const {
  return true;
}

void CreateReq_Options::InternalSwap(CreateReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(mode_, other->mode_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateReq::InitAsDefaultInstance() {
  ::event_store::client::projections::_CreateReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::projections::CreateReq_Options*>(
      ::event_store::client::projections::CreateReq_Options::internal_default_instance());
}
class CreateReq::_Internal {
 public:
  static const ::event_store::client::projections::CreateReq_Options& options(const CreateReq* msg);
};

const ::event_store::client::projections::CreateReq_Options&
CreateReq::_Internal::options(const CreateReq* msg) {
  return *msg->options_;
}
CreateReq::CreateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.CreateReq)
}
CreateReq::CreateReq(const CreateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::projections::CreateReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.CreateReq)
}

void CreateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateReq_projections_2eproto.base);
  options_ = nullptr;
}

CreateReq::~CreateReq() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.CreateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void CreateReq::ArenaDtor(void* object) {
  CreateReq* _this = reinterpret_cast< CreateReq* >(object);
  (void)_this;
}
void CreateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateReq& CreateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateReq_projections_2eproto.base);
  return *internal_default_instance();
}


void CreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.CreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.projections.CreateReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.CreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.projections.CreateReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.CreateReq)
  return target;
}

size_t CreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.CreateReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.projections.CreateReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.CreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.CreateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.CreateReq)
    MergeFrom(*source);
  }
}

void CreateReq::MergeFrom(const CreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.CreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::projections::CreateReq_Options::MergeFrom(from._internal_options());
  }
}

void CreateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.CreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateReq::CopyFrom(const CreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.CreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateReq::IsInitialized() const {
  return true;
}

void CreateReq::InternalSwap(CreateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateResp::InitAsDefaultInstance() {
}
class CreateResp::_Internal {
 public:
};

CreateResp::CreateResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.CreateResp)
}
CreateResp::CreateResp(const CreateResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.CreateResp)
}

void CreateResp::SharedCtor() {
}

CreateResp::~CreateResp() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.CreateResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateResp::ArenaDtor(void* object) {
  CreateResp* _this = reinterpret_cast< CreateResp* >(object);
  (void)_this;
}
void CreateResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateResp& CreateResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateResp_projections_2eproto.base);
  return *internal_default_instance();
}


void CreateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.CreateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.CreateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.CreateResp)
  return target;
}

size_t CreateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.CreateResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.CreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.CreateResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.CreateResp)
    MergeFrom(*source);
  }
}

void CreateResp::MergeFrom(const CreateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.CreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.CreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateResp::CopyFrom(const CreateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.CreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateResp::IsInitialized() const {
  return true;
}

void CreateResp::InternalSwap(CreateResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateReq_Options::InitAsDefaultInstance() {
  ::event_store::client::projections::_UpdateReq_Options_default_instance_.emit_enabled_ = false;
  ::event_store::client::projections::_UpdateReq_Options_default_instance_.no_emit_options_ = const_cast< ::event_store::client::Empty*>(
      ::event_store::client::Empty::internal_default_instance());
}
class UpdateReq_Options::_Internal {
 public:
  static const ::event_store::client::Empty& no_emit_options(const UpdateReq_Options* msg);
};

const ::event_store::client::Empty&
UpdateReq_Options::_Internal::no_emit_options(const UpdateReq_Options* msg) {
  return *msg->emit_option_.no_emit_options_;
}
void UpdateReq_Options::set_allocated_no_emit_options(::event_store::client::Empty* no_emit_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_emit_option();
  if (no_emit_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(no_emit_options)->GetArena();
    if (message_arena != submessage_arena) {
      no_emit_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, no_emit_options, submessage_arena);
    }
    set_has_no_emit_options();
    emit_option_.no_emit_options_ = no_emit_options;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.projections.UpdateReq.Options.no_emit_options)
}
void UpdateReq_Options::clear_no_emit_options() {
  if (_internal_has_no_emit_options()) {
    if (GetArena() == nullptr) {
      delete emit_option_.no_emit_options_;
    }
    clear_has_emit_option();
  }
}
UpdateReq_Options::UpdateReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.UpdateReq.Options)
}
UpdateReq_Options::UpdateReq_Options(const UpdateReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  clear_has_emit_option();
  switch (from.emit_option_case()) {
    case kEmitEnabled: {
      _internal_set_emit_enabled(from._internal_emit_enabled());
      break;
    }
    case kNoEmitOptions: {
      _internal_mutable_no_emit_options()->::event_store::client::Empty::MergeFrom(from._internal_no_emit_options());
      break;
    }
    case EMIT_OPTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.UpdateReq.Options)
}

void UpdateReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateReq_Options_projections_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_emit_option();
}

UpdateReq_Options::~UpdateReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.UpdateReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_emit_option()) {
    clear_emit_option();
  }
}

void UpdateReq_Options::ArenaDtor(void* object) {
  UpdateReq_Options* _this = reinterpret_cast< UpdateReq_Options* >(object);
  (void)_this;
}
void UpdateReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateReq_Options& UpdateReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateReq_Options_projections_2eproto.base);
  return *internal_default_instance();
}


void UpdateReq_Options::clear_emit_option() {
// @@protoc_insertion_point(one_of_clear_start:event_store.client.projections.UpdateReq.Options)
  switch (emit_option_case()) {
    case kEmitEnabled: {
      // No need to clear
      break;
    }
    case kNoEmitOptions: {
      if (GetArena() == nullptr) {
        delete emit_option_.no_emit_options_;
      }
      break;
    }
    case EMIT_OPTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EMIT_OPTION_NOT_SET;
}


void UpdateReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.UpdateReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_emit_option();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.UpdateReq.Options.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string query = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.UpdateReq.Options.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool emit_enabled = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _internal_set_emit_enabled(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .event_store.client.Empty no_emit_options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_no_emit_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.UpdateReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.UpdateReq.Options.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string query = 2;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.UpdateReq.Options.query");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_query(), target);
  }

  // bool emit_enabled = 3;
  if (_internal_has_emit_enabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_emit_enabled(), target);
  }

  // .event_store.client.Empty no_emit_options = 4;
  if (_internal_has_no_emit_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::no_emit_options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.UpdateReq.Options)
  return target;
}

size_t UpdateReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.UpdateReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  switch (emit_option_case()) {
    // bool emit_enabled = 3;
    case kEmitEnabled: {
      total_size += 1 + 1;
      break;
    }
    // .event_store.client.Empty no_emit_options = 4;
    case kNoEmitOptions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *emit_option_.no_emit_options_);
      break;
    }
    case EMIT_OPTION_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.UpdateReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.UpdateReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.UpdateReq.Options)
    MergeFrom(*source);
  }
}

void UpdateReq_Options::MergeFrom(const UpdateReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.UpdateReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  switch (from.emit_option_case()) {
    case kEmitEnabled: {
      _internal_set_emit_enabled(from._internal_emit_enabled());
      break;
    }
    case kNoEmitOptions: {
      _internal_mutable_no_emit_options()->::event_store::client::Empty::MergeFrom(from._internal_no_emit_options());
      break;
    }
    case EMIT_OPTION_NOT_SET: {
      break;
    }
  }
}

void UpdateReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.UpdateReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateReq_Options::CopyFrom(const UpdateReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.UpdateReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateReq_Options::IsInitialized() const {
  return true;
}

void UpdateReq_Options::InternalSwap(UpdateReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(emit_option_, other->emit_option_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateReq::InitAsDefaultInstance() {
  ::event_store::client::projections::_UpdateReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::projections::UpdateReq_Options*>(
      ::event_store::client::projections::UpdateReq_Options::internal_default_instance());
}
class UpdateReq::_Internal {
 public:
  static const ::event_store::client::projections::UpdateReq_Options& options(const UpdateReq* msg);
};

const ::event_store::client::projections::UpdateReq_Options&
UpdateReq::_Internal::options(const UpdateReq* msg) {
  return *msg->options_;
}
UpdateReq::UpdateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.UpdateReq)
}
UpdateReq::UpdateReq(const UpdateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::projections::UpdateReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.UpdateReq)
}

void UpdateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateReq_projections_2eproto.base);
  options_ = nullptr;
}

UpdateReq::~UpdateReq() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.UpdateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void UpdateReq::ArenaDtor(void* object) {
  UpdateReq* _this = reinterpret_cast< UpdateReq* >(object);
  (void)_this;
}
void UpdateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateReq& UpdateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateReq_projections_2eproto.base);
  return *internal_default_instance();
}


void UpdateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.UpdateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.projections.UpdateReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.UpdateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.projections.UpdateReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.UpdateReq)
  return target;
}

size_t UpdateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.UpdateReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.projections.UpdateReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.UpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.UpdateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.UpdateReq)
    MergeFrom(*source);
  }
}

void UpdateReq::MergeFrom(const UpdateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.UpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::projections::UpdateReq_Options::MergeFrom(from._internal_options());
  }
}

void UpdateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.UpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateReq::CopyFrom(const UpdateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.UpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateReq::IsInitialized() const {
  return true;
}

void UpdateReq::InternalSwap(UpdateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateResp::InitAsDefaultInstance() {
}
class UpdateResp::_Internal {
 public:
};

UpdateResp::UpdateResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.UpdateResp)
}
UpdateResp::UpdateResp(const UpdateResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.UpdateResp)
}

void UpdateResp::SharedCtor() {
}

UpdateResp::~UpdateResp() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.UpdateResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateResp::ArenaDtor(void* object) {
  UpdateResp* _this = reinterpret_cast< UpdateResp* >(object);
  (void)_this;
}
void UpdateResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateResp& UpdateResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateResp_projections_2eproto.base);
  return *internal_default_instance();
}


void UpdateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.UpdateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.UpdateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.UpdateResp)
  return target;
}

size_t UpdateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.UpdateResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.UpdateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.UpdateResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.UpdateResp)
    MergeFrom(*source);
  }
}

void UpdateResp::MergeFrom(const UpdateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.UpdateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.UpdateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateResp::CopyFrom(const UpdateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.UpdateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateResp::IsInitialized() const {
  return true;
}

void UpdateResp::InternalSwap(UpdateResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteReq_Options::InitAsDefaultInstance() {
}
class DeleteReq_Options::_Internal {
 public:
};

DeleteReq_Options::DeleteReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.DeleteReq.Options)
}
DeleteReq_Options::DeleteReq_Options(const DeleteReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&delete_emitted_streams_, &from.delete_emitted_streams_,
    static_cast<size_t>(reinterpret_cast<char*>(&delete_checkpoint_stream_) -
    reinterpret_cast<char*>(&delete_emitted_streams_)) + sizeof(delete_checkpoint_stream_));
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.DeleteReq.Options)
}

void DeleteReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteReq_Options_projections_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&delete_emitted_streams_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delete_checkpoint_stream_) -
      reinterpret_cast<char*>(&delete_emitted_streams_)) + sizeof(delete_checkpoint_stream_));
}

DeleteReq_Options::~DeleteReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.DeleteReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteReq_Options::ArenaDtor(void* object) {
  DeleteReq_Options* _this = reinterpret_cast< DeleteReq_Options* >(object);
  (void)_this;
}
void DeleteReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteReq_Options& DeleteReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteReq_Options_projections_2eproto.base);
  return *internal_default_instance();
}


void DeleteReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.DeleteReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&delete_emitted_streams_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delete_checkpoint_stream_) -
      reinterpret_cast<char*>(&delete_emitted_streams_)) + sizeof(delete_checkpoint_stream_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.DeleteReq.Options.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool delete_emitted_streams = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          delete_emitted_streams_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool delete_state_stream = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          delete_state_stream_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool delete_checkpoint_stream = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          delete_checkpoint_stream_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.DeleteReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.DeleteReq.Options.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool delete_emitted_streams = 2;
  if (this->delete_emitted_streams() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_delete_emitted_streams(), target);
  }

  // bool delete_state_stream = 3;
  if (this->delete_state_stream() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_delete_state_stream(), target);
  }

  // bool delete_checkpoint_stream = 4;
  if (this->delete_checkpoint_stream() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_delete_checkpoint_stream(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.DeleteReq.Options)
  return target;
}

size_t DeleteReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.DeleteReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool delete_emitted_streams = 2;
  if (this->delete_emitted_streams() != 0) {
    total_size += 1 + 1;
  }

  // bool delete_state_stream = 3;
  if (this->delete_state_stream() != 0) {
    total_size += 1 + 1;
  }

  // bool delete_checkpoint_stream = 4;
  if (this->delete_checkpoint_stream() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.DeleteReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.DeleteReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.DeleteReq.Options)
    MergeFrom(*source);
  }
}

void DeleteReq_Options::MergeFrom(const DeleteReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.DeleteReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.delete_emitted_streams() != 0) {
    _internal_set_delete_emitted_streams(from._internal_delete_emitted_streams());
  }
  if (from.delete_state_stream() != 0) {
    _internal_set_delete_state_stream(from._internal_delete_state_stream());
  }
  if (from.delete_checkpoint_stream() != 0) {
    _internal_set_delete_checkpoint_stream(from._internal_delete_checkpoint_stream());
  }
}

void DeleteReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.DeleteReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteReq_Options::CopyFrom(const DeleteReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.DeleteReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteReq_Options::IsInitialized() const {
  return true;
}

void DeleteReq_Options::InternalSwap(DeleteReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteReq_Options, delete_checkpoint_stream_)
      + sizeof(DeleteReq_Options::delete_checkpoint_stream_)
      - PROTOBUF_FIELD_OFFSET(DeleteReq_Options, delete_emitted_streams_)>(
          reinterpret_cast<char*>(&delete_emitted_streams_),
          reinterpret_cast<char*>(&other->delete_emitted_streams_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteReq::InitAsDefaultInstance() {
  ::event_store::client::projections::_DeleteReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::projections::DeleteReq_Options*>(
      ::event_store::client::projections::DeleteReq_Options::internal_default_instance());
}
class DeleteReq::_Internal {
 public:
  static const ::event_store::client::projections::DeleteReq_Options& options(const DeleteReq* msg);
};

const ::event_store::client::projections::DeleteReq_Options&
DeleteReq::_Internal::options(const DeleteReq* msg) {
  return *msg->options_;
}
DeleteReq::DeleteReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.DeleteReq)
}
DeleteReq::DeleteReq(const DeleteReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::projections::DeleteReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.DeleteReq)
}

void DeleteReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteReq_projections_2eproto.base);
  options_ = nullptr;
}

DeleteReq::~DeleteReq() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.DeleteReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void DeleteReq::ArenaDtor(void* object) {
  DeleteReq* _this = reinterpret_cast< DeleteReq* >(object);
  (void)_this;
}
void DeleteReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteReq& DeleteReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteReq_projections_2eproto.base);
  return *internal_default_instance();
}


void DeleteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.DeleteReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.projections.DeleteReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.DeleteReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.projections.DeleteReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.DeleteReq)
  return target;
}

size_t DeleteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.DeleteReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.projections.DeleteReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.DeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.DeleteReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.DeleteReq)
    MergeFrom(*source);
  }
}

void DeleteReq::MergeFrom(const DeleteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.DeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::projections::DeleteReq_Options::MergeFrom(from._internal_options());
  }
}

void DeleteReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.DeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteReq::CopyFrom(const DeleteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.DeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteReq::IsInitialized() const {
  return true;
}

void DeleteReq::InternalSwap(DeleteReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResp::InitAsDefaultInstance() {
}
class DeleteResp::_Internal {
 public:
};

DeleteResp::DeleteResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.DeleteResp)
}
DeleteResp::DeleteResp(const DeleteResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.DeleteResp)
}

void DeleteResp::SharedCtor() {
}

DeleteResp::~DeleteResp() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.DeleteResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteResp::ArenaDtor(void* object) {
  DeleteResp* _this = reinterpret_cast< DeleteResp* >(object);
  (void)_this;
}
void DeleteResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResp& DeleteResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResp_projections_2eproto.base);
  return *internal_default_instance();
}


void DeleteResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.DeleteResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.DeleteResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.DeleteResp)
  return target;
}

size_t DeleteResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.DeleteResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.DeleteResp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.DeleteResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.DeleteResp)
    MergeFrom(*source);
  }
}

void DeleteResp::MergeFrom(const DeleteResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.DeleteResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.DeleteResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResp::CopyFrom(const DeleteResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.DeleteResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResp::IsInitialized() const {
  return true;
}

void DeleteResp::InternalSwap(DeleteResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatisticsReq_Options::InitAsDefaultInstance() {
  ::event_store::client::projections::_StatisticsReq_Options_default_instance_.name_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::event_store::client::projections::_StatisticsReq_Options_default_instance_.all_ = const_cast< ::event_store::client::Empty*>(
      ::event_store::client::Empty::internal_default_instance());
  ::event_store::client::projections::_StatisticsReq_Options_default_instance_.transient_ = const_cast< ::event_store::client::Empty*>(
      ::event_store::client::Empty::internal_default_instance());
  ::event_store::client::projections::_StatisticsReq_Options_default_instance_.continuous_ = const_cast< ::event_store::client::Empty*>(
      ::event_store::client::Empty::internal_default_instance());
  ::event_store::client::projections::_StatisticsReq_Options_default_instance_.one_time_ = const_cast< ::event_store::client::Empty*>(
      ::event_store::client::Empty::internal_default_instance());
}
class StatisticsReq_Options::_Internal {
 public:
  static const ::event_store::client::Empty& all(const StatisticsReq_Options* msg);
  static const ::event_store::client::Empty& transient(const StatisticsReq_Options* msg);
  static const ::event_store::client::Empty& continuous(const StatisticsReq_Options* msg);
  static const ::event_store::client::Empty& one_time(const StatisticsReq_Options* msg);
};

const ::event_store::client::Empty&
StatisticsReq_Options::_Internal::all(const StatisticsReq_Options* msg) {
  return *msg->mode_.all_;
}
const ::event_store::client::Empty&
StatisticsReq_Options::_Internal::transient(const StatisticsReq_Options* msg) {
  return *msg->mode_.transient_;
}
const ::event_store::client::Empty&
StatisticsReq_Options::_Internal::continuous(const StatisticsReq_Options* msg) {
  return *msg->mode_.continuous_;
}
const ::event_store::client::Empty&
StatisticsReq_Options::_Internal::one_time(const StatisticsReq_Options* msg) {
  return *msg->mode_.one_time_;
}
void StatisticsReq_Options::set_allocated_all(::event_store::client::Empty* all) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mode();
  if (all) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(all)->GetArena();
    if (message_arena != submessage_arena) {
      all = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, all, submessage_arena);
    }
    set_has_all();
    mode_.all_ = all;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.projections.StatisticsReq.Options.all)
}
void StatisticsReq_Options::clear_all() {
  if (_internal_has_all()) {
    if (GetArena() == nullptr) {
      delete mode_.all_;
    }
    clear_has_mode();
  }
}
void StatisticsReq_Options::set_allocated_transient(::event_store::client::Empty* transient) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mode();
  if (transient) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transient)->GetArena();
    if (message_arena != submessage_arena) {
      transient = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transient, submessage_arena);
    }
    set_has_transient();
    mode_.transient_ = transient;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.projections.StatisticsReq.Options.transient)
}
void StatisticsReq_Options::clear_transient() {
  if (_internal_has_transient()) {
    if (GetArena() == nullptr) {
      delete mode_.transient_;
    }
    clear_has_mode();
  }
}
void StatisticsReq_Options::set_allocated_continuous(::event_store::client::Empty* continuous) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mode();
  if (continuous) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(continuous)->GetArena();
    if (message_arena != submessage_arena) {
      continuous = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, continuous, submessage_arena);
    }
    set_has_continuous();
    mode_.continuous_ = continuous;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.projections.StatisticsReq.Options.continuous)
}
void StatisticsReq_Options::clear_continuous() {
  if (_internal_has_continuous()) {
    if (GetArena() == nullptr) {
      delete mode_.continuous_;
    }
    clear_has_mode();
  }
}
void StatisticsReq_Options::set_allocated_one_time(::event_store::client::Empty* one_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mode();
  if (one_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(one_time)->GetArena();
    if (message_arena != submessage_arena) {
      one_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, one_time, submessage_arena);
    }
    set_has_one_time();
    mode_.one_time_ = one_time;
  }
  // @@protoc_insertion_point(field_set_allocated:event_store.client.projections.StatisticsReq.Options.one_time)
}
void StatisticsReq_Options::clear_one_time() {
  if (_internal_has_one_time()) {
    if (GetArena() == nullptr) {
      delete mode_.one_time_;
    }
    clear_has_mode();
  }
}
StatisticsReq_Options::StatisticsReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.StatisticsReq.Options)
}
StatisticsReq_Options::StatisticsReq_Options(const StatisticsReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_mode();
  switch (from.mode_case()) {
    case kName: {
      _internal_set_name(from._internal_name());
      break;
    }
    case kAll: {
      _internal_mutable_all()->::event_store::client::Empty::MergeFrom(from._internal_all());
      break;
    }
    case kTransient: {
      _internal_mutable_transient()->::event_store::client::Empty::MergeFrom(from._internal_transient());
      break;
    }
    case kContinuous: {
      _internal_mutable_continuous()->::event_store::client::Empty::MergeFrom(from._internal_continuous());
      break;
    }
    case kOneTime: {
      _internal_mutable_one_time()->::event_store::client::Empty::MergeFrom(from._internal_one_time());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.StatisticsReq.Options)
}

void StatisticsReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatisticsReq_Options_projections_2eproto.base);
  clear_has_mode();
}

StatisticsReq_Options::~StatisticsReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.StatisticsReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatisticsReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_mode()) {
    clear_mode();
  }
}

void StatisticsReq_Options::ArenaDtor(void* object) {
  StatisticsReq_Options* _this = reinterpret_cast< StatisticsReq_Options* >(object);
  (void)_this;
}
void StatisticsReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatisticsReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatisticsReq_Options& StatisticsReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatisticsReq_Options_projections_2eproto.base);
  return *internal_default_instance();
}


void StatisticsReq_Options::clear_mode() {
// @@protoc_insertion_point(one_of_clear_start:event_store.client.projections.StatisticsReq.Options)
  switch (mode_case()) {
    case kName: {
      mode_.name_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kAll: {
      if (GetArena() == nullptr) {
        delete mode_.all_;
      }
      break;
    }
    case kTransient: {
      if (GetArena() == nullptr) {
        delete mode_.transient_;
      }
      break;
    }
    case kContinuous: {
      if (GetArena() == nullptr) {
        delete mode_.continuous_;
      }
      break;
    }
    case kOneTime: {
      if (GetArena() == nullptr) {
        delete mode_.one_time_;
      }
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODE_NOT_SET;
}


void StatisticsReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.StatisticsReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mode();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatisticsReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StatisticsReq.Options.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .event_store.client.Empty all = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_all(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .event_store.client.Empty transient = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transient(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .event_store.client.Empty continuous = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_continuous(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .event_store.client.Empty one_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_one_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatisticsReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.StatisticsReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StatisticsReq.Options.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .event_store.client.Empty all = 2;
  if (_internal_has_all()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::all(this), target, stream);
  }

  // .event_store.client.Empty transient = 3;
  if (_internal_has_transient()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::transient(this), target, stream);
  }

  // .event_store.client.Empty continuous = 4;
  if (_internal_has_continuous()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::continuous(this), target, stream);
  }

  // .event_store.client.Empty one_time = 5;
  if (_internal_has_one_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::one_time(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.StatisticsReq.Options)
  return target;
}

size_t StatisticsReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.StatisticsReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (mode_case()) {
    // string name = 1;
    case kName: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
      break;
    }
    // .event_store.client.Empty all = 2;
    case kAll: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.all_);
      break;
    }
    // .event_store.client.Empty transient = 3;
    case kTransient: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.transient_);
      break;
    }
    // .event_store.client.Empty continuous = 4;
    case kContinuous: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.continuous_);
      break;
    }
    // .event_store.client.Empty one_time = 5;
    case kOneTime: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.one_time_);
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatisticsReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.StatisticsReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const StatisticsReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatisticsReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.StatisticsReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.StatisticsReq.Options)
    MergeFrom(*source);
  }
}

void StatisticsReq_Options::MergeFrom(const StatisticsReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.StatisticsReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.mode_case()) {
    case kName: {
      _internal_set_name(from._internal_name());
      break;
    }
    case kAll: {
      _internal_mutable_all()->::event_store::client::Empty::MergeFrom(from._internal_all());
      break;
    }
    case kTransient: {
      _internal_mutable_transient()->::event_store::client::Empty::MergeFrom(from._internal_transient());
      break;
    }
    case kContinuous: {
      _internal_mutable_continuous()->::event_store::client::Empty::MergeFrom(from._internal_continuous());
      break;
    }
    case kOneTime: {
      _internal_mutable_one_time()->::event_store::client::Empty::MergeFrom(from._internal_one_time());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
}

void StatisticsReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.StatisticsReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatisticsReq_Options::CopyFrom(const StatisticsReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.StatisticsReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticsReq_Options::IsInitialized() const {
  return true;
}

void StatisticsReq_Options::InternalSwap(StatisticsReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mode_, other->mode_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatisticsReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatisticsReq::InitAsDefaultInstance() {
  ::event_store::client::projections::_StatisticsReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::projections::StatisticsReq_Options*>(
      ::event_store::client::projections::StatisticsReq_Options::internal_default_instance());
}
class StatisticsReq::_Internal {
 public:
  static const ::event_store::client::projections::StatisticsReq_Options& options(const StatisticsReq* msg);
};

const ::event_store::client::projections::StatisticsReq_Options&
StatisticsReq::_Internal::options(const StatisticsReq* msg) {
  return *msg->options_;
}
StatisticsReq::StatisticsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.StatisticsReq)
}
StatisticsReq::StatisticsReq(const StatisticsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::projections::StatisticsReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.StatisticsReq)
}

void StatisticsReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatisticsReq_projections_2eproto.base);
  options_ = nullptr;
}

StatisticsReq::~StatisticsReq() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.StatisticsReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatisticsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void StatisticsReq::ArenaDtor(void* object) {
  StatisticsReq* _this = reinterpret_cast< StatisticsReq* >(object);
  (void)_this;
}
void StatisticsReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatisticsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatisticsReq& StatisticsReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatisticsReq_projections_2eproto.base);
  return *internal_default_instance();
}


void StatisticsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.StatisticsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatisticsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.projections.StatisticsReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatisticsReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.StatisticsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.projections.StatisticsReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.StatisticsReq)
  return target;
}

size_t StatisticsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.StatisticsReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.projections.StatisticsReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatisticsReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.StatisticsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const StatisticsReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatisticsReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.StatisticsReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.StatisticsReq)
    MergeFrom(*source);
  }
}

void StatisticsReq::MergeFrom(const StatisticsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.StatisticsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::projections::StatisticsReq_Options::MergeFrom(from._internal_options());
  }
}

void StatisticsReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.StatisticsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatisticsReq::CopyFrom(const StatisticsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.StatisticsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticsReq::IsInitialized() const {
  return true;
}

void StatisticsReq::InternalSwap(StatisticsReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatisticsReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatisticsResp_Details::InitAsDefaultInstance() {
}
class StatisticsResp_Details::_Internal {
 public:
};

StatisticsResp_Details::StatisticsResp_Details(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.StatisticsResp.Details)
}
StatisticsResp_Details::StatisticsResp_Details(const StatisticsResp_Details& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  effectivename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_effectivename().empty()) {
    effectivename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_effectivename(),
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_status(),
      GetArena());
  }
  statereason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_statereason().empty()) {
    statereason_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_statereason(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mode().empty()) {
    mode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mode(),
      GetArena());
  }
  position_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_position().empty()) {
    position_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_position(),
      GetArena());
  }
  lastcheckpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lastcheckpoint().empty()) {
    lastcheckpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_lastcheckpoint(),
      GetArena());
  }
  checkpointstatus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_checkpointstatus().empty()) {
    checkpointstatus_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_checkpointstatus(),
      GetArena());
  }
  ::memcpy(&coreprocessingtime_, &from.coreprocessingtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&writependingeventsaftercheckpoint_) -
    reinterpret_cast<char*>(&coreprocessingtime_)) + sizeof(writependingeventsaftercheckpoint_));
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.StatisticsResp.Details)
}

void StatisticsResp_Details::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatisticsResp_Details_projections_2eproto.base);
  effectivename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  statereason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  position_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lastcheckpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkpointstatus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&coreprocessingtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&writependingeventsaftercheckpoint_) -
      reinterpret_cast<char*>(&coreprocessingtime_)) + sizeof(writependingeventsaftercheckpoint_));
}

StatisticsResp_Details::~StatisticsResp_Details() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.StatisticsResp.Details)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatisticsResp_Details::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  effectivename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  statereason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  position_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lastcheckpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkpointstatus_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StatisticsResp_Details::ArenaDtor(void* object) {
  StatisticsResp_Details* _this = reinterpret_cast< StatisticsResp_Details* >(object);
  (void)_this;
}
void StatisticsResp_Details::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatisticsResp_Details::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatisticsResp_Details& StatisticsResp_Details::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatisticsResp_Details_projections_2eproto.base);
  return *internal_default_instance();
}


void StatisticsResp_Details::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.StatisticsResp.Details)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  effectivename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  statereason_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  position_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lastcheckpoint_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  checkpointstatus_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&coreprocessingtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&writependingeventsaftercheckpoint_) -
      reinterpret_cast<char*>(&coreprocessingtime_)) + sizeof(writependingeventsaftercheckpoint_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatisticsResp_Details::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 coreProcessingTime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coreprocessingtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 epoch = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          epoch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string effectiveName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_effectivename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StatisticsResp.Details.effectiveName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 writesInProgress = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          writesinprogress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 readsInProgress = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          readsinprogress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 partitionsCached = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          partitionscached_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StatisticsResp.Details.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string stateReason = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_statereason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StatisticsResp.Details.stateReason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StatisticsResp.Details.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mode = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_mode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StatisticsResp.Details.mode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string position = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_position();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StatisticsResp.Details.position"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float progress = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          progress_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string lastCheckpoint = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_lastcheckpoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StatisticsResp.Details.lastCheckpoint"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 eventsProcessedAfterRestart = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          eventsprocessedafterrestart_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string checkpointStatus = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_checkpointstatus();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StatisticsResp.Details.checkpointStatus"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 bufferedEvents = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          bufferedevents_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 writePendingEventsBeforeCheckpoint = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          writependingeventsbeforecheckpoint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 writePendingEventsAfterCheckpoint = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          writependingeventsaftercheckpoint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatisticsResp_Details::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.StatisticsResp.Details)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 coreProcessingTime = 1;
  if (this->coreprocessingtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_coreprocessingtime(), target);
  }

  // int64 version = 2;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_version(), target);
  }

  // int64 epoch = 3;
  if (this->epoch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_epoch(), target);
  }

  // string effectiveName = 4;
  if (this->effectivename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_effectivename().data(), static_cast<int>(this->_internal_effectivename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StatisticsResp.Details.effectiveName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_effectivename(), target);
  }

  // int32 writesInProgress = 5;
  if (this->writesinprogress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_writesinprogress(), target);
  }

  // int32 readsInProgress = 6;
  if (this->readsinprogress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_readsinprogress(), target);
  }

  // int32 partitionsCached = 7;
  if (this->partitionscached() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_partitionscached(), target);
  }

  // string status = 8;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StatisticsResp.Details.status");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_status(), target);
  }

  // string stateReason = 9;
  if (this->statereason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_statereason().data(), static_cast<int>(this->_internal_statereason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StatisticsResp.Details.stateReason");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_statereason(), target);
  }

  // string name = 10;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StatisticsResp.Details.name");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_name(), target);
  }

  // string mode = 11;
  if (this->mode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mode().data(), static_cast<int>(this->_internal_mode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StatisticsResp.Details.mode");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_mode(), target);
  }

  // string position = 12;
  if (this->position().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_position().data(), static_cast<int>(this->_internal_position().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StatisticsResp.Details.position");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_position(), target);
  }

  // float progress = 13;
  if (!(this->progress() <= 0 && this->progress() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(13, this->_internal_progress(), target);
  }

  // string lastCheckpoint = 14;
  if (this->lastcheckpoint().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lastcheckpoint().data(), static_cast<int>(this->_internal_lastcheckpoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StatisticsResp.Details.lastCheckpoint");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_lastcheckpoint(), target);
  }

  // int64 eventsProcessedAfterRestart = 15;
  if (this->eventsprocessedafterrestart() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(15, this->_internal_eventsprocessedafterrestart(), target);
  }

  // string checkpointStatus = 16;
  if (this->checkpointstatus().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checkpointstatus().data(), static_cast<int>(this->_internal_checkpointstatus().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StatisticsResp.Details.checkpointStatus");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_checkpointstatus(), target);
  }

  // int64 bufferedEvents = 17;
  if (this->bufferedevents() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(17, this->_internal_bufferedevents(), target);
  }

  // int32 writePendingEventsBeforeCheckpoint = 18;
  if (this->writependingeventsbeforecheckpoint() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->_internal_writependingeventsbeforecheckpoint(), target);
  }

  // int32 writePendingEventsAfterCheckpoint = 19;
  if (this->writependingeventsaftercheckpoint() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_writependingeventsaftercheckpoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.StatisticsResp.Details)
  return target;
}

size_t StatisticsResp_Details::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.StatisticsResp.Details)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string effectiveName = 4;
  if (this->effectivename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_effectivename());
  }

  // string status = 8;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string stateReason = 9;
  if (this->statereason().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_statereason());
  }

  // string name = 10;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string mode = 11;
  if (this->mode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mode());
  }

  // string position = 12;
  if (this->position().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_position());
  }

  // string lastCheckpoint = 14;
  if (this->lastcheckpoint().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lastcheckpoint());
  }

  // string checkpointStatus = 16;
  if (this->checkpointstatus().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checkpointstatus());
  }

  // int64 coreProcessingTime = 1;
  if (this->coreprocessingtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coreprocessingtime());
  }

  // int64 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_version());
  }

  // int64 epoch = 3;
  if (this->epoch() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_epoch());
  }

  // int32 writesInProgress = 5;
  if (this->writesinprogress() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_writesinprogress());
  }

  // int32 readsInProgress = 6;
  if (this->readsinprogress() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_readsinprogress());
  }

  // int32 partitionsCached = 7;
  if (this->partitionscached() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_partitionscached());
  }

  // float progress = 13;
  if (!(this->progress() <= 0 && this->progress() >= 0)) {
    total_size += 1 + 4;
  }

  // int64 eventsProcessedAfterRestart = 15;
  if (this->eventsprocessedafterrestart() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_eventsprocessedafterrestart());
  }

  // int64 bufferedEvents = 17;
  if (this->bufferedevents() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_bufferedevents());
  }

  // int32 writePendingEventsBeforeCheckpoint = 18;
  if (this->writependingeventsbeforecheckpoint() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_writependingeventsbeforecheckpoint());
  }

  // int32 writePendingEventsAfterCheckpoint = 19;
  if (this->writependingeventsaftercheckpoint() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_writependingeventsaftercheckpoint());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatisticsResp_Details::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.StatisticsResp.Details)
  GOOGLE_DCHECK_NE(&from, this);
  const StatisticsResp_Details* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatisticsResp_Details>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.StatisticsResp.Details)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.StatisticsResp.Details)
    MergeFrom(*source);
  }
}

void StatisticsResp_Details::MergeFrom(const StatisticsResp_Details& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.StatisticsResp.Details)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.effectivename().size() > 0) {
    _internal_set_effectivename(from._internal_effectivename());
  }
  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.statereason().size() > 0) {
    _internal_set_statereason(from._internal_statereason());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.mode().size() > 0) {
    _internal_set_mode(from._internal_mode());
  }
  if (from.position().size() > 0) {
    _internal_set_position(from._internal_position());
  }
  if (from.lastcheckpoint().size() > 0) {
    _internal_set_lastcheckpoint(from._internal_lastcheckpoint());
  }
  if (from.checkpointstatus().size() > 0) {
    _internal_set_checkpointstatus(from._internal_checkpointstatus());
  }
  if (from.coreprocessingtime() != 0) {
    _internal_set_coreprocessingtime(from._internal_coreprocessingtime());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.epoch() != 0) {
    _internal_set_epoch(from._internal_epoch());
  }
  if (from.writesinprogress() != 0) {
    _internal_set_writesinprogress(from._internal_writesinprogress());
  }
  if (from.readsinprogress() != 0) {
    _internal_set_readsinprogress(from._internal_readsinprogress());
  }
  if (from.partitionscached() != 0) {
    _internal_set_partitionscached(from._internal_partitionscached());
  }
  if (!(from.progress() <= 0 && from.progress() >= 0)) {
    _internal_set_progress(from._internal_progress());
  }
  if (from.eventsprocessedafterrestart() != 0) {
    _internal_set_eventsprocessedafterrestart(from._internal_eventsprocessedafterrestart());
  }
  if (from.bufferedevents() != 0) {
    _internal_set_bufferedevents(from._internal_bufferedevents());
  }
  if (from.writependingeventsbeforecheckpoint() != 0) {
    _internal_set_writependingeventsbeforecheckpoint(from._internal_writependingeventsbeforecheckpoint());
  }
  if (from.writependingeventsaftercheckpoint() != 0) {
    _internal_set_writependingeventsaftercheckpoint(from._internal_writependingeventsaftercheckpoint());
  }
}

void StatisticsResp_Details::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.StatisticsResp.Details)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatisticsResp_Details::CopyFrom(const StatisticsResp_Details& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.StatisticsResp.Details)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticsResp_Details::IsInitialized() const {
  return true;
}

void StatisticsResp_Details::InternalSwap(StatisticsResp_Details* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  effectivename_.Swap(&other->effectivename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  statereason_.Swap(&other->statereason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mode_.Swap(&other->mode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  position_.Swap(&other->position_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lastcheckpoint_.Swap(&other->lastcheckpoint_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  checkpointstatus_.Swap(&other->checkpointstatus_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatisticsResp_Details, writependingeventsaftercheckpoint_)
      + sizeof(StatisticsResp_Details::writependingeventsaftercheckpoint_)
      - PROTOBUF_FIELD_OFFSET(StatisticsResp_Details, coreprocessingtime_)>(
          reinterpret_cast<char*>(&coreprocessingtime_),
          reinterpret_cast<char*>(&other->coreprocessingtime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StatisticsResp_Details::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatisticsResp::InitAsDefaultInstance() {
  ::event_store::client::projections::_StatisticsResp_default_instance_._instance.get_mutable()->details_ = const_cast< ::event_store::client::projections::StatisticsResp_Details*>(
      ::event_store::client::projections::StatisticsResp_Details::internal_default_instance());
}
class StatisticsResp::_Internal {
 public:
  static const ::event_store::client::projections::StatisticsResp_Details& details(const StatisticsResp* msg);
};

const ::event_store::client::projections::StatisticsResp_Details&
StatisticsResp::_Internal::details(const StatisticsResp* msg) {
  return *msg->details_;
}
StatisticsResp::StatisticsResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.StatisticsResp)
}
StatisticsResp::StatisticsResp(const StatisticsResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_details()) {
    details_ = new ::event_store::client::projections::StatisticsResp_Details(*from.details_);
  } else {
    details_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.StatisticsResp)
}

void StatisticsResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatisticsResp_projections_2eproto.base);
  details_ = nullptr;
}

StatisticsResp::~StatisticsResp() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.StatisticsResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatisticsResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete details_;
}

void StatisticsResp::ArenaDtor(void* object) {
  StatisticsResp* _this = reinterpret_cast< StatisticsResp* >(object);
  (void)_this;
}
void StatisticsResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatisticsResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatisticsResp& StatisticsResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatisticsResp_projections_2eproto.base);
  return *internal_default_instance();
}


void StatisticsResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.StatisticsResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && details_ != nullptr) {
    delete details_;
  }
  details_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatisticsResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.projections.StatisticsResp.Details details = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_details(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatisticsResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.StatisticsResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.projections.StatisticsResp.Details details = 1;
  if (this->has_details()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::details(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.StatisticsResp)
  return target;
}

size_t StatisticsResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.StatisticsResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.projections.StatisticsResp.Details details = 1;
  if (this->has_details()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *details_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatisticsResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.StatisticsResp)
  GOOGLE_DCHECK_NE(&from, this);
  const StatisticsResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatisticsResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.StatisticsResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.StatisticsResp)
    MergeFrom(*source);
  }
}

void StatisticsResp::MergeFrom(const StatisticsResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.StatisticsResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_details()) {
    _internal_mutable_details()->::event_store::client::projections::StatisticsResp_Details::MergeFrom(from._internal_details());
  }
}

void StatisticsResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.StatisticsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatisticsResp::CopyFrom(const StatisticsResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.StatisticsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticsResp::IsInitialized() const {
  return true;
}

void StatisticsResp::InternalSwap(StatisticsResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(details_, other->details_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatisticsResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StateReq_Options::InitAsDefaultInstance() {
}
class StateReq_Options::_Internal {
 public:
};

StateReq_Options::StateReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.StateReq.Options)
}
StateReq_Options::StateReq_Options(const StateReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  partition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_partition().empty()) {
    partition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_partition(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.StateReq.Options)
}

void StateReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StateReq_Options_projections_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  partition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StateReq_Options::~StateReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.StateReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StateReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  partition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StateReq_Options::ArenaDtor(void* object) {
  StateReq_Options* _this = reinterpret_cast< StateReq_Options* >(object);
  (void)_this;
}
void StateReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StateReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateReq_Options& StateReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateReq_Options_projections_2eproto.base);
  return *internal_default_instance();
}


void StateReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.StateReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  partition_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StateReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StateReq.Options.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string partition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_partition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.StateReq.Options.partition"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StateReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.StateReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StateReq.Options.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string partition = 2;
  if (this->partition().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_partition().data(), static_cast<int>(this->_internal_partition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.StateReq.Options.partition");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_partition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.StateReq.Options)
  return target;
}

size_t StateReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.StateReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string partition = 2;
  if (this->partition().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_partition());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.StateReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const StateReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StateReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.StateReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.StateReq.Options)
    MergeFrom(*source);
  }
}

void StateReq_Options::MergeFrom(const StateReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.StateReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.partition().size() > 0) {
    _internal_set_partition(from._internal_partition());
  }
}

void StateReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.StateReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateReq_Options::CopyFrom(const StateReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.StateReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateReq_Options::IsInitialized() const {
  return true;
}

void StateReq_Options::InternalSwap(StateReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  partition_.Swap(&other->partition_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StateReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StateReq::InitAsDefaultInstance() {
  ::event_store::client::projections::_StateReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::projections::StateReq_Options*>(
      ::event_store::client::projections::StateReq_Options::internal_default_instance());
}
class StateReq::_Internal {
 public:
  static const ::event_store::client::projections::StateReq_Options& options(const StateReq* msg);
};

const ::event_store::client::projections::StateReq_Options&
StateReq::_Internal::options(const StateReq* msg) {
  return *msg->options_;
}
StateReq::StateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.StateReq)
}
StateReq::StateReq(const StateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::projections::StateReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.StateReq)
}

void StateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StateReq_projections_2eproto.base);
  options_ = nullptr;
}

StateReq::~StateReq() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.StateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void StateReq::ArenaDtor(void* object) {
  StateReq* _this = reinterpret_cast< StateReq* >(object);
  (void)_this;
}
void StateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateReq& StateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateReq_projections_2eproto.base);
  return *internal_default_instance();
}


void StateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.StateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.projections.StateReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.StateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.projections.StateReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.StateReq)
  return target;
}

size_t StateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.StateReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.projections.StateReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.StateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const StateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.StateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.StateReq)
    MergeFrom(*source);
  }
}

void StateReq::MergeFrom(const StateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.StateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::projections::StateReq_Options::MergeFrom(from._internal_options());
  }
}

void StateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.StateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateReq::CopyFrom(const StateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.StateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateReq::IsInitialized() const {
  return true;
}

void StateReq::InternalSwap(StateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StateResp::InitAsDefaultInstance() {
  ::event_store::client::projections::_StateResp_default_instance_._instance.get_mutable()->state_ = const_cast< PROTOBUF_NAMESPACE_ID::Value*>(
      PROTOBUF_NAMESPACE_ID::Value::internal_default_instance());
}
class StateResp::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Value& state(const StateResp* msg);
};

const PROTOBUF_NAMESPACE_ID::Value&
StateResp::_Internal::state(const StateResp* msg) {
  return *msg->state_;
}
void StateResp::clear_state() {
  if (GetArena() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
}
StateResp::StateResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.StateResp)
}
StateResp::StateResp(const StateResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    state_ = new PROTOBUF_NAMESPACE_ID::Value(*from.state_);
  } else {
    state_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.StateResp)
}

void StateResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StateResp_projections_2eproto.base);
  state_ = nullptr;
}

StateResp::~StateResp() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.StateResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StateResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete state_;
}

void StateResp::ArenaDtor(void* object) {
  StateResp* _this = reinterpret_cast< StateResp* >(object);
  (void)_this;
}
void StateResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StateResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateResp& StateResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateResp_projections_2eproto.base);
  return *internal_default_instance();
}


void StateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.StateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StateResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Value state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StateResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.StateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Value state = 1;
  if (this->has_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::state(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.StateResp)
  return target;
}

size_t StateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.StateResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Value state = 1;
  if (this->has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.StateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const StateResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StateResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.StateResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.StateResp)
    MergeFrom(*source);
  }
}

void StateResp::MergeFrom(const StateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.StateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    _internal_mutable_state()->PROTOBUF_NAMESPACE_ID::Value::MergeFrom(from._internal_state());
  }
}

void StateResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.StateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateResp::CopyFrom(const StateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.StateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateResp::IsInitialized() const {
  return true;
}

void StateResp::InternalSwap(StateResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StateResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResultReq_Options::InitAsDefaultInstance() {
}
class ResultReq_Options::_Internal {
 public:
};

ResultReq_Options::ResultReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.ResultReq.Options)
}
ResultReq_Options::ResultReq_Options(const ResultReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  partition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_partition().empty()) {
    partition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_partition(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.ResultReq.Options)
}

void ResultReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResultReq_Options_projections_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  partition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResultReq_Options::~ResultReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.ResultReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResultReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  partition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResultReq_Options::ArenaDtor(void* object) {
  ResultReq_Options* _this = reinterpret_cast< ResultReq_Options* >(object);
  (void)_this;
}
void ResultReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResultReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultReq_Options& ResultReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultReq_Options_projections_2eproto.base);
  return *internal_default_instance();
}


void ResultReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.ResultReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  partition_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.ResultReq.Options.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string partition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_partition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.ResultReq.Options.partition"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.ResultReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.ResultReq.Options.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string partition = 2;
  if (this->partition().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_partition().data(), static_cast<int>(this->_internal_partition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.ResultReq.Options.partition");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_partition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.ResultReq.Options)
  return target;
}

size_t ResultReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.ResultReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string partition = 2;
  if (this->partition().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_partition());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.ResultReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.ResultReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.ResultReq.Options)
    MergeFrom(*source);
  }
}

void ResultReq_Options::MergeFrom(const ResultReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.ResultReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.partition().size() > 0) {
    _internal_set_partition(from._internal_partition());
  }
}

void ResultReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.ResultReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultReq_Options::CopyFrom(const ResultReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.ResultReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultReq_Options::IsInitialized() const {
  return true;
}

void ResultReq_Options::InternalSwap(ResultReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  partition_.Swap(&other->partition_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResultReq::InitAsDefaultInstance() {
  ::event_store::client::projections::_ResultReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::projections::ResultReq_Options*>(
      ::event_store::client::projections::ResultReq_Options::internal_default_instance());
}
class ResultReq::_Internal {
 public:
  static const ::event_store::client::projections::ResultReq_Options& options(const ResultReq* msg);
};

const ::event_store::client::projections::ResultReq_Options&
ResultReq::_Internal::options(const ResultReq* msg) {
  return *msg->options_;
}
ResultReq::ResultReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.ResultReq)
}
ResultReq::ResultReq(const ResultReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::projections::ResultReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.ResultReq)
}

void ResultReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResultReq_projections_2eproto.base);
  options_ = nullptr;
}

ResultReq::~ResultReq() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.ResultReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResultReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void ResultReq::ArenaDtor(void* object) {
  ResultReq* _this = reinterpret_cast< ResultReq* >(object);
  (void)_this;
}
void ResultReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResultReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultReq& ResultReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultReq_projections_2eproto.base);
  return *internal_default_instance();
}


void ResultReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.ResultReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.projections.ResultReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.ResultReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.projections.ResultReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.ResultReq)
  return target;
}

size_t ResultReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.ResultReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.projections.ResultReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.ResultReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.ResultReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.ResultReq)
    MergeFrom(*source);
  }
}

void ResultReq::MergeFrom(const ResultReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.ResultReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::projections::ResultReq_Options::MergeFrom(from._internal_options());
  }
}

void ResultReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.ResultReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultReq::CopyFrom(const ResultReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.ResultReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultReq::IsInitialized() const {
  return true;
}

void ResultReq::InternalSwap(ResultReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResultResp::InitAsDefaultInstance() {
  ::event_store::client::projections::_ResultResp_default_instance_._instance.get_mutable()->result_ = const_cast< PROTOBUF_NAMESPACE_ID::Value*>(
      PROTOBUF_NAMESPACE_ID::Value::internal_default_instance());
}
class ResultResp::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Value& result(const ResultResp* msg);
};

const PROTOBUF_NAMESPACE_ID::Value&
ResultResp::_Internal::result(const ResultResp* msg) {
  return *msg->result_;
}
void ResultResp::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
ResultResp::ResultResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.ResultResp)
}
ResultResp::ResultResp(const ResultResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new PROTOBUF_NAMESPACE_ID::Value(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.ResultResp)
}

void ResultResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResultResp_projections_2eproto.base);
  result_ = nullptr;
}

ResultResp::~ResultResp() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.ResultResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResultResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void ResultResp::ArenaDtor(void* object) {
  ResultResp* _this = reinterpret_cast< ResultResp* >(object);
  (void)_this;
}
void ResultResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResultResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultResp& ResultResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultResp_projections_2eproto.base);
  return *internal_default_instance();
}


void ResultResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.ResultResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Value result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.ResultResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Value result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.ResultResp)
  return target;
}

size_t ResultResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.ResultResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Value result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.ResultResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.ResultResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.ResultResp)
    MergeFrom(*source);
  }
}

void ResultResp::MergeFrom(const ResultResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.ResultResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->PROTOBUF_NAMESPACE_ID::Value::MergeFrom(from._internal_result());
  }
}

void ResultResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.ResultResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultResp::CopyFrom(const ResultResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.ResultResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultResp::IsInitialized() const {
  return true;
}

void ResultResp::InternalSwap(ResultResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetReq_Options::InitAsDefaultInstance() {
}
class ResetReq_Options::_Internal {
 public:
};

ResetReq_Options::ResetReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.ResetReq.Options)
}
ResetReq_Options::ResetReq_Options(const ResetReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  write_checkpoint_ = from.write_checkpoint_;
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.ResetReq.Options)
}

void ResetReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResetReq_Options_projections_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  write_checkpoint_ = false;
}

ResetReq_Options::~ResetReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.ResetReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResetReq_Options::ArenaDtor(void* object) {
  ResetReq_Options* _this = reinterpret_cast< ResetReq_Options* >(object);
  (void)_this;
}
void ResetReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetReq_Options& ResetReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetReq_Options_projections_2eproto.base);
  return *internal_default_instance();
}


void ResetReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.ResetReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  write_checkpoint_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.ResetReq.Options.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool write_checkpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          write_checkpoint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.ResetReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.ResetReq.Options.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool write_checkpoint = 2;
  if (this->write_checkpoint() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_write_checkpoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.ResetReq.Options)
  return target;
}

size_t ResetReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.ResetReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool write_checkpoint = 2;
  if (this->write_checkpoint() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.ResetReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.ResetReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.ResetReq.Options)
    MergeFrom(*source);
  }
}

void ResetReq_Options::MergeFrom(const ResetReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.ResetReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.write_checkpoint() != 0) {
    _internal_set_write_checkpoint(from._internal_write_checkpoint());
  }
}

void ResetReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.ResetReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetReq_Options::CopyFrom(const ResetReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.ResetReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetReq_Options::IsInitialized() const {
  return true;
}

void ResetReq_Options::InternalSwap(ResetReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(write_checkpoint_, other->write_checkpoint_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetReq::InitAsDefaultInstance() {
  ::event_store::client::projections::_ResetReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::projections::ResetReq_Options*>(
      ::event_store::client::projections::ResetReq_Options::internal_default_instance());
}
class ResetReq::_Internal {
 public:
  static const ::event_store::client::projections::ResetReq_Options& options(const ResetReq* msg);
};

const ::event_store::client::projections::ResetReq_Options&
ResetReq::_Internal::options(const ResetReq* msg) {
  return *msg->options_;
}
ResetReq::ResetReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.ResetReq)
}
ResetReq::ResetReq(const ResetReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::projections::ResetReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.ResetReq)
}

void ResetReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResetReq_projections_2eproto.base);
  options_ = nullptr;
}

ResetReq::~ResetReq() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.ResetReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void ResetReq::ArenaDtor(void* object) {
  ResetReq* _this = reinterpret_cast< ResetReq* >(object);
  (void)_this;
}
void ResetReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetReq& ResetReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetReq_projections_2eproto.base);
  return *internal_default_instance();
}


void ResetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.ResetReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.projections.ResetReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.ResetReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.projections.ResetReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.ResetReq)
  return target;
}

size_t ResetReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.ResetReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.projections.ResetReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.ResetReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.ResetReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.ResetReq)
    MergeFrom(*source);
  }
}

void ResetReq::MergeFrom(const ResetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.ResetReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::projections::ResetReq_Options::MergeFrom(from._internal_options());
  }
}

void ResetReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.ResetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetReq::CopyFrom(const ResetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.ResetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetReq::IsInitialized() const {
  return true;
}

void ResetReq::InternalSwap(ResetReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetResp::InitAsDefaultInstance() {
}
class ResetResp::_Internal {
 public:
};

ResetResp::ResetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.ResetResp)
}
ResetResp::ResetResp(const ResetResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.ResetResp)
}

void ResetResp::SharedCtor() {
}

ResetResp::~ResetResp() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.ResetResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResetResp::ArenaDtor(void* object) {
  ResetResp* _this = reinterpret_cast< ResetResp* >(object);
  (void)_this;
}
void ResetResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetResp& ResetResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetResp_projections_2eproto.base);
  return *internal_default_instance();
}


void ResetResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.ResetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.ResetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.ResetResp)
  return target;
}

size_t ResetResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.ResetResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.ResetResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.ResetResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.ResetResp)
    MergeFrom(*source);
  }
}

void ResetResp::MergeFrom(const ResetResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.ResetResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResetResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.ResetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetResp::CopyFrom(const ResetResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.ResetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetResp::IsInitialized() const {
  return true;
}

void ResetResp::InternalSwap(ResetResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnableReq_Options::InitAsDefaultInstance() {
}
class EnableReq_Options::_Internal {
 public:
};

EnableReq_Options::EnableReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.EnableReq.Options)
}
EnableReq_Options::EnableReq_Options(const EnableReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.EnableReq.Options)
}

void EnableReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnableReq_Options_projections_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EnableReq_Options::~EnableReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.EnableReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnableReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EnableReq_Options::ArenaDtor(void* object) {
  EnableReq_Options* _this = reinterpret_cast< EnableReq_Options* >(object);
  (void)_this;
}
void EnableReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnableReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnableReq_Options& EnableReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnableReq_Options_projections_2eproto.base);
  return *internal_default_instance();
}


void EnableReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.EnableReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.EnableReq.Options.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnableReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.EnableReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.EnableReq.Options.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.EnableReq.Options)
  return target;
}

size_t EnableReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.EnableReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnableReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.EnableReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const EnableReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnableReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.EnableReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.EnableReq.Options)
    MergeFrom(*source);
  }
}

void EnableReq_Options::MergeFrom(const EnableReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.EnableReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void EnableReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.EnableReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnableReq_Options::CopyFrom(const EnableReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.EnableReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableReq_Options::IsInitialized() const {
  return true;
}

void EnableReq_Options::InternalSwap(EnableReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnableReq::InitAsDefaultInstance() {
  ::event_store::client::projections::_EnableReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::projections::EnableReq_Options*>(
      ::event_store::client::projections::EnableReq_Options::internal_default_instance());
}
class EnableReq::_Internal {
 public:
  static const ::event_store::client::projections::EnableReq_Options& options(const EnableReq* msg);
};

const ::event_store::client::projections::EnableReq_Options&
EnableReq::_Internal::options(const EnableReq* msg) {
  return *msg->options_;
}
EnableReq::EnableReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.EnableReq)
}
EnableReq::EnableReq(const EnableReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::projections::EnableReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.EnableReq)
}

void EnableReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnableReq_projections_2eproto.base);
  options_ = nullptr;
}

EnableReq::~EnableReq() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.EnableReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnableReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void EnableReq::ArenaDtor(void* object) {
  EnableReq* _this = reinterpret_cast< EnableReq* >(object);
  (void)_this;
}
void EnableReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnableReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnableReq& EnableReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnableReq_projections_2eproto.base);
  return *internal_default_instance();
}


void EnableReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.EnableReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.projections.EnableReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnableReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.EnableReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.projections.EnableReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.EnableReq)
  return target;
}

size_t EnableReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.EnableReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.projections.EnableReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnableReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.EnableReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnableReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnableReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.EnableReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.EnableReq)
    MergeFrom(*source);
  }
}

void EnableReq::MergeFrom(const EnableReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.EnableReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::projections::EnableReq_Options::MergeFrom(from._internal_options());
  }
}

void EnableReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.EnableReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnableReq::CopyFrom(const EnableReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.EnableReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableReq::IsInitialized() const {
  return true;
}

void EnableReq::InternalSwap(EnableReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnableResp::InitAsDefaultInstance() {
}
class EnableResp::_Internal {
 public:
};

EnableResp::EnableResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.EnableResp)
}
EnableResp::EnableResp(const EnableResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.EnableResp)
}

void EnableResp::SharedCtor() {
}

EnableResp::~EnableResp() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.EnableResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnableResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EnableResp::ArenaDtor(void* object) {
  EnableResp* _this = reinterpret_cast< EnableResp* >(object);
  (void)_this;
}
void EnableResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnableResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnableResp& EnableResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnableResp_projections_2eproto.base);
  return *internal_default_instance();
}


void EnableResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.EnableResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnableResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.EnableResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.EnableResp)
  return target;
}

size_t EnableResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.EnableResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnableResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.EnableResp)
  GOOGLE_DCHECK_NE(&from, this);
  const EnableResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnableResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.EnableResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.EnableResp)
    MergeFrom(*source);
  }
}

void EnableResp::MergeFrom(const EnableResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.EnableResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EnableResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.EnableResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnableResp::CopyFrom(const EnableResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.EnableResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableResp::IsInitialized() const {
  return true;
}

void EnableResp::InternalSwap(EnableResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisableReq_Options::InitAsDefaultInstance() {
}
class DisableReq_Options::_Internal {
 public:
};

DisableReq_Options::DisableReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.DisableReq.Options)
}
DisableReq_Options::DisableReq_Options(const DisableReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  write_checkpoint_ = from.write_checkpoint_;
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.DisableReq.Options)
}

void DisableReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DisableReq_Options_projections_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  write_checkpoint_ = false;
}

DisableReq_Options::~DisableReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.DisableReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DisableReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DisableReq_Options::ArenaDtor(void* object) {
  DisableReq_Options* _this = reinterpret_cast< DisableReq_Options* >(object);
  (void)_this;
}
void DisableReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DisableReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisableReq_Options& DisableReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisableReq_Options_projections_2eproto.base);
  return *internal_default_instance();
}


void DisableReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.DisableReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  write_checkpoint_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.projections.DisableReq.Options.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool write_checkpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          write_checkpoint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DisableReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.DisableReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.projections.DisableReq.Options.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool write_checkpoint = 2;
  if (this->write_checkpoint() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_write_checkpoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.DisableReq.Options)
  return target;
}

size_t DisableReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.DisableReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool write_checkpoint = 2;
  if (this->write_checkpoint() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisableReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.DisableReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const DisableReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisableReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.DisableReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.DisableReq.Options)
    MergeFrom(*source);
  }
}

void DisableReq_Options::MergeFrom(const DisableReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.DisableReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.write_checkpoint() != 0) {
    _internal_set_write_checkpoint(from._internal_write_checkpoint());
  }
}

void DisableReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.DisableReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisableReq_Options::CopyFrom(const DisableReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.DisableReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableReq_Options::IsInitialized() const {
  return true;
}

void DisableReq_Options::InternalSwap(DisableReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(write_checkpoint_, other->write_checkpoint_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisableReq::InitAsDefaultInstance() {
  ::event_store::client::projections::_DisableReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::projections::DisableReq_Options*>(
      ::event_store::client::projections::DisableReq_Options::internal_default_instance());
}
class DisableReq::_Internal {
 public:
  static const ::event_store::client::projections::DisableReq_Options& options(const DisableReq* msg);
};

const ::event_store::client::projections::DisableReq_Options&
DisableReq::_Internal::options(const DisableReq* msg) {
  return *msg->options_;
}
DisableReq::DisableReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.DisableReq)
}
DisableReq::DisableReq(const DisableReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::projections::DisableReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.DisableReq)
}

void DisableReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DisableReq_projections_2eproto.base);
  options_ = nullptr;
}

DisableReq::~DisableReq() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.DisableReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DisableReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void DisableReq::ArenaDtor(void* object) {
  DisableReq* _this = reinterpret_cast< DisableReq* >(object);
  (void)_this;
}
void DisableReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DisableReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisableReq& DisableReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisableReq_projections_2eproto.base);
  return *internal_default_instance();
}


void DisableReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.DisableReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.projections.DisableReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DisableReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.DisableReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.projections.DisableReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.DisableReq)
  return target;
}

size_t DisableReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.DisableReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.projections.DisableReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisableReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.DisableReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DisableReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisableReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.DisableReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.DisableReq)
    MergeFrom(*source);
  }
}

void DisableReq::MergeFrom(const DisableReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.DisableReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::projections::DisableReq_Options::MergeFrom(from._internal_options());
  }
}

void DisableReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.DisableReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisableReq::CopyFrom(const DisableReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.DisableReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableReq::IsInitialized() const {
  return true;
}

void DisableReq::InternalSwap(DisableReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisableResp::InitAsDefaultInstance() {
}
class DisableResp::_Internal {
 public:
};

DisableResp::DisableResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.projections.DisableResp)
}
DisableResp::DisableResp(const DisableResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.projections.DisableResp)
}

void DisableResp::SharedCtor() {
}

DisableResp::~DisableResp() {
  // @@protoc_insertion_point(destructor:event_store.client.projections.DisableResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DisableResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DisableResp::ArenaDtor(void* object) {
  DisableResp* _this = reinterpret_cast< DisableResp* >(object);
  (void)_this;
}
void DisableResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DisableResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisableResp& DisableResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisableResp_projections_2eproto.base);
  return *internal_default_instance();
}


void DisableResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.projections.DisableResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DisableResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.projections.DisableResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.projections.DisableResp)
  return target;
}

size_t DisableResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.projections.DisableResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisableResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.projections.DisableResp)
  GOOGLE_DCHECK_NE(&from, this);
  const DisableResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisableResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.projections.DisableResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.projections.DisableResp)
    MergeFrom(*source);
  }
}

void DisableResp::MergeFrom(const DisableResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.projections.DisableResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DisableResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.projections.DisableResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisableResp::CopyFrom(const DisableResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.projections.DisableResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableResp::IsInitialized() const {
  return true;
}

void DisableResp::InternalSwap(DisableResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableResp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace projections
}  // namespace client
}  // namespace event_store
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::event_store::client::projections::CreateReq_Options_Transient* Arena::CreateMaybeMessage< ::event_store::client::projections::CreateReq_Options_Transient >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::CreateReq_Options_Transient >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::CreateReq_Options_Continuous* Arena::CreateMaybeMessage< ::event_store::client::projections::CreateReq_Options_Continuous >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::CreateReq_Options_Continuous >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::CreateReq_Options* Arena::CreateMaybeMessage< ::event_store::client::projections::CreateReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::CreateReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::CreateReq* Arena::CreateMaybeMessage< ::event_store::client::projections::CreateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::CreateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::CreateResp* Arena::CreateMaybeMessage< ::event_store::client::projections::CreateResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::CreateResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::UpdateReq_Options* Arena::CreateMaybeMessage< ::event_store::client::projections::UpdateReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::UpdateReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::UpdateReq* Arena::CreateMaybeMessage< ::event_store::client::projections::UpdateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::UpdateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::UpdateResp* Arena::CreateMaybeMessage< ::event_store::client::projections::UpdateResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::UpdateResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::DeleteReq_Options* Arena::CreateMaybeMessage< ::event_store::client::projections::DeleteReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::DeleteReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::DeleteReq* Arena::CreateMaybeMessage< ::event_store::client::projections::DeleteReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::DeleteReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::DeleteResp* Arena::CreateMaybeMessage< ::event_store::client::projections::DeleteResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::DeleteResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::StatisticsReq_Options* Arena::CreateMaybeMessage< ::event_store::client::projections::StatisticsReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::StatisticsReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::StatisticsReq* Arena::CreateMaybeMessage< ::event_store::client::projections::StatisticsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::StatisticsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::StatisticsResp_Details* Arena::CreateMaybeMessage< ::event_store::client::projections::StatisticsResp_Details >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::StatisticsResp_Details >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::StatisticsResp* Arena::CreateMaybeMessage< ::event_store::client::projections::StatisticsResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::StatisticsResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::StateReq_Options* Arena::CreateMaybeMessage< ::event_store::client::projections::StateReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::StateReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::StateReq* Arena::CreateMaybeMessage< ::event_store::client::projections::StateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::StateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::StateResp* Arena::CreateMaybeMessage< ::event_store::client::projections::StateResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::StateResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::ResultReq_Options* Arena::CreateMaybeMessage< ::event_store::client::projections::ResultReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::ResultReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::ResultReq* Arena::CreateMaybeMessage< ::event_store::client::projections::ResultReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::ResultReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::ResultResp* Arena::CreateMaybeMessage< ::event_store::client::projections::ResultResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::ResultResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::ResetReq_Options* Arena::CreateMaybeMessage< ::event_store::client::projections::ResetReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::ResetReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::ResetReq* Arena::CreateMaybeMessage< ::event_store::client::projections::ResetReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::ResetReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::ResetResp* Arena::CreateMaybeMessage< ::event_store::client::projections::ResetResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::ResetResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::EnableReq_Options* Arena::CreateMaybeMessage< ::event_store::client::projections::EnableReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::EnableReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::EnableReq* Arena::CreateMaybeMessage< ::event_store::client::projections::EnableReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::EnableReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::EnableResp* Arena::CreateMaybeMessage< ::event_store::client::projections::EnableResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::EnableResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::DisableReq_Options* Arena::CreateMaybeMessage< ::event_store::client::projections::DisableReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::DisableReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::DisableReq* Arena::CreateMaybeMessage< ::event_store::client::projections::DisableReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::DisableReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::projections::DisableResp* Arena::CreateMaybeMessage< ::event_store::client::projections::DisableResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::projections::DisableResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
