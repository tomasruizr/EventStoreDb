// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monitoring.proto

#include "monitoring.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_monitoring_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatsResp_StatsEntry_DoNotUse_monitoring_2eproto;
namespace event_store {
namespace client {
namespace monitoring {
class StatsReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatsReq> _instance;
} _StatsReq_default_instance_;
class StatsResp_StatsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatsResp_StatsEntry_DoNotUse> _instance;
} _StatsResp_StatsEntry_DoNotUse_default_instance_;
class StatsRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatsResp> _instance;
} _StatsResp_default_instance_;
}  // namespace monitoring
}  // namespace client
}  // namespace event_store
static void InitDefaultsscc_info_StatsReq_monitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::monitoring::_StatsReq_default_instance_;
    new (ptr) ::event_store::client::monitoring::StatsReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::monitoring::StatsReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatsReq_monitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StatsReq_monitoring_2eproto}, {}};

static void InitDefaultsscc_info_StatsResp_monitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::monitoring::_StatsResp_default_instance_;
    new (ptr) ::event_store::client::monitoring::StatsResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::monitoring::StatsResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatsResp_monitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatsResp_monitoring_2eproto}, {
      &scc_info_StatsResp_StatsEntry_DoNotUse_monitoring_2eproto.base,}};

static void InitDefaultsscc_info_StatsResp_StatsEntry_DoNotUse_monitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::monitoring::_StatsResp_StatsEntry_DoNotUse_default_instance_;
    new (ptr) ::event_store::client::monitoring::StatsResp_StatsEntry_DoNotUse();
  }
  ::event_store::client::monitoring::StatsResp_StatsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatsResp_StatsEntry_DoNotUse_monitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StatsResp_StatsEntry_DoNotUse_monitoring_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_monitoring_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_monitoring_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_monitoring_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_monitoring_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::monitoring::StatsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::monitoring::StatsReq, use_metadata_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::monitoring::StatsReq, refresh_time_period_in_ms_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::monitoring::StatsResp_StatsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::monitoring::StatsResp_StatsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::monitoring::StatsResp_StatsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::monitoring::StatsResp_StatsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::monitoring::StatsResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::monitoring::StatsResp, stats_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::event_store::client::monitoring::StatsReq)},
  { 7, 14, sizeof(::event_store::client::monitoring::StatsResp_StatsEntry_DoNotUse)},
  { 16, -1, sizeof(::event_store::client::monitoring::StatsResp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::monitoring::_StatsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::monitoring::_StatsResp_StatsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::monitoring::_StatsResp_default_instance_),
};

const char descriptor_table_protodef_monitoring_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020monitoring.proto\022\035event_store.client.m"
  "onitoring\"C\n\010StatsReq\022\024\n\014use_metadata\030\001 "
  "\001(\010\022!\n\031refresh_time_period_in_ms\030\004 \001(\004\"}"
  "\n\tStatsResp\022B\n\005stats\030\001 \003(\01323.event_store"
  ".client.monitoring.StatsResp.StatsEntry\032"
  ",\n\nStatsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
  "\t:\0028\0012j\n\nMonitoring\022\\\n\005Stats\022\'.event_sto"
  "re.client.monitoring.StatsReq\032(.event_st"
  "ore.client.monitoring.StatsResp0\001B*\n(com"
  ".eventstore.dbclient.proto.monitoringb\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_monitoring_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_monitoring_2eproto_sccs[3] = {
  &scc_info_StatsReq_monitoring_2eproto.base,
  &scc_info_StatsResp_monitoring_2eproto.base,
  &scc_info_StatsResp_StatsEntry_DoNotUse_monitoring_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_monitoring_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_monitoring_2eproto = {
  false, false, descriptor_table_protodef_monitoring_2eproto, "monitoring.proto", 405,
  &descriptor_table_monitoring_2eproto_once, descriptor_table_monitoring_2eproto_sccs, descriptor_table_monitoring_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_monitoring_2eproto::offsets,
  file_level_metadata_monitoring_2eproto, 3, file_level_enum_descriptors_monitoring_2eproto, file_level_service_descriptors_monitoring_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_monitoring_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_monitoring_2eproto)), true);
namespace event_store {
namespace client {
namespace monitoring {

// ===================================================================

void StatsReq::InitAsDefaultInstance() {
}
class StatsReq::_Internal {
 public:
};

StatsReq::StatsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.monitoring.StatsReq)
}
StatsReq::StatsReq(const StatsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&use_metadata_, &from.use_metadata_,
    static_cast<size_t>(reinterpret_cast<char*>(&refresh_time_period_in_ms_) -
    reinterpret_cast<char*>(&use_metadata_)) + sizeof(refresh_time_period_in_ms_));
  // @@protoc_insertion_point(copy_constructor:event_store.client.monitoring.StatsReq)
}

void StatsReq::SharedCtor() {
  ::memset(&use_metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refresh_time_period_in_ms_) -
      reinterpret_cast<char*>(&use_metadata_)) + sizeof(refresh_time_period_in_ms_));
}

StatsReq::~StatsReq() {
  // @@protoc_insertion_point(destructor:event_store.client.monitoring.StatsReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StatsReq::ArenaDtor(void* object) {
  StatsReq* _this = reinterpret_cast< StatsReq* >(object);
  (void)_this;
}
void StatsReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatsReq& StatsReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatsReq_monitoring_2eproto.base);
  return *internal_default_instance();
}


void StatsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.monitoring.StatsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&use_metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refresh_time_period_in_ms_) -
      reinterpret_cast<char*>(&use_metadata_)) + sizeof(refresh_time_period_in_ms_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool use_metadata = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          use_metadata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 refresh_time_period_in_ms = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          refresh_time_period_in_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatsReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.monitoring.StatsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_metadata = 1;
  if (this->use_metadata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_use_metadata(), target);
  }

  // uint64 refresh_time_period_in_ms = 4;
  if (this->refresh_time_period_in_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_refresh_time_period_in_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.monitoring.StatsReq)
  return target;
}

size_t StatsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.monitoring.StatsReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool use_metadata = 1;
  if (this->use_metadata() != 0) {
    total_size += 1 + 1;
  }

  // uint64 refresh_time_period_in_ms = 4;
  if (this->refresh_time_period_in_ms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_refresh_time_period_in_ms());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatsReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.monitoring.StatsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const StatsReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatsReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.monitoring.StatsReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.monitoring.StatsReq)
    MergeFrom(*source);
  }
}

void StatsReq::MergeFrom(const StatsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.monitoring.StatsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.use_metadata() != 0) {
    _internal_set_use_metadata(from._internal_use_metadata());
  }
  if (from.refresh_time_period_in_ms() != 0) {
    _internal_set_refresh_time_period_in_ms(from._internal_refresh_time_period_in_ms());
  }
}

void StatsReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.monitoring.StatsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatsReq::CopyFrom(const StatsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.monitoring.StatsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsReq::IsInitialized() const {
  return true;
}

void StatsReq::InternalSwap(StatsReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatsReq, refresh_time_period_in_ms_)
      + sizeof(StatsReq::refresh_time_period_in_ms_)
      - PROTOBUF_FIELD_OFFSET(StatsReq, use_metadata_)>(
          reinterpret_cast<char*>(&use_metadata_),
          reinterpret_cast<char*>(&other->use_metadata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StatsReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

StatsResp_StatsEntry_DoNotUse::StatsResp_StatsEntry_DoNotUse() {}
StatsResp_StatsEntry_DoNotUse::StatsResp_StatsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void StatsResp_StatsEntry_DoNotUse::MergeFrom(const StatsResp_StatsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata StatsResp_StatsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void StatsResp_StatsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void StatsResp::InitAsDefaultInstance() {
}
class StatsResp::_Internal {
 public:
};

StatsResp::StatsResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  stats_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.monitoring.StatsResp)
}
StatsResp::StatsResp(const StatsResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stats_.MergeFrom(from.stats_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.monitoring.StatsResp)
}

void StatsResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatsResp_monitoring_2eproto.base);
}

StatsResp::~StatsResp() {
  // @@protoc_insertion_point(destructor:event_store.client.monitoring.StatsResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatsResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StatsResp::ArenaDtor(void* object) {
  StatsResp* _this = reinterpret_cast< StatsResp* >(object);
  (void)_this;
}
void StatsResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatsResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatsResp& StatsResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatsResp_monitoring_2eproto.base);
  return *internal_default_instance();
}


void StatsResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.monitoring.StatsResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatsResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, string> stats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&stats_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatsResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.monitoring.StatsResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> stats = 1;
  if (!this->_internal_stats().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "event_store.client.monitoring.StatsResp.StatsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "event_store.client.monitoring.StatsResp.StatsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_stats().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_stats().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_stats().begin();
          it != this->_internal_stats().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = StatsResp_StatsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_stats().begin();
          it != this->_internal_stats().end(); ++it) {
        target = StatsResp_StatsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.monitoring.StatsResp)
  return target;
}

size_t StatsResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.monitoring.StatsResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> stats = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_stats_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_stats().begin();
      it != this->_internal_stats().end(); ++it) {
    total_size += StatsResp_StatsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatsResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.monitoring.StatsResp)
  GOOGLE_DCHECK_NE(&from, this);
  const StatsResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatsResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.monitoring.StatsResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.monitoring.StatsResp)
    MergeFrom(*source);
  }
}

void StatsResp::MergeFrom(const StatsResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.monitoring.StatsResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
}

void StatsResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.monitoring.StatsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatsResp::CopyFrom(const StatsResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.monitoring.StatsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsResp::IsInitialized() const {
  return true;
}

void StatsResp::InternalSwap(StatsResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stats_.Swap(&other->stats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatsResp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace monitoring
}  // namespace client
}  // namespace event_store
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::event_store::client::monitoring::StatsReq* Arena::CreateMaybeMessage< ::event_store::client::monitoring::StatsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::monitoring::StatsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::monitoring::StatsResp_StatsEntry_DoNotUse* Arena::CreateMaybeMessage< ::event_store::client::monitoring::StatsResp_StatsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::monitoring::StatsResp_StatsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::monitoring::StatsResp* Arena::CreateMaybeMessage< ::event_store::client::monitoring::StatsResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::monitoring::StatsResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
