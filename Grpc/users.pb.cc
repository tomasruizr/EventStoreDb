// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: users.proto

#include "users.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_users_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChangePasswordReq_Options_users_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_users_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateReq_Options_users_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_users_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteReq_Options_users_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_users_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DetailsReq_Options_users_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_users_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DetailsResp_UserDetails_users_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_users_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DetailsResp_UserDetails_DateTime_users_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_users_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisableReq_Options_users_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_users_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnableReq_Options_users_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_users_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetPasswordReq_Options_users_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_users_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateReq_Options_users_2eproto;
namespace event_store {
namespace client {
namespace users {
class CreateReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateReq_Options> _instance;
} _CreateReq_Options_default_instance_;
class CreateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateReq> _instance;
} _CreateReq_default_instance_;
class CreateRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateResp> _instance;
} _CreateResp_default_instance_;
class UpdateReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateReq_Options> _instance;
} _UpdateReq_Options_default_instance_;
class UpdateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateReq> _instance;
} _UpdateReq_default_instance_;
class UpdateRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateResp> _instance;
} _UpdateResp_default_instance_;
class DeleteReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteReq_Options> _instance;
} _DeleteReq_Options_default_instance_;
class DeleteReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteReq> _instance;
} _DeleteReq_default_instance_;
class DeleteRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResp> _instance;
} _DeleteResp_default_instance_;
class EnableReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnableReq_Options> _instance;
} _EnableReq_Options_default_instance_;
class EnableReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnableReq> _instance;
} _EnableReq_default_instance_;
class EnableRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnableResp> _instance;
} _EnableResp_default_instance_;
class DisableReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisableReq_Options> _instance;
} _DisableReq_Options_default_instance_;
class DisableReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisableReq> _instance;
} _DisableReq_default_instance_;
class DisableRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisableResp> _instance;
} _DisableResp_default_instance_;
class DetailsReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DetailsReq_Options> _instance;
} _DetailsReq_Options_default_instance_;
class DetailsReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DetailsReq> _instance;
} _DetailsReq_default_instance_;
class DetailsResp_UserDetails_DateTimeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DetailsResp_UserDetails_DateTime> _instance;
} _DetailsResp_UserDetails_DateTime_default_instance_;
class DetailsResp_UserDetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DetailsResp_UserDetails> _instance;
} _DetailsResp_UserDetails_default_instance_;
class DetailsRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DetailsResp> _instance;
} _DetailsResp_default_instance_;
class ChangePasswordReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChangePasswordReq_Options> _instance;
} _ChangePasswordReq_Options_default_instance_;
class ChangePasswordReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChangePasswordReq> _instance;
} _ChangePasswordReq_default_instance_;
class ChangePasswordRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChangePasswordResp> _instance;
} _ChangePasswordResp_default_instance_;
class ResetPasswordReq_OptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetPasswordReq_Options> _instance;
} _ResetPasswordReq_Options_default_instance_;
class ResetPasswordReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetPasswordReq> _instance;
} _ResetPasswordReq_default_instance_;
class ResetPasswordRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetPasswordResp> _instance;
} _ResetPasswordResp_default_instance_;
}  // namespace users
}  // namespace client
}  // namespace event_store
static void InitDefaultsscc_info_ChangePasswordReq_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_ChangePasswordReq_default_instance_;
    new (ptr) ::event_store::client::users::ChangePasswordReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::ChangePasswordReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChangePasswordReq_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ChangePasswordReq_users_2eproto}, {
      &scc_info_ChangePasswordReq_Options_users_2eproto.base,}};

static void InitDefaultsscc_info_ChangePasswordReq_Options_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_ChangePasswordReq_Options_default_instance_;
    new (ptr) ::event_store::client::users::ChangePasswordReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::ChangePasswordReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChangePasswordReq_Options_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChangePasswordReq_Options_users_2eproto}, {}};

static void InitDefaultsscc_info_ChangePasswordResp_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_ChangePasswordResp_default_instance_;
    new (ptr) ::event_store::client::users::ChangePasswordResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::ChangePasswordResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChangePasswordResp_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChangePasswordResp_users_2eproto}, {}};

static void InitDefaultsscc_info_CreateReq_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_CreateReq_default_instance_;
    new (ptr) ::event_store::client::users::CreateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::CreateReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateReq_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateReq_users_2eproto}, {
      &scc_info_CreateReq_Options_users_2eproto.base,}};

static void InitDefaultsscc_info_CreateReq_Options_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_CreateReq_Options_default_instance_;
    new (ptr) ::event_store::client::users::CreateReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::CreateReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateReq_Options_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateReq_Options_users_2eproto}, {}};

static void InitDefaultsscc_info_CreateResp_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_CreateResp_default_instance_;
    new (ptr) ::event_store::client::users::CreateResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::CreateResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateResp_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateResp_users_2eproto}, {}};

static void InitDefaultsscc_info_DeleteReq_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DeleteReq_default_instance_;
    new (ptr) ::event_store::client::users::DeleteReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DeleteReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteReq_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteReq_users_2eproto}, {
      &scc_info_DeleteReq_Options_users_2eproto.base,}};

static void InitDefaultsscc_info_DeleteReq_Options_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DeleteReq_Options_default_instance_;
    new (ptr) ::event_store::client::users::DeleteReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DeleteReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteReq_Options_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteReq_Options_users_2eproto}, {}};

static void InitDefaultsscc_info_DeleteResp_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DeleteResp_default_instance_;
    new (ptr) ::event_store::client::users::DeleteResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DeleteResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteResp_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteResp_users_2eproto}, {}};

static void InitDefaultsscc_info_DetailsReq_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DetailsReq_default_instance_;
    new (ptr) ::event_store::client::users::DetailsReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DetailsReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DetailsReq_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DetailsReq_users_2eproto}, {
      &scc_info_DetailsReq_Options_users_2eproto.base,}};

static void InitDefaultsscc_info_DetailsReq_Options_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DetailsReq_Options_default_instance_;
    new (ptr) ::event_store::client::users::DetailsReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DetailsReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DetailsReq_Options_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DetailsReq_Options_users_2eproto}, {}};

static void InitDefaultsscc_info_DetailsResp_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DetailsResp_default_instance_;
    new (ptr) ::event_store::client::users::DetailsResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DetailsResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DetailsResp_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DetailsResp_users_2eproto}, {
      &scc_info_DetailsResp_UserDetails_users_2eproto.base,}};

static void InitDefaultsscc_info_DetailsResp_UserDetails_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DetailsResp_UserDetails_default_instance_;
    new (ptr) ::event_store::client::users::DetailsResp_UserDetails();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DetailsResp_UserDetails::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DetailsResp_UserDetails_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DetailsResp_UserDetails_users_2eproto}, {
      &scc_info_DetailsResp_UserDetails_DateTime_users_2eproto.base,}};

static void InitDefaultsscc_info_DetailsResp_UserDetails_DateTime_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DetailsResp_UserDetails_DateTime_default_instance_;
    new (ptr) ::event_store::client::users::DetailsResp_UserDetails_DateTime();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DetailsResp_UserDetails_DateTime::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DetailsResp_UserDetails_DateTime_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DetailsResp_UserDetails_DateTime_users_2eproto}, {}};

static void InitDefaultsscc_info_DisableReq_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DisableReq_default_instance_;
    new (ptr) ::event_store::client::users::DisableReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DisableReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DisableReq_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DisableReq_users_2eproto}, {
      &scc_info_DisableReq_Options_users_2eproto.base,}};

static void InitDefaultsscc_info_DisableReq_Options_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DisableReq_Options_default_instance_;
    new (ptr) ::event_store::client::users::DisableReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DisableReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisableReq_Options_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DisableReq_Options_users_2eproto}, {}};

static void InitDefaultsscc_info_DisableResp_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_DisableResp_default_instance_;
    new (ptr) ::event_store::client::users::DisableResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::DisableResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisableResp_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DisableResp_users_2eproto}, {}};

static void InitDefaultsscc_info_EnableReq_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_EnableReq_default_instance_;
    new (ptr) ::event_store::client::users::EnableReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::EnableReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EnableReq_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EnableReq_users_2eproto}, {
      &scc_info_EnableReq_Options_users_2eproto.base,}};

static void InitDefaultsscc_info_EnableReq_Options_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_EnableReq_Options_default_instance_;
    new (ptr) ::event_store::client::users::EnableReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::EnableReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnableReq_Options_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EnableReq_Options_users_2eproto}, {}};

static void InitDefaultsscc_info_EnableResp_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_EnableResp_default_instance_;
    new (ptr) ::event_store::client::users::EnableResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::EnableResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnableResp_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EnableResp_users_2eproto}, {}};

static void InitDefaultsscc_info_ResetPasswordReq_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_ResetPasswordReq_default_instance_;
    new (ptr) ::event_store::client::users::ResetPasswordReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::ResetPasswordReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResetPasswordReq_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResetPasswordReq_users_2eproto}, {
      &scc_info_ResetPasswordReq_Options_users_2eproto.base,}};

static void InitDefaultsscc_info_ResetPasswordReq_Options_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_ResetPasswordReq_Options_default_instance_;
    new (ptr) ::event_store::client::users::ResetPasswordReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::ResetPasswordReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetPasswordReq_Options_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResetPasswordReq_Options_users_2eproto}, {}};

static void InitDefaultsscc_info_ResetPasswordResp_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_ResetPasswordResp_default_instance_;
    new (ptr) ::event_store::client::users::ResetPasswordResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::ResetPasswordResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetPasswordResp_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResetPasswordResp_users_2eproto}, {}};

static void InitDefaultsscc_info_UpdateReq_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_UpdateReq_default_instance_;
    new (ptr) ::event_store::client::users::UpdateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::UpdateReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateReq_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateReq_users_2eproto}, {
      &scc_info_UpdateReq_Options_users_2eproto.base,}};

static void InitDefaultsscc_info_UpdateReq_Options_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_UpdateReq_Options_default_instance_;
    new (ptr) ::event_store::client::users::UpdateReq_Options();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::UpdateReq_Options::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateReq_Options_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateReq_Options_users_2eproto}, {}};

static void InitDefaultsscc_info_UpdateResp_users_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_store::client::users::_UpdateResp_default_instance_;
    new (ptr) ::event_store::client::users::UpdateResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_store::client::users::UpdateResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateResp_users_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateResp_users_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_users_2eproto[26];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_users_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_users_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_users_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::CreateReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::CreateReq_Options, login_name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::CreateReq_Options, password_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::CreateReq_Options, full_name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::CreateReq_Options, groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::CreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::CreateReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::CreateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::UpdateReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::UpdateReq_Options, login_name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::UpdateReq_Options, password_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::UpdateReq_Options, full_name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::UpdateReq_Options, groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::UpdateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::UpdateReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::UpdateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DeleteReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DeleteReq_Options, login_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DeleteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DeleteReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DeleteResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::EnableReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::EnableReq_Options, login_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::EnableReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::EnableReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::EnableResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DisableReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DisableReq_Options, login_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DisableReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DisableReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DisableResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsReq_Options, login_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsResp_UserDetails_DateTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsResp_UserDetails_DateTime, ticks_since_epoch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsResp_UserDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsResp_UserDetails, login_name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsResp_UserDetails, full_name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsResp_UserDetails, groups_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsResp_UserDetails, last_updated_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsResp_UserDetails, disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::DetailsResp, user_details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ChangePasswordReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ChangePasswordReq_Options, login_name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ChangePasswordReq_Options, current_password_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ChangePasswordReq_Options, new_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ChangePasswordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ChangePasswordReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ChangePasswordResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ResetPasswordReq_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ResetPasswordReq_Options, login_name_),
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ResetPasswordReq_Options, new_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ResetPasswordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ResetPasswordReq, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::event_store::client::users::ResetPasswordResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::event_store::client::users::CreateReq_Options)},
  { 9, -1, sizeof(::event_store::client::users::CreateReq)},
  { 15, -1, sizeof(::event_store::client::users::CreateResp)},
  { 20, -1, sizeof(::event_store::client::users::UpdateReq_Options)},
  { 29, -1, sizeof(::event_store::client::users::UpdateReq)},
  { 35, -1, sizeof(::event_store::client::users::UpdateResp)},
  { 40, -1, sizeof(::event_store::client::users::DeleteReq_Options)},
  { 46, -1, sizeof(::event_store::client::users::DeleteReq)},
  { 52, -1, sizeof(::event_store::client::users::DeleteResp)},
  { 57, -1, sizeof(::event_store::client::users::EnableReq_Options)},
  { 63, -1, sizeof(::event_store::client::users::EnableReq)},
  { 69, -1, sizeof(::event_store::client::users::EnableResp)},
  { 74, -1, sizeof(::event_store::client::users::DisableReq_Options)},
  { 80, -1, sizeof(::event_store::client::users::DisableReq)},
  { 86, -1, sizeof(::event_store::client::users::DisableResp)},
  { 91, -1, sizeof(::event_store::client::users::DetailsReq_Options)},
  { 97, -1, sizeof(::event_store::client::users::DetailsReq)},
  { 103, -1, sizeof(::event_store::client::users::DetailsResp_UserDetails_DateTime)},
  { 109, -1, sizeof(::event_store::client::users::DetailsResp_UserDetails)},
  { 119, -1, sizeof(::event_store::client::users::DetailsResp)},
  { 125, -1, sizeof(::event_store::client::users::ChangePasswordReq_Options)},
  { 133, -1, sizeof(::event_store::client::users::ChangePasswordReq)},
  { 139, -1, sizeof(::event_store::client::users::ChangePasswordResp)},
  { 144, -1, sizeof(::event_store::client::users::ResetPasswordReq_Options)},
  { 151, -1, sizeof(::event_store::client::users::ResetPasswordReq)},
  { 157, -1, sizeof(::event_store::client::users::ResetPasswordResp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_CreateReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_CreateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_CreateResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_UpdateReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_UpdateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_UpdateResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DeleteReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DeleteReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DeleteResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_EnableReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_EnableReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_EnableResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DisableReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DisableReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DisableResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DetailsReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DetailsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DetailsResp_UserDetails_DateTime_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DetailsResp_UserDetails_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_DetailsResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_ChangePasswordReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_ChangePasswordReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_ChangePasswordResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_ResetPasswordReq_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_ResetPasswordReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::event_store::client::users::_ResetPasswordResp_default_instance_),
};

const char descriptor_table_protodef_users_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013users.proto\022\030event_store.client.users\""
  "\235\001\n\tCreateReq\022<\n\007options\030\001 \001(\0132+.event_s"
  "tore.client.users.CreateReq.Options\032R\n\007O"
  "ptions\022\022\n\nlogin_name\030\001 \001(\t\022\020\n\010password\030\002"
  " \001(\t\022\021\n\tfull_name\030\003 \001(\t\022\016\n\006groups\030\004 \003(\t\""
  "\014\n\nCreateResp\"\235\001\n\tUpdateReq\022<\n\007options\030\001"
  " \001(\0132+.event_store.client.users.UpdateRe"
  "q.Options\032R\n\007Options\022\022\n\nlogin_name\030\001 \001(\t"
  "\022\020\n\010password\030\002 \001(\t\022\021\n\tfull_name\030\003 \001(\t\022\016\n"
  "\006groups\030\004 \003(\t\"\014\n\nUpdateResp\"h\n\tDeleteReq"
  "\022<\n\007options\030\001 \001(\0132+.event_store.client.u"
  "sers.DeleteReq.Options\032\035\n\007Options\022\022\n\nlog"
  "in_name\030\001 \001(\t\"\014\n\nDeleteResp\"h\n\tEnableReq"
  "\022<\n\007options\030\001 \001(\0132+.event_store.client.u"
  "sers.EnableReq.Options\032\035\n\007Options\022\022\n\nlog"
  "in_name\030\001 \001(\t\"\014\n\nEnableResp\"j\n\nDisableRe"
  "q\022=\n\007options\030\001 \001(\0132,.event_store.client."
  "users.DisableReq.Options\032\035\n\007Options\022\022\n\nl"
  "ogin_name\030\001 \001(\t\"\r\n\013DisableResp\"j\n\nDetail"
  "sReq\022=\n\007options\030\001 \001(\0132,.event_store.clie"
  "nt.users.DetailsReq.Options\032\035\n\007Options\022\022"
  "\n\nlogin_name\030\001 \001(\t\"\250\002\n\013DetailsResp\022G\n\014us"
  "er_details\030\001 \001(\01321.event_store.client.us"
  "ers.DetailsResp.UserDetails\032\317\001\n\013UserDeta"
  "ils\022\022\n\nlogin_name\030\001 \001(\t\022\021\n\tfull_name\030\002 \001"
  "(\t\022\016\n\006groups\030\003 \003(\t\022P\n\014last_updated\030\004 \001(\013"
  "2:.event_store.client.users.DetailsResp."
  "UserDetails.DateTime\022\020\n\010disabled\030\005 \001(\010\032%"
  "\n\010DateTime\022\031\n\021ticks_since_epoch\030\001 \001(\003\"\250\001"
  "\n\021ChangePasswordReq\022D\n\007options\030\001 \001(\01323.e"
  "vent_store.client.users.ChangePasswordRe"
  "q.Options\032M\n\007Options\022\022\n\nlogin_name\030\001 \001(\t"
  "\022\030\n\020current_password\030\002 \001(\t\022\024\n\014new_passwo"
  "rd\030\003 \001(\t\"\024\n\022ChangePasswordResp\"\214\001\n\020Reset"
  "PasswordReq\022C\n\007options\030\001 \001(\01322.event_sto"
  "re.client.users.ResetPasswordReq.Options"
  "\0323\n\007Options\022\022\n\nlogin_name\030\001 \001(\t\022\024\n\014new_p"
  "assword\030\002 \001(\t\"\023\n\021ResetPasswordResp2\344\005\n\005U"
  "sers\022S\n\006Create\022#.event_store.client.user"
  "s.CreateReq\032$.event_store.client.users.C"
  "reateResp\022S\n\006Update\022#.event_store.client"
  ".users.UpdateReq\032$.event_store.client.us"
  "ers.UpdateResp\022S\n\006Delete\022#.event_store.c"
  "lient.users.DeleteReq\032$.event_store.clie"
  "nt.users.DeleteResp\022V\n\007Disable\022$.event_s"
  "tore.client.users.DisableReq\032%.event_sto"
  "re.client.users.DisableResp\022S\n\006Enable\022#."
  "event_store.client.users.EnableReq\032$.eve"
  "nt_store.client.users.EnableResp\022X\n\007Deta"
  "ils\022$.event_store.client.users.DetailsRe"
  "q\032%.event_store.client.users.DetailsResp"
  "0\001\022k\n\016ChangePassword\022+.event_store.clien"
  "t.users.ChangePasswordReq\032,.event_store."
  "client.users.ChangePasswordResp\022h\n\rReset"
  "Password\022*.event_store.client.users.Rese"
  "tPasswordReq\032+.event_store.client.users."
  "ResetPasswordRespB%\n#com.eventstore.dbcl"
  "ient.proto.usersb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_users_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_users_2eproto_sccs[26] = {
  &scc_info_ChangePasswordReq_users_2eproto.base,
  &scc_info_ChangePasswordReq_Options_users_2eproto.base,
  &scc_info_ChangePasswordResp_users_2eproto.base,
  &scc_info_CreateReq_users_2eproto.base,
  &scc_info_CreateReq_Options_users_2eproto.base,
  &scc_info_CreateResp_users_2eproto.base,
  &scc_info_DeleteReq_users_2eproto.base,
  &scc_info_DeleteReq_Options_users_2eproto.base,
  &scc_info_DeleteResp_users_2eproto.base,
  &scc_info_DetailsReq_users_2eproto.base,
  &scc_info_DetailsReq_Options_users_2eproto.base,
  &scc_info_DetailsResp_users_2eproto.base,
  &scc_info_DetailsResp_UserDetails_users_2eproto.base,
  &scc_info_DetailsResp_UserDetails_DateTime_users_2eproto.base,
  &scc_info_DisableReq_users_2eproto.base,
  &scc_info_DisableReq_Options_users_2eproto.base,
  &scc_info_DisableResp_users_2eproto.base,
  &scc_info_EnableReq_users_2eproto.base,
  &scc_info_EnableReq_Options_users_2eproto.base,
  &scc_info_EnableResp_users_2eproto.base,
  &scc_info_ResetPasswordReq_users_2eproto.base,
  &scc_info_ResetPasswordReq_Options_users_2eproto.base,
  &scc_info_ResetPasswordResp_users_2eproto.base,
  &scc_info_UpdateReq_users_2eproto.base,
  &scc_info_UpdateReq_Options_users_2eproto.base,
  &scc_info_UpdateResp_users_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_users_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_users_2eproto = {
  false, false, descriptor_table_protodef_users_2eproto, "users.proto", 2304,
  &descriptor_table_users_2eproto_once, descriptor_table_users_2eproto_sccs, descriptor_table_users_2eproto_deps, 26, 0,
  schemas, file_default_instances, TableStruct_users_2eproto::offsets,
  file_level_metadata_users_2eproto, 26, file_level_enum_descriptors_users_2eproto, file_level_service_descriptors_users_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_users_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_users_2eproto)), true);
namespace event_store {
namespace client {
namespace users {

// ===================================================================

void CreateReq_Options::InitAsDefaultInstance() {
}
class CreateReq_Options::_Internal {
 public:
};

CreateReq_Options::CreateReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.CreateReq.Options)
}
CreateReq_Options::CreateReq_Options(const CreateReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login_name().empty()) {
    login_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login_name(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  full_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_full_name().empty()) {
    full_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_full_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.CreateReq.Options)
}

void CreateReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateReq_Options_users_2eproto.base);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  full_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateReq_Options::~CreateReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.users.CreateReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  full_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateReq_Options::ArenaDtor(void* object) {
  CreateReq_Options* _this = reinterpret_cast< CreateReq_Options* >(object);
  (void)_this;
}
void CreateReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateReq_Options& CreateReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateReq_Options_users_2eproto.base);
  return *internal_default_instance();
}


void CreateReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.CreateReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  login_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  full_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string login_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_login_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.CreateReq.Options.login_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.CreateReq.Options.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string full_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_full_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.CreateReq.Options.full_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string groups = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_groups();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.CreateReq.Options.groups"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.CreateReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login_name().data(), static_cast<int>(this->_internal_login_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.CreateReq.Options.login_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login_name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.CreateReq.Options.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  // string full_name = 3;
  if (this->full_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_full_name().data(), static_cast<int>(this->_internal_full_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.CreateReq.Options.full_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_full_name(), target);
  }

  // repeated string groups = 4;
  for (int i = 0, n = this->_internal_groups_size(); i < n; i++) {
    const auto& s = this->_internal_groups(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.CreateReq.Options.groups");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.CreateReq.Options)
  return target;
}

size_t CreateReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.CreateReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string groups = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(groups_.size());
  for (int i = 0, n = groups_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      groups_.Get(i));
  }

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string full_name = 3;
  if (this->full_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_full_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.CreateReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.CreateReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.CreateReq.Options)
    MergeFrom(*source);
  }
}

void CreateReq_Options::MergeFrom(const CreateReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.CreateReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
  if (from.login_name().size() > 0) {
    _internal_set_login_name(from._internal_login_name());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.full_name().size() > 0) {
    _internal_set_full_name(from._internal_full_name());
  }
}

void CreateReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.CreateReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateReq_Options::CopyFrom(const CreateReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.CreateReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateReq_Options::IsInitialized() const {
  return true;
}

void CreateReq_Options::InternalSwap(CreateReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groups_.InternalSwap(&other->groups_);
  login_name_.Swap(&other->login_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  full_name_.Swap(&other->full_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateReq::InitAsDefaultInstance() {
  ::event_store::client::users::_CreateReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::users::CreateReq_Options*>(
      ::event_store::client::users::CreateReq_Options::internal_default_instance());
}
class CreateReq::_Internal {
 public:
  static const ::event_store::client::users::CreateReq_Options& options(const CreateReq* msg);
};

const ::event_store::client::users::CreateReq_Options&
CreateReq::_Internal::options(const CreateReq* msg) {
  return *msg->options_;
}
CreateReq::CreateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.CreateReq)
}
CreateReq::CreateReq(const CreateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::users::CreateReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.CreateReq)
}

void CreateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateReq_users_2eproto.base);
  options_ = nullptr;
}

CreateReq::~CreateReq() {
  // @@protoc_insertion_point(destructor:event_store.client.users.CreateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void CreateReq::ArenaDtor(void* object) {
  CreateReq* _this = reinterpret_cast< CreateReq* >(object);
  (void)_this;
}
void CreateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateReq& CreateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateReq_users_2eproto.base);
  return *internal_default_instance();
}


void CreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.CreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.users.CreateReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.CreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.users.CreateReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.CreateReq)
  return target;
}

size_t CreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.CreateReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.users.CreateReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.CreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.CreateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.CreateReq)
    MergeFrom(*source);
  }
}

void CreateReq::MergeFrom(const CreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.CreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::users::CreateReq_Options::MergeFrom(from._internal_options());
  }
}

void CreateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.CreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateReq::CopyFrom(const CreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.CreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateReq::IsInitialized() const {
  return true;
}

void CreateReq::InternalSwap(CreateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateResp::InitAsDefaultInstance() {
}
class CreateResp::_Internal {
 public:
};

CreateResp::CreateResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.CreateResp)
}
CreateResp::CreateResp(const CreateResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.CreateResp)
}

void CreateResp::SharedCtor() {
}

CreateResp::~CreateResp() {
  // @@protoc_insertion_point(destructor:event_store.client.users.CreateResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateResp::ArenaDtor(void* object) {
  CreateResp* _this = reinterpret_cast< CreateResp* >(object);
  (void)_this;
}
void CreateResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateResp& CreateResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateResp_users_2eproto.base);
  return *internal_default_instance();
}


void CreateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.CreateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.CreateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.CreateResp)
  return target;
}

size_t CreateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.CreateResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.CreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.CreateResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.CreateResp)
    MergeFrom(*source);
  }
}

void CreateResp::MergeFrom(const CreateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.CreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.CreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateResp::CopyFrom(const CreateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.CreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateResp::IsInitialized() const {
  return true;
}

void CreateResp::InternalSwap(CreateResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateReq_Options::InitAsDefaultInstance() {
}
class UpdateReq_Options::_Internal {
 public:
};

UpdateReq_Options::UpdateReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.UpdateReq.Options)
}
UpdateReq_Options::UpdateReq_Options(const UpdateReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login_name().empty()) {
    login_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login_name(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  full_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_full_name().empty()) {
    full_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_full_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.UpdateReq.Options)
}

void UpdateReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateReq_Options_users_2eproto.base);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  full_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateReq_Options::~UpdateReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.users.UpdateReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  full_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateReq_Options::ArenaDtor(void* object) {
  UpdateReq_Options* _this = reinterpret_cast< UpdateReq_Options* >(object);
  (void)_this;
}
void UpdateReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateReq_Options& UpdateReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateReq_Options_users_2eproto.base);
  return *internal_default_instance();
}


void UpdateReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.UpdateReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  login_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  full_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string login_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_login_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.UpdateReq.Options.login_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.UpdateReq.Options.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string full_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_full_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.UpdateReq.Options.full_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string groups = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_groups();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.UpdateReq.Options.groups"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.UpdateReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login_name().data(), static_cast<int>(this->_internal_login_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.UpdateReq.Options.login_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login_name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.UpdateReq.Options.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  // string full_name = 3;
  if (this->full_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_full_name().data(), static_cast<int>(this->_internal_full_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.UpdateReq.Options.full_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_full_name(), target);
  }

  // repeated string groups = 4;
  for (int i = 0, n = this->_internal_groups_size(); i < n; i++) {
    const auto& s = this->_internal_groups(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.UpdateReq.Options.groups");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.UpdateReq.Options)
  return target;
}

size_t UpdateReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.UpdateReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string groups = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(groups_.size());
  for (int i = 0, n = groups_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      groups_.Get(i));
  }

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string full_name = 3;
  if (this->full_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_full_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.UpdateReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.UpdateReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.UpdateReq.Options)
    MergeFrom(*source);
  }
}

void UpdateReq_Options::MergeFrom(const UpdateReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.UpdateReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
  if (from.login_name().size() > 0) {
    _internal_set_login_name(from._internal_login_name());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.full_name().size() > 0) {
    _internal_set_full_name(from._internal_full_name());
  }
}

void UpdateReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.UpdateReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateReq_Options::CopyFrom(const UpdateReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.UpdateReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateReq_Options::IsInitialized() const {
  return true;
}

void UpdateReq_Options::InternalSwap(UpdateReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groups_.InternalSwap(&other->groups_);
  login_name_.Swap(&other->login_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  full_name_.Swap(&other->full_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateReq::InitAsDefaultInstance() {
  ::event_store::client::users::_UpdateReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::users::UpdateReq_Options*>(
      ::event_store::client::users::UpdateReq_Options::internal_default_instance());
}
class UpdateReq::_Internal {
 public:
  static const ::event_store::client::users::UpdateReq_Options& options(const UpdateReq* msg);
};

const ::event_store::client::users::UpdateReq_Options&
UpdateReq::_Internal::options(const UpdateReq* msg) {
  return *msg->options_;
}
UpdateReq::UpdateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.UpdateReq)
}
UpdateReq::UpdateReq(const UpdateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::users::UpdateReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.UpdateReq)
}

void UpdateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateReq_users_2eproto.base);
  options_ = nullptr;
}

UpdateReq::~UpdateReq() {
  // @@protoc_insertion_point(destructor:event_store.client.users.UpdateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void UpdateReq::ArenaDtor(void* object) {
  UpdateReq* _this = reinterpret_cast< UpdateReq* >(object);
  (void)_this;
}
void UpdateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateReq& UpdateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateReq_users_2eproto.base);
  return *internal_default_instance();
}


void UpdateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.UpdateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.users.UpdateReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.UpdateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.users.UpdateReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.UpdateReq)
  return target;
}

size_t UpdateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.UpdateReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.users.UpdateReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.UpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.UpdateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.UpdateReq)
    MergeFrom(*source);
  }
}

void UpdateReq::MergeFrom(const UpdateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.UpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::users::UpdateReq_Options::MergeFrom(from._internal_options());
  }
}

void UpdateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.UpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateReq::CopyFrom(const UpdateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.UpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateReq::IsInitialized() const {
  return true;
}

void UpdateReq::InternalSwap(UpdateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateResp::InitAsDefaultInstance() {
}
class UpdateResp::_Internal {
 public:
};

UpdateResp::UpdateResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.UpdateResp)
}
UpdateResp::UpdateResp(const UpdateResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.UpdateResp)
}

void UpdateResp::SharedCtor() {
}

UpdateResp::~UpdateResp() {
  // @@protoc_insertion_point(destructor:event_store.client.users.UpdateResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateResp::ArenaDtor(void* object) {
  UpdateResp* _this = reinterpret_cast< UpdateResp* >(object);
  (void)_this;
}
void UpdateResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateResp& UpdateResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateResp_users_2eproto.base);
  return *internal_default_instance();
}


void UpdateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.UpdateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.UpdateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.UpdateResp)
  return target;
}

size_t UpdateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.UpdateResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.UpdateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.UpdateResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.UpdateResp)
    MergeFrom(*source);
  }
}

void UpdateResp::MergeFrom(const UpdateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.UpdateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.UpdateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateResp::CopyFrom(const UpdateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.UpdateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateResp::IsInitialized() const {
  return true;
}

void UpdateResp::InternalSwap(UpdateResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteReq_Options::InitAsDefaultInstance() {
}
class DeleteReq_Options::_Internal {
 public:
};

DeleteReq_Options::DeleteReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DeleteReq.Options)
}
DeleteReq_Options::DeleteReq_Options(const DeleteReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login_name().empty()) {
    login_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DeleteReq.Options)
}

void DeleteReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteReq_Options_users_2eproto.base);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteReq_Options::~DeleteReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DeleteReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteReq_Options::ArenaDtor(void* object) {
  DeleteReq_Options* _this = reinterpret_cast< DeleteReq_Options* >(object);
  (void)_this;
}
void DeleteReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteReq_Options& DeleteReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteReq_Options_users_2eproto.base);
  return *internal_default_instance();
}


void DeleteReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DeleteReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  login_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string login_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_login_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.DeleteReq.Options.login_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DeleteReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login_name().data(), static_cast<int>(this->_internal_login_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.DeleteReq.Options.login_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DeleteReq.Options)
  return target;
}

size_t DeleteReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DeleteReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DeleteReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DeleteReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DeleteReq.Options)
    MergeFrom(*source);
  }
}

void DeleteReq_Options::MergeFrom(const DeleteReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DeleteReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login_name().size() > 0) {
    _internal_set_login_name(from._internal_login_name());
  }
}

void DeleteReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DeleteReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteReq_Options::CopyFrom(const DeleteReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DeleteReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteReq_Options::IsInitialized() const {
  return true;
}

void DeleteReq_Options::InternalSwap(DeleteReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  login_name_.Swap(&other->login_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteReq::InitAsDefaultInstance() {
  ::event_store::client::users::_DeleteReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::users::DeleteReq_Options*>(
      ::event_store::client::users::DeleteReq_Options::internal_default_instance());
}
class DeleteReq::_Internal {
 public:
  static const ::event_store::client::users::DeleteReq_Options& options(const DeleteReq* msg);
};

const ::event_store::client::users::DeleteReq_Options&
DeleteReq::_Internal::options(const DeleteReq* msg) {
  return *msg->options_;
}
DeleteReq::DeleteReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DeleteReq)
}
DeleteReq::DeleteReq(const DeleteReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::users::DeleteReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DeleteReq)
}

void DeleteReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteReq_users_2eproto.base);
  options_ = nullptr;
}

DeleteReq::~DeleteReq() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DeleteReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void DeleteReq::ArenaDtor(void* object) {
  DeleteReq* _this = reinterpret_cast< DeleteReq* >(object);
  (void)_this;
}
void DeleteReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteReq& DeleteReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteReq_users_2eproto.base);
  return *internal_default_instance();
}


void DeleteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DeleteReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.users.DeleteReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DeleteReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.users.DeleteReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DeleteReq)
  return target;
}

size_t DeleteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DeleteReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.users.DeleteReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DeleteReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DeleteReq)
    MergeFrom(*source);
  }
}

void DeleteReq::MergeFrom(const DeleteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::users::DeleteReq_Options::MergeFrom(from._internal_options());
  }
}

void DeleteReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteReq::CopyFrom(const DeleteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteReq::IsInitialized() const {
  return true;
}

void DeleteReq::InternalSwap(DeleteReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResp::InitAsDefaultInstance() {
}
class DeleteResp::_Internal {
 public:
};

DeleteResp::DeleteResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DeleteResp)
}
DeleteResp::DeleteResp(const DeleteResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DeleteResp)
}

void DeleteResp::SharedCtor() {
}

DeleteResp::~DeleteResp() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DeleteResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteResp::ArenaDtor(void* object) {
  DeleteResp* _this = reinterpret_cast< DeleteResp* >(object);
  (void)_this;
}
void DeleteResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResp& DeleteResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResp_users_2eproto.base);
  return *internal_default_instance();
}


void DeleteResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DeleteResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DeleteResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DeleteResp)
  return target;
}

size_t DeleteResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DeleteResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DeleteResp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DeleteResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DeleteResp)
    MergeFrom(*source);
  }
}

void DeleteResp::MergeFrom(const DeleteResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DeleteResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DeleteResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResp::CopyFrom(const DeleteResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DeleteResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResp::IsInitialized() const {
  return true;
}

void DeleteResp::InternalSwap(DeleteResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnableReq_Options::InitAsDefaultInstance() {
}
class EnableReq_Options::_Internal {
 public:
};

EnableReq_Options::EnableReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.EnableReq.Options)
}
EnableReq_Options::EnableReq_Options(const EnableReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login_name().empty()) {
    login_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.EnableReq.Options)
}

void EnableReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnableReq_Options_users_2eproto.base);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EnableReq_Options::~EnableReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.users.EnableReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnableReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EnableReq_Options::ArenaDtor(void* object) {
  EnableReq_Options* _this = reinterpret_cast< EnableReq_Options* >(object);
  (void)_this;
}
void EnableReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnableReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnableReq_Options& EnableReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnableReq_Options_users_2eproto.base);
  return *internal_default_instance();
}


void EnableReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.EnableReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  login_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string login_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_login_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.EnableReq.Options.login_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnableReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.EnableReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login_name().data(), static_cast<int>(this->_internal_login_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.EnableReq.Options.login_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.EnableReq.Options)
  return target;
}

size_t EnableReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.EnableReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnableReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.EnableReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const EnableReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnableReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.EnableReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.EnableReq.Options)
    MergeFrom(*source);
  }
}

void EnableReq_Options::MergeFrom(const EnableReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.EnableReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login_name().size() > 0) {
    _internal_set_login_name(from._internal_login_name());
  }
}

void EnableReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.EnableReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnableReq_Options::CopyFrom(const EnableReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.EnableReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableReq_Options::IsInitialized() const {
  return true;
}

void EnableReq_Options::InternalSwap(EnableReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  login_name_.Swap(&other->login_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnableReq::InitAsDefaultInstance() {
  ::event_store::client::users::_EnableReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::users::EnableReq_Options*>(
      ::event_store::client::users::EnableReq_Options::internal_default_instance());
}
class EnableReq::_Internal {
 public:
  static const ::event_store::client::users::EnableReq_Options& options(const EnableReq* msg);
};

const ::event_store::client::users::EnableReq_Options&
EnableReq::_Internal::options(const EnableReq* msg) {
  return *msg->options_;
}
EnableReq::EnableReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.EnableReq)
}
EnableReq::EnableReq(const EnableReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::users::EnableReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.EnableReq)
}

void EnableReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnableReq_users_2eproto.base);
  options_ = nullptr;
}

EnableReq::~EnableReq() {
  // @@protoc_insertion_point(destructor:event_store.client.users.EnableReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnableReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void EnableReq::ArenaDtor(void* object) {
  EnableReq* _this = reinterpret_cast< EnableReq* >(object);
  (void)_this;
}
void EnableReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnableReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnableReq& EnableReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnableReq_users_2eproto.base);
  return *internal_default_instance();
}


void EnableReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.EnableReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.users.EnableReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnableReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.EnableReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.users.EnableReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.EnableReq)
  return target;
}

size_t EnableReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.EnableReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.users.EnableReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnableReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.EnableReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnableReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnableReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.EnableReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.EnableReq)
    MergeFrom(*source);
  }
}

void EnableReq::MergeFrom(const EnableReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.EnableReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::users::EnableReq_Options::MergeFrom(from._internal_options());
  }
}

void EnableReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.EnableReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnableReq::CopyFrom(const EnableReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.EnableReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableReq::IsInitialized() const {
  return true;
}

void EnableReq::InternalSwap(EnableReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnableResp::InitAsDefaultInstance() {
}
class EnableResp::_Internal {
 public:
};

EnableResp::EnableResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.EnableResp)
}
EnableResp::EnableResp(const EnableResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.EnableResp)
}

void EnableResp::SharedCtor() {
}

EnableResp::~EnableResp() {
  // @@protoc_insertion_point(destructor:event_store.client.users.EnableResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnableResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EnableResp::ArenaDtor(void* object) {
  EnableResp* _this = reinterpret_cast< EnableResp* >(object);
  (void)_this;
}
void EnableResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnableResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnableResp& EnableResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnableResp_users_2eproto.base);
  return *internal_default_instance();
}


void EnableResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.EnableResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnableResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.EnableResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.EnableResp)
  return target;
}

size_t EnableResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.EnableResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnableResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.EnableResp)
  GOOGLE_DCHECK_NE(&from, this);
  const EnableResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnableResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.EnableResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.EnableResp)
    MergeFrom(*source);
  }
}

void EnableResp::MergeFrom(const EnableResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.EnableResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EnableResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.EnableResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnableResp::CopyFrom(const EnableResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.EnableResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableResp::IsInitialized() const {
  return true;
}

void EnableResp::InternalSwap(EnableResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisableReq_Options::InitAsDefaultInstance() {
}
class DisableReq_Options::_Internal {
 public:
};

DisableReq_Options::DisableReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DisableReq.Options)
}
DisableReq_Options::DisableReq_Options(const DisableReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login_name().empty()) {
    login_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DisableReq.Options)
}

void DisableReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DisableReq_Options_users_2eproto.base);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DisableReq_Options::~DisableReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DisableReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DisableReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DisableReq_Options::ArenaDtor(void* object) {
  DisableReq_Options* _this = reinterpret_cast< DisableReq_Options* >(object);
  (void)_this;
}
void DisableReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DisableReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisableReq_Options& DisableReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisableReq_Options_users_2eproto.base);
  return *internal_default_instance();
}


void DisableReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DisableReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  login_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string login_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_login_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.DisableReq.Options.login_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DisableReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DisableReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login_name().data(), static_cast<int>(this->_internal_login_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.DisableReq.Options.login_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DisableReq.Options)
  return target;
}

size_t DisableReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DisableReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisableReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DisableReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const DisableReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisableReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DisableReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DisableReq.Options)
    MergeFrom(*source);
  }
}

void DisableReq_Options::MergeFrom(const DisableReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DisableReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login_name().size() > 0) {
    _internal_set_login_name(from._internal_login_name());
  }
}

void DisableReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DisableReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisableReq_Options::CopyFrom(const DisableReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DisableReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableReq_Options::IsInitialized() const {
  return true;
}

void DisableReq_Options::InternalSwap(DisableReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  login_name_.Swap(&other->login_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisableReq::InitAsDefaultInstance() {
  ::event_store::client::users::_DisableReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::users::DisableReq_Options*>(
      ::event_store::client::users::DisableReq_Options::internal_default_instance());
}
class DisableReq::_Internal {
 public:
  static const ::event_store::client::users::DisableReq_Options& options(const DisableReq* msg);
};

const ::event_store::client::users::DisableReq_Options&
DisableReq::_Internal::options(const DisableReq* msg) {
  return *msg->options_;
}
DisableReq::DisableReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DisableReq)
}
DisableReq::DisableReq(const DisableReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::users::DisableReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DisableReq)
}

void DisableReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DisableReq_users_2eproto.base);
  options_ = nullptr;
}

DisableReq::~DisableReq() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DisableReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DisableReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void DisableReq::ArenaDtor(void* object) {
  DisableReq* _this = reinterpret_cast< DisableReq* >(object);
  (void)_this;
}
void DisableReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DisableReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisableReq& DisableReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisableReq_users_2eproto.base);
  return *internal_default_instance();
}


void DisableReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DisableReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.users.DisableReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DisableReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DisableReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.users.DisableReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DisableReq)
  return target;
}

size_t DisableReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DisableReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.users.DisableReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisableReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DisableReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DisableReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisableReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DisableReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DisableReq)
    MergeFrom(*source);
  }
}

void DisableReq::MergeFrom(const DisableReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DisableReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::users::DisableReq_Options::MergeFrom(from._internal_options());
  }
}

void DisableReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DisableReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisableReq::CopyFrom(const DisableReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DisableReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableReq::IsInitialized() const {
  return true;
}

void DisableReq::InternalSwap(DisableReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisableResp::InitAsDefaultInstance() {
}
class DisableResp::_Internal {
 public:
};

DisableResp::DisableResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DisableResp)
}
DisableResp::DisableResp(const DisableResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DisableResp)
}

void DisableResp::SharedCtor() {
}

DisableResp::~DisableResp() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DisableResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DisableResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DisableResp::ArenaDtor(void* object) {
  DisableResp* _this = reinterpret_cast< DisableResp* >(object);
  (void)_this;
}
void DisableResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DisableResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisableResp& DisableResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisableResp_users_2eproto.base);
  return *internal_default_instance();
}


void DisableResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DisableResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DisableResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DisableResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DisableResp)
  return target;
}

size_t DisableResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DisableResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisableResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DisableResp)
  GOOGLE_DCHECK_NE(&from, this);
  const DisableResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisableResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DisableResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DisableResp)
    MergeFrom(*source);
  }
}

void DisableResp::MergeFrom(const DisableResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DisableResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DisableResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DisableResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisableResp::CopyFrom(const DisableResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DisableResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableResp::IsInitialized() const {
  return true;
}

void DisableResp::InternalSwap(DisableResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DetailsReq_Options::InitAsDefaultInstance() {
}
class DetailsReq_Options::_Internal {
 public:
};

DetailsReq_Options::DetailsReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DetailsReq.Options)
}
DetailsReq_Options::DetailsReq_Options(const DetailsReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login_name().empty()) {
    login_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DetailsReq.Options)
}

void DetailsReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DetailsReq_Options_users_2eproto.base);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DetailsReq_Options::~DetailsReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DetailsReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DetailsReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DetailsReq_Options::ArenaDtor(void* object) {
  DetailsReq_Options* _this = reinterpret_cast< DetailsReq_Options* >(object);
  (void)_this;
}
void DetailsReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DetailsReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DetailsReq_Options& DetailsReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DetailsReq_Options_users_2eproto.base);
  return *internal_default_instance();
}


void DetailsReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DetailsReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  login_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DetailsReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string login_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_login_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.DetailsReq.Options.login_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DetailsReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DetailsReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login_name().data(), static_cast<int>(this->_internal_login_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.DetailsReq.Options.login_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DetailsReq.Options)
  return target;
}

size_t DetailsReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DetailsReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetailsReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DetailsReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const DetailsReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DetailsReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DetailsReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DetailsReq.Options)
    MergeFrom(*source);
  }
}

void DetailsReq_Options::MergeFrom(const DetailsReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DetailsReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login_name().size() > 0) {
    _internal_set_login_name(from._internal_login_name());
  }
}

void DetailsReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DetailsReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailsReq_Options::CopyFrom(const DetailsReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DetailsReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailsReq_Options::IsInitialized() const {
  return true;
}

void DetailsReq_Options::InternalSwap(DetailsReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  login_name_.Swap(&other->login_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DetailsReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DetailsReq::InitAsDefaultInstance() {
  ::event_store::client::users::_DetailsReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::users::DetailsReq_Options*>(
      ::event_store::client::users::DetailsReq_Options::internal_default_instance());
}
class DetailsReq::_Internal {
 public:
  static const ::event_store::client::users::DetailsReq_Options& options(const DetailsReq* msg);
};

const ::event_store::client::users::DetailsReq_Options&
DetailsReq::_Internal::options(const DetailsReq* msg) {
  return *msg->options_;
}
DetailsReq::DetailsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DetailsReq)
}
DetailsReq::DetailsReq(const DetailsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::users::DetailsReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DetailsReq)
}

void DetailsReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DetailsReq_users_2eproto.base);
  options_ = nullptr;
}

DetailsReq::~DetailsReq() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DetailsReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DetailsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void DetailsReq::ArenaDtor(void* object) {
  DetailsReq* _this = reinterpret_cast< DetailsReq* >(object);
  (void)_this;
}
void DetailsReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DetailsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DetailsReq& DetailsReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DetailsReq_users_2eproto.base);
  return *internal_default_instance();
}


void DetailsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DetailsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DetailsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.users.DetailsReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DetailsReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DetailsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.users.DetailsReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DetailsReq)
  return target;
}

size_t DetailsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DetailsReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.users.DetailsReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetailsReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DetailsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DetailsReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DetailsReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DetailsReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DetailsReq)
    MergeFrom(*source);
  }
}

void DetailsReq::MergeFrom(const DetailsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DetailsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::users::DetailsReq_Options::MergeFrom(from._internal_options());
  }
}

void DetailsReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DetailsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailsReq::CopyFrom(const DetailsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DetailsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailsReq::IsInitialized() const {
  return true;
}

void DetailsReq::InternalSwap(DetailsReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DetailsReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DetailsResp_UserDetails_DateTime::InitAsDefaultInstance() {
}
class DetailsResp_UserDetails_DateTime::_Internal {
 public:
};

DetailsResp_UserDetails_DateTime::DetailsResp_UserDetails_DateTime(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DetailsResp.UserDetails.DateTime)
}
DetailsResp_UserDetails_DateTime::DetailsResp_UserDetails_DateTime(const DetailsResp_UserDetails_DateTime& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ticks_since_epoch_ = from.ticks_since_epoch_;
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DetailsResp.UserDetails.DateTime)
}

void DetailsResp_UserDetails_DateTime::SharedCtor() {
  ticks_since_epoch_ = PROTOBUF_LONGLONG(0);
}

DetailsResp_UserDetails_DateTime::~DetailsResp_UserDetails_DateTime() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DetailsResp.UserDetails.DateTime)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DetailsResp_UserDetails_DateTime::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DetailsResp_UserDetails_DateTime::ArenaDtor(void* object) {
  DetailsResp_UserDetails_DateTime* _this = reinterpret_cast< DetailsResp_UserDetails_DateTime* >(object);
  (void)_this;
}
void DetailsResp_UserDetails_DateTime::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DetailsResp_UserDetails_DateTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DetailsResp_UserDetails_DateTime& DetailsResp_UserDetails_DateTime::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DetailsResp_UserDetails_DateTime_users_2eproto.base);
  return *internal_default_instance();
}


void DetailsResp_UserDetails_DateTime::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DetailsResp.UserDetails.DateTime)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticks_since_epoch_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DetailsResp_UserDetails_DateTime::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 ticks_since_epoch = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ticks_since_epoch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DetailsResp_UserDetails_DateTime::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DetailsResp.UserDetails.DateTime)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ticks_since_epoch = 1;
  if (this->ticks_since_epoch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_ticks_since_epoch(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DetailsResp.UserDetails.DateTime)
  return target;
}

size_t DetailsResp_UserDetails_DateTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DetailsResp.UserDetails.DateTime)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 ticks_since_epoch = 1;
  if (this->ticks_since_epoch() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ticks_since_epoch());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetailsResp_UserDetails_DateTime::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DetailsResp.UserDetails.DateTime)
  GOOGLE_DCHECK_NE(&from, this);
  const DetailsResp_UserDetails_DateTime* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DetailsResp_UserDetails_DateTime>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DetailsResp.UserDetails.DateTime)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DetailsResp.UserDetails.DateTime)
    MergeFrom(*source);
  }
}

void DetailsResp_UserDetails_DateTime::MergeFrom(const DetailsResp_UserDetails_DateTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DetailsResp.UserDetails.DateTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticks_since_epoch() != 0) {
    _internal_set_ticks_since_epoch(from._internal_ticks_since_epoch());
  }
}

void DetailsResp_UserDetails_DateTime::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DetailsResp.UserDetails.DateTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailsResp_UserDetails_DateTime::CopyFrom(const DetailsResp_UserDetails_DateTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DetailsResp.UserDetails.DateTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailsResp_UserDetails_DateTime::IsInitialized() const {
  return true;
}

void DetailsResp_UserDetails_DateTime::InternalSwap(DetailsResp_UserDetails_DateTime* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(ticks_since_epoch_, other->ticks_since_epoch_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DetailsResp_UserDetails_DateTime::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DetailsResp_UserDetails::InitAsDefaultInstance() {
  ::event_store::client::users::_DetailsResp_UserDetails_default_instance_._instance.get_mutable()->last_updated_ = const_cast< ::event_store::client::users::DetailsResp_UserDetails_DateTime*>(
      ::event_store::client::users::DetailsResp_UserDetails_DateTime::internal_default_instance());
}
class DetailsResp_UserDetails::_Internal {
 public:
  static const ::event_store::client::users::DetailsResp_UserDetails_DateTime& last_updated(const DetailsResp_UserDetails* msg);
};

const ::event_store::client::users::DetailsResp_UserDetails_DateTime&
DetailsResp_UserDetails::_Internal::last_updated(const DetailsResp_UserDetails* msg) {
  return *msg->last_updated_;
}
DetailsResp_UserDetails::DetailsResp_UserDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DetailsResp.UserDetails)
}
DetailsResp_UserDetails::DetailsResp_UserDetails(const DetailsResp_UserDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login_name().empty()) {
    login_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login_name(),
      GetArena());
  }
  full_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_full_name().empty()) {
    full_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_full_name(),
      GetArena());
  }
  if (from._internal_has_last_updated()) {
    last_updated_ = new ::event_store::client::users::DetailsResp_UserDetails_DateTime(*from.last_updated_);
  } else {
    last_updated_ = nullptr;
  }
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DetailsResp.UserDetails)
}

void DetailsResp_UserDetails::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DetailsResp_UserDetails_users_2eproto.base);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  full_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_updated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disabled_) -
      reinterpret_cast<char*>(&last_updated_)) + sizeof(disabled_));
}

DetailsResp_UserDetails::~DetailsResp_UserDetails() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DetailsResp.UserDetails)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DetailsResp_UserDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  full_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete last_updated_;
}

void DetailsResp_UserDetails::ArenaDtor(void* object) {
  DetailsResp_UserDetails* _this = reinterpret_cast< DetailsResp_UserDetails* >(object);
  (void)_this;
}
void DetailsResp_UserDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DetailsResp_UserDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DetailsResp_UserDetails& DetailsResp_UserDetails::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DetailsResp_UserDetails_users_2eproto.base);
  return *internal_default_instance();
}


void DetailsResp_UserDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DetailsResp.UserDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  login_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  full_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
  disabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DetailsResp_UserDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string login_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_login_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.DetailsResp.UserDetails.login_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string full_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_full_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.DetailsResp.UserDetails.full_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string groups = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_groups();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.DetailsResp.UserDetails.groups"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .event_store.client.users.DetailsResp.UserDetails.DateTime last_updated = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_updated(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool disabled = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          disabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DetailsResp_UserDetails::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DetailsResp.UserDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login_name().data(), static_cast<int>(this->_internal_login_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.DetailsResp.UserDetails.login_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login_name(), target);
  }

  // string full_name = 2;
  if (this->full_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_full_name().data(), static_cast<int>(this->_internal_full_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.DetailsResp.UserDetails.full_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_full_name(), target);
  }

  // repeated string groups = 3;
  for (int i = 0, n = this->_internal_groups_size(); i < n; i++) {
    const auto& s = this->_internal_groups(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.DetailsResp.UserDetails.groups");
    target = stream->WriteString(3, s, target);
  }

  // .event_store.client.users.DetailsResp.UserDetails.DateTime last_updated = 4;
  if (this->has_last_updated()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::last_updated(this), target, stream);
  }

  // bool disabled = 5;
  if (this->disabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_disabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DetailsResp.UserDetails)
  return target;
}

size_t DetailsResp_UserDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DetailsResp.UserDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string groups = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(groups_.size());
  for (int i = 0, n = groups_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      groups_.Get(i));
  }

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_name());
  }

  // string full_name = 2;
  if (this->full_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_full_name());
  }

  // .event_store.client.users.DetailsResp.UserDetails.DateTime last_updated = 4;
  if (this->has_last_updated()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_updated_);
  }

  // bool disabled = 5;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetailsResp_UserDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DetailsResp.UserDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const DetailsResp_UserDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DetailsResp_UserDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DetailsResp.UserDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DetailsResp.UserDetails)
    MergeFrom(*source);
  }
}

void DetailsResp_UserDetails::MergeFrom(const DetailsResp_UserDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DetailsResp.UserDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
  if (from.login_name().size() > 0) {
    _internal_set_login_name(from._internal_login_name());
  }
  if (from.full_name().size() > 0) {
    _internal_set_full_name(from._internal_full_name());
  }
  if (from.has_last_updated()) {
    _internal_mutable_last_updated()->::event_store::client::users::DetailsResp_UserDetails_DateTime::MergeFrom(from._internal_last_updated());
  }
  if (from.disabled() != 0) {
    _internal_set_disabled(from._internal_disabled());
  }
}

void DetailsResp_UserDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DetailsResp.UserDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailsResp_UserDetails::CopyFrom(const DetailsResp_UserDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DetailsResp.UserDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailsResp_UserDetails::IsInitialized() const {
  return true;
}

void DetailsResp_UserDetails::InternalSwap(DetailsResp_UserDetails* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groups_.InternalSwap(&other->groups_);
  login_name_.Swap(&other->login_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  full_name_.Swap(&other->full_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DetailsResp_UserDetails, disabled_)
      + sizeof(DetailsResp_UserDetails::disabled_)
      - PROTOBUF_FIELD_OFFSET(DetailsResp_UserDetails, last_updated_)>(
          reinterpret_cast<char*>(&last_updated_),
          reinterpret_cast<char*>(&other->last_updated_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DetailsResp_UserDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DetailsResp::InitAsDefaultInstance() {
  ::event_store::client::users::_DetailsResp_default_instance_._instance.get_mutable()->user_details_ = const_cast< ::event_store::client::users::DetailsResp_UserDetails*>(
      ::event_store::client::users::DetailsResp_UserDetails::internal_default_instance());
}
class DetailsResp::_Internal {
 public:
  static const ::event_store::client::users::DetailsResp_UserDetails& user_details(const DetailsResp* msg);
};

const ::event_store::client::users::DetailsResp_UserDetails&
DetailsResp::_Internal::user_details(const DetailsResp* msg) {
  return *msg->user_details_;
}
DetailsResp::DetailsResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.DetailsResp)
}
DetailsResp::DetailsResp(const DetailsResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_user_details()) {
    user_details_ = new ::event_store::client::users::DetailsResp_UserDetails(*from.user_details_);
  } else {
    user_details_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.DetailsResp)
}

void DetailsResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DetailsResp_users_2eproto.base);
  user_details_ = nullptr;
}

DetailsResp::~DetailsResp() {
  // @@protoc_insertion_point(destructor:event_store.client.users.DetailsResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DetailsResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete user_details_;
}

void DetailsResp::ArenaDtor(void* object) {
  DetailsResp* _this = reinterpret_cast< DetailsResp* >(object);
  (void)_this;
}
void DetailsResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DetailsResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DetailsResp& DetailsResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DetailsResp_users_2eproto.base);
  return *internal_default_instance();
}


void DetailsResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.DetailsResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && user_details_ != nullptr) {
    delete user_details_;
  }
  user_details_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DetailsResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.users.DetailsResp.UserDetails user_details = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_details(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DetailsResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.DetailsResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.users.DetailsResp.UserDetails user_details = 1;
  if (this->has_user_details()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::user_details(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.DetailsResp)
  return target;
}

size_t DetailsResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.DetailsResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.users.DetailsResp.UserDetails user_details = 1;
  if (this->has_user_details()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_details_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetailsResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.DetailsResp)
  GOOGLE_DCHECK_NE(&from, this);
  const DetailsResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DetailsResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.DetailsResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.DetailsResp)
    MergeFrom(*source);
  }
}

void DetailsResp::MergeFrom(const DetailsResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.DetailsResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_details()) {
    _internal_mutable_user_details()->::event_store::client::users::DetailsResp_UserDetails::MergeFrom(from._internal_user_details());
  }
}

void DetailsResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.DetailsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailsResp::CopyFrom(const DetailsResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.DetailsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailsResp::IsInitialized() const {
  return true;
}

void DetailsResp::InternalSwap(DetailsResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(user_details_, other->user_details_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DetailsResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChangePasswordReq_Options::InitAsDefaultInstance() {
}
class ChangePasswordReq_Options::_Internal {
 public:
};

ChangePasswordReq_Options::ChangePasswordReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.ChangePasswordReq.Options)
}
ChangePasswordReq_Options::ChangePasswordReq_Options(const ChangePasswordReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login_name().empty()) {
    login_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login_name(),
      GetArena());
  }
  current_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_current_password().empty()) {
    current_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_current_password(),
      GetArena());
  }
  new_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_password().empty()) {
    new_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_new_password(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.ChangePasswordReq.Options)
}

void ChangePasswordReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChangePasswordReq_Options_users_2eproto.base);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  current_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ChangePasswordReq_Options::~ChangePasswordReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.users.ChangePasswordReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChangePasswordReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  current_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChangePasswordReq_Options::ArenaDtor(void* object) {
  ChangePasswordReq_Options* _this = reinterpret_cast< ChangePasswordReq_Options* >(object);
  (void)_this;
}
void ChangePasswordReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChangePasswordReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangePasswordReq_Options& ChangePasswordReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChangePasswordReq_Options_users_2eproto.base);
  return *internal_default_instance();
}


void ChangePasswordReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.ChangePasswordReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  login_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  current_password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangePasswordReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string login_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_login_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.ChangePasswordReq.Options.login_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string current_password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_current_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.ChangePasswordReq.Options.current_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string new_password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_new_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.ChangePasswordReq.Options.new_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChangePasswordReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.ChangePasswordReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login_name().data(), static_cast<int>(this->_internal_login_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.ChangePasswordReq.Options.login_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login_name(), target);
  }

  // string current_password = 2;
  if (this->current_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_current_password().data(), static_cast<int>(this->_internal_current_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.ChangePasswordReq.Options.current_password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_current_password(), target);
  }

  // string new_password = 3;
  if (this->new_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_password().data(), static_cast<int>(this->_internal_new_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.ChangePasswordReq.Options.new_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_new_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.ChangePasswordReq.Options)
  return target;
}

size_t ChangePasswordReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.ChangePasswordReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_name());
  }

  // string current_password = 2;
  if (this->current_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_current_password());
  }

  // string new_password = 3;
  if (this->new_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangePasswordReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.ChangePasswordReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangePasswordReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChangePasswordReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.ChangePasswordReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.ChangePasswordReq.Options)
    MergeFrom(*source);
  }
}

void ChangePasswordReq_Options::MergeFrom(const ChangePasswordReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.ChangePasswordReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login_name().size() > 0) {
    _internal_set_login_name(from._internal_login_name());
  }
  if (from.current_password().size() > 0) {
    _internal_set_current_password(from._internal_current_password());
  }
  if (from.new_password().size() > 0) {
    _internal_set_new_password(from._internal_new_password());
  }
}

void ChangePasswordReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.ChangePasswordReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangePasswordReq_Options::CopyFrom(const ChangePasswordReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.ChangePasswordReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangePasswordReq_Options::IsInitialized() const {
  return true;
}

void ChangePasswordReq_Options::InternalSwap(ChangePasswordReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  login_name_.Swap(&other->login_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  current_password_.Swap(&other->current_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_password_.Swap(&other->new_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangePasswordReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChangePasswordReq::InitAsDefaultInstance() {
  ::event_store::client::users::_ChangePasswordReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::users::ChangePasswordReq_Options*>(
      ::event_store::client::users::ChangePasswordReq_Options::internal_default_instance());
}
class ChangePasswordReq::_Internal {
 public:
  static const ::event_store::client::users::ChangePasswordReq_Options& options(const ChangePasswordReq* msg);
};

const ::event_store::client::users::ChangePasswordReq_Options&
ChangePasswordReq::_Internal::options(const ChangePasswordReq* msg) {
  return *msg->options_;
}
ChangePasswordReq::ChangePasswordReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.ChangePasswordReq)
}
ChangePasswordReq::ChangePasswordReq(const ChangePasswordReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::users::ChangePasswordReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.ChangePasswordReq)
}

void ChangePasswordReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChangePasswordReq_users_2eproto.base);
  options_ = nullptr;
}

ChangePasswordReq::~ChangePasswordReq() {
  // @@protoc_insertion_point(destructor:event_store.client.users.ChangePasswordReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChangePasswordReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void ChangePasswordReq::ArenaDtor(void* object) {
  ChangePasswordReq* _this = reinterpret_cast< ChangePasswordReq* >(object);
  (void)_this;
}
void ChangePasswordReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChangePasswordReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangePasswordReq& ChangePasswordReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChangePasswordReq_users_2eproto.base);
  return *internal_default_instance();
}


void ChangePasswordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.ChangePasswordReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangePasswordReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.users.ChangePasswordReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChangePasswordReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.ChangePasswordReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.users.ChangePasswordReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.ChangePasswordReq)
  return target;
}

size_t ChangePasswordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.ChangePasswordReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.users.ChangePasswordReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangePasswordReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.ChangePasswordReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangePasswordReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChangePasswordReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.ChangePasswordReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.ChangePasswordReq)
    MergeFrom(*source);
  }
}

void ChangePasswordReq::MergeFrom(const ChangePasswordReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.ChangePasswordReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::users::ChangePasswordReq_Options::MergeFrom(from._internal_options());
  }
}

void ChangePasswordReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.ChangePasswordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangePasswordReq::CopyFrom(const ChangePasswordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.ChangePasswordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangePasswordReq::IsInitialized() const {
  return true;
}

void ChangePasswordReq::InternalSwap(ChangePasswordReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangePasswordReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChangePasswordResp::InitAsDefaultInstance() {
}
class ChangePasswordResp::_Internal {
 public:
};

ChangePasswordResp::ChangePasswordResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.ChangePasswordResp)
}
ChangePasswordResp::ChangePasswordResp(const ChangePasswordResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.ChangePasswordResp)
}

void ChangePasswordResp::SharedCtor() {
}

ChangePasswordResp::~ChangePasswordResp() {
  // @@protoc_insertion_point(destructor:event_store.client.users.ChangePasswordResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChangePasswordResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ChangePasswordResp::ArenaDtor(void* object) {
  ChangePasswordResp* _this = reinterpret_cast< ChangePasswordResp* >(object);
  (void)_this;
}
void ChangePasswordResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChangePasswordResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangePasswordResp& ChangePasswordResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChangePasswordResp_users_2eproto.base);
  return *internal_default_instance();
}


void ChangePasswordResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.ChangePasswordResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangePasswordResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChangePasswordResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.ChangePasswordResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.ChangePasswordResp)
  return target;
}

size_t ChangePasswordResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.ChangePasswordResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangePasswordResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.ChangePasswordResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangePasswordResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChangePasswordResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.ChangePasswordResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.ChangePasswordResp)
    MergeFrom(*source);
  }
}

void ChangePasswordResp::MergeFrom(const ChangePasswordResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.ChangePasswordResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ChangePasswordResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.ChangePasswordResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangePasswordResp::CopyFrom(const ChangePasswordResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.ChangePasswordResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangePasswordResp::IsInitialized() const {
  return true;
}

void ChangePasswordResp::InternalSwap(ChangePasswordResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangePasswordResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetPasswordReq_Options::InitAsDefaultInstance() {
}
class ResetPasswordReq_Options::_Internal {
 public:
};

ResetPasswordReq_Options::ResetPasswordReq_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.ResetPasswordReq.Options)
}
ResetPasswordReq_Options::ResetPasswordReq_Options(const ResetPasswordReq_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login_name().empty()) {
    login_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login_name(),
      GetArena());
  }
  new_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_password().empty()) {
    new_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_new_password(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.ResetPasswordReq.Options)
}

void ResetPasswordReq_Options::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResetPasswordReq_Options_users_2eproto.base);
  login_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResetPasswordReq_Options::~ResetPasswordReq_Options() {
  // @@protoc_insertion_point(destructor:event_store.client.users.ResetPasswordReq.Options)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetPasswordReq_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResetPasswordReq_Options::ArenaDtor(void* object) {
  ResetPasswordReq_Options* _this = reinterpret_cast< ResetPasswordReq_Options* >(object);
  (void)_this;
}
void ResetPasswordReq_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetPasswordReq_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetPasswordReq_Options& ResetPasswordReq_Options::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetPasswordReq_Options_users_2eproto.base);
  return *internal_default_instance();
}


void ResetPasswordReq_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.ResetPasswordReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  login_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetPasswordReq_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string login_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_login_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.ResetPasswordReq.Options.login_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string new_password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_new_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "event_store.client.users.ResetPasswordReq.Options.new_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetPasswordReq_Options::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.ResetPasswordReq.Options)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login_name().data(), static_cast<int>(this->_internal_login_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.ResetPasswordReq.Options.login_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login_name(), target);
  }

  // string new_password = 2;
  if (this->new_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_password().data(), static_cast<int>(this->_internal_new_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "event_store.client.users.ResetPasswordReq.Options.new_password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_new_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.ResetPasswordReq.Options)
  return target;
}

size_t ResetPasswordReq_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.ResetPasswordReq.Options)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login_name = 1;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_name());
  }

  // string new_password = 2;
  if (this->new_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetPasswordReq_Options::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.ResetPasswordReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetPasswordReq_Options* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetPasswordReq_Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.ResetPasswordReq.Options)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.ResetPasswordReq.Options)
    MergeFrom(*source);
  }
}

void ResetPasswordReq_Options::MergeFrom(const ResetPasswordReq_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.ResetPasswordReq.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login_name().size() > 0) {
    _internal_set_login_name(from._internal_login_name());
  }
  if (from.new_password().size() > 0) {
    _internal_set_new_password(from._internal_new_password());
  }
}

void ResetPasswordReq_Options::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.ResetPasswordReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetPasswordReq_Options::CopyFrom(const ResetPasswordReq_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.ResetPasswordReq.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetPasswordReq_Options::IsInitialized() const {
  return true;
}

void ResetPasswordReq_Options::InternalSwap(ResetPasswordReq_Options* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  login_name_.Swap(&other->login_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_password_.Swap(&other->new_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetPasswordReq_Options::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetPasswordReq::InitAsDefaultInstance() {
  ::event_store::client::users::_ResetPasswordReq_default_instance_._instance.get_mutable()->options_ = const_cast< ::event_store::client::users::ResetPasswordReq_Options*>(
      ::event_store::client::users::ResetPasswordReq_Options::internal_default_instance());
}
class ResetPasswordReq::_Internal {
 public:
  static const ::event_store::client::users::ResetPasswordReq_Options& options(const ResetPasswordReq* msg);
};

const ::event_store::client::users::ResetPasswordReq_Options&
ResetPasswordReq::_Internal::options(const ResetPasswordReq* msg) {
  return *msg->options_;
}
ResetPasswordReq::ResetPasswordReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.ResetPasswordReq)
}
ResetPasswordReq::ResetPasswordReq(const ResetPasswordReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::event_store::client::users::ResetPasswordReq_Options(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.ResetPasswordReq)
}

void ResetPasswordReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResetPasswordReq_users_2eproto.base);
  options_ = nullptr;
}

ResetPasswordReq::~ResetPasswordReq() {
  // @@protoc_insertion_point(destructor:event_store.client.users.ResetPasswordReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetPasswordReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void ResetPasswordReq::ArenaDtor(void* object) {
  ResetPasswordReq* _this = reinterpret_cast< ResetPasswordReq* >(object);
  (void)_this;
}
void ResetPasswordReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetPasswordReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetPasswordReq& ResetPasswordReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetPasswordReq_users_2eproto.base);
  return *internal_default_instance();
}


void ResetPasswordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.ResetPasswordReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetPasswordReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .event_store.client.users.ResetPasswordReq.Options options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetPasswordReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.ResetPasswordReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .event_store.client.users.ResetPasswordReq.Options options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.ResetPasswordReq)
  return target;
}

size_t ResetPasswordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.ResetPasswordReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .event_store.client.users.ResetPasswordReq.Options options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetPasswordReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.ResetPasswordReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetPasswordReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetPasswordReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.ResetPasswordReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.ResetPasswordReq)
    MergeFrom(*source);
  }
}

void ResetPasswordReq::MergeFrom(const ResetPasswordReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.ResetPasswordReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::event_store::client::users::ResetPasswordReq_Options::MergeFrom(from._internal_options());
  }
}

void ResetPasswordReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.ResetPasswordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetPasswordReq::CopyFrom(const ResetPasswordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.ResetPasswordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetPasswordReq::IsInitialized() const {
  return true;
}

void ResetPasswordReq::InternalSwap(ResetPasswordReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetPasswordReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetPasswordResp::InitAsDefaultInstance() {
}
class ResetPasswordResp::_Internal {
 public:
};

ResetPasswordResp::ResetPasswordResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_store.client.users.ResetPasswordResp)
}
ResetPasswordResp::ResetPasswordResp(const ResetPasswordResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_store.client.users.ResetPasswordResp)
}

void ResetPasswordResp::SharedCtor() {
}

ResetPasswordResp::~ResetPasswordResp() {
  // @@protoc_insertion_point(destructor:event_store.client.users.ResetPasswordResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetPasswordResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResetPasswordResp::ArenaDtor(void* object) {
  ResetPasswordResp* _this = reinterpret_cast< ResetPasswordResp* >(object);
  (void)_this;
}
void ResetPasswordResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetPasswordResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetPasswordResp& ResetPasswordResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetPasswordResp_users_2eproto.base);
  return *internal_default_instance();
}


void ResetPasswordResp::Clear() {
// @@protoc_insertion_point(message_clear_start:event_store.client.users.ResetPasswordResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetPasswordResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetPasswordResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_store.client.users.ResetPasswordResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_store.client.users.ResetPasswordResp)
  return target;
}

size_t ResetPasswordResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_store.client.users.ResetPasswordResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetPasswordResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_store.client.users.ResetPasswordResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetPasswordResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetPasswordResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_store.client.users.ResetPasswordResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_store.client.users.ResetPasswordResp)
    MergeFrom(*source);
  }
}

void ResetPasswordResp::MergeFrom(const ResetPasswordResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_store.client.users.ResetPasswordResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResetPasswordResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_store.client.users.ResetPasswordResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetPasswordResp::CopyFrom(const ResetPasswordResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_store.client.users.ResetPasswordResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetPasswordResp::IsInitialized() const {
  return true;
}

void ResetPasswordResp::InternalSwap(ResetPasswordResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetPasswordResp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace users
}  // namespace client
}  // namespace event_store
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::event_store::client::users::CreateReq_Options* Arena::CreateMaybeMessage< ::event_store::client::users::CreateReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::CreateReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::CreateReq* Arena::CreateMaybeMessage< ::event_store::client::users::CreateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::CreateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::CreateResp* Arena::CreateMaybeMessage< ::event_store::client::users::CreateResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::CreateResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::UpdateReq_Options* Arena::CreateMaybeMessage< ::event_store::client::users::UpdateReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::UpdateReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::UpdateReq* Arena::CreateMaybeMessage< ::event_store::client::users::UpdateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::UpdateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::UpdateResp* Arena::CreateMaybeMessage< ::event_store::client::users::UpdateResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::UpdateResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DeleteReq_Options* Arena::CreateMaybeMessage< ::event_store::client::users::DeleteReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DeleteReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DeleteReq* Arena::CreateMaybeMessage< ::event_store::client::users::DeleteReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DeleteReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DeleteResp* Arena::CreateMaybeMessage< ::event_store::client::users::DeleteResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DeleteResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::EnableReq_Options* Arena::CreateMaybeMessage< ::event_store::client::users::EnableReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::EnableReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::EnableReq* Arena::CreateMaybeMessage< ::event_store::client::users::EnableReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::EnableReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::EnableResp* Arena::CreateMaybeMessage< ::event_store::client::users::EnableResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::EnableResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DisableReq_Options* Arena::CreateMaybeMessage< ::event_store::client::users::DisableReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DisableReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DisableReq* Arena::CreateMaybeMessage< ::event_store::client::users::DisableReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DisableReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DisableResp* Arena::CreateMaybeMessage< ::event_store::client::users::DisableResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DisableResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DetailsReq_Options* Arena::CreateMaybeMessage< ::event_store::client::users::DetailsReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DetailsReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DetailsReq* Arena::CreateMaybeMessage< ::event_store::client::users::DetailsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DetailsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DetailsResp_UserDetails_DateTime* Arena::CreateMaybeMessage< ::event_store::client::users::DetailsResp_UserDetails_DateTime >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DetailsResp_UserDetails_DateTime >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DetailsResp_UserDetails* Arena::CreateMaybeMessage< ::event_store::client::users::DetailsResp_UserDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DetailsResp_UserDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::DetailsResp* Arena::CreateMaybeMessage< ::event_store::client::users::DetailsResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::DetailsResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::ChangePasswordReq_Options* Arena::CreateMaybeMessage< ::event_store::client::users::ChangePasswordReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::ChangePasswordReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::ChangePasswordReq* Arena::CreateMaybeMessage< ::event_store::client::users::ChangePasswordReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::ChangePasswordReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::ChangePasswordResp* Arena::CreateMaybeMessage< ::event_store::client::users::ChangePasswordResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::ChangePasswordResp >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::ResetPasswordReq_Options* Arena::CreateMaybeMessage< ::event_store::client::users::ResetPasswordReq_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::ResetPasswordReq_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::ResetPasswordReq* Arena::CreateMaybeMessage< ::event_store::client::users::ResetPasswordReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::ResetPasswordReq >(arena);
}
template<> PROTOBUF_NOINLINE ::event_store::client::users::ResetPasswordResp* Arena::CreateMaybeMessage< ::event_store::client::users::ResetPasswordResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_store::client::users::ResetPasswordResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
